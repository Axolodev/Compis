Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     empty -> <empty>
Rule 2     inicio -> crear_var_glob crear_funciones KW_INICIO funcion
Rule 3     crear_funciones -> funcion crear_funciones
Rule 4     crear_funciones -> empty
Rule 5     crear_var_glob -> crear_var crear_var_glob
Rule 6     crear_var_glob -> empty
Rule 7     funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
Rule 8     print_id -> ID
Rule 9     tipo_funcion -> tipo
Rule 10    tipo_funcion -> empty
Rule 11    tipo -> KW_ENTERO
Rule 12    tipo -> KW_FLOTANTE
Rule 13    tipo -> KW_STRING
Rule 14    parametros -> toma_parametro
Rule 15    parametros -> empty
Rule 16    toma_parametro -> tipo ID otro_parametro
Rule 17    otro_parametro -> print_coma toma_parametro
Rule 18    otro_parametro -> empty
Rule 19    print_coma -> OP_COMA
Rule 20    bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER
Rule 21    crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var
Rule 22    crear_var -> empty
Rule 23    def_var -> print_id arr_not arr_not
Rule 24    arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
Rule 25    otra_var -> print_coma def_var otra_var
Rule 26    otra_var -> empty
Rule 27    estatuto -> asignacion
Rule 28    estatuto -> condicion
Rule 29    estatuto -> ciclo
Rule 30    estatuto -> ejec_funcion
Rule 31    estatuto -> funcion_predef
Rule 32    estatuto_rec -> estatuto estatuto_rec
Rule 33    estatuto_rec -> empty
Rule 34    asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
Rule 35    ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
Rule 36    ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 37    ejec_funcion_medio -> expresion ejec_funcion_cont
Rule 38    ejec_funcion_medio -> empty
Rule 39    ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont
Rule 40    ejec_funcion_cont -> empty
Rule 41    funcion_predef -> camina
Rule 42    funcion_predef -> gira
Rule 43    funcion_predef -> mira
Rule 44    funcion_predef -> a_string
Rule 45    funcion_predef -> a_entero
Rule 46    funcion_predef -> a_flotante
Rule 47    funcion_predef -> reiniciar
Rule 48    funcion_predef -> input
Rule 49    funcion_predef -> output
Rule 50    funcion_predef -> salta_a
Rule 51    expresion -> comp_or otra_expresion_or
Rule 52    otra_expresion_or -> OP_OR comp_or
Rule 53    otra_expresion_or -> empty
Rule 54    comp_or -> comp_and otra_expresion_and
Rule 55    otra_expresion_and -> OP_AND comp_and
Rule 56    otra_expresion_and -> empty
Rule 57    comp_and -> exp comp_and_end
Rule 58    comp_and_end -> op_comparador exp
Rule 59    comp_and_end -> empty
Rule 60    op_comparador -> OP_COMPARADOR
Rule 61    exp -> termino exp2
Rule 62    exp2 -> OP_TERMINO exp
Rule 63    exp2 -> empty
Rule 64    termino -> factor termino2
Rule 65    termino2 -> OP_FACTOR termino
Rule 66    termino2 -> empty
Rule 67    factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
Rule 68    factor -> OP_TERMINO var_cte
Rule 69    factor -> var_cte
Rule 70    camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 71    gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 72    mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 73    a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 74    a_string2 -> CTE_E
Rule 75    a_string2 -> CTE_F
Rule 76    a_string2 -> ID arr_not arr_not
Rule 77    a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 78    a_entero2 -> CTE_F
Rule 79    a_entero2 -> concat_string
Rule 80    condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
Rule 81    si_no -> KW_SI_NO bloque_est
Rule 82    si_no -> empty
Rule 83    bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER
Rule 84    var_cte -> ID var_cte2
Rule 85    var_cte -> CTE_E
Rule 86    var_cte -> CTE_F
Rule 87    var_cte -> concat_string
Rule 88    var_cte -> KW_VERDADERO
Rule 89    var_cte -> KW_FALSO
Rule 90    var_cte -> KW_NORTE
Rule 91    var_cte -> KW_SUR
Rule 92    var_cte -> KW_ESTE
Rule 93    var_cte -> KW_OESTE
Rule 94    var_cte -> KW_ANCHO
Rule 95    var_cte -> KW_ALTO
Rule 96    var_cte2 -> arr_not arr_not
Rule 97    var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER
Rule 98    var_cte3 -> expresion var_cte4
Rule 99    var_cte4 -> OP_COMA expresion var_cte4
Rule 100   var_cte4 -> empty
Rule 101   concat_string -> CTE_S concat_string2
Rule 102   concat_string2 -> OP_PUNTO CTE_S
Rule 103   concat_string2 -> empty
Rule 104   a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 105   a_flotante2 -> concat_string
Rule 106   a_flotante2 -> CTE_F
Rule 107   reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 108   input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 109   input2 -> OP_COMA ID input2
Rule 110   input2 -> empty
Rule 111   output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 112   salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

Terminals, with rules where they appear

CTE_E                : 24 74 85 112 112
CTE_F                : 75 78 86 106
CTE_S                : 101 102
ID                   : 8 16 34 36 76 84 108 109
KW_ALTO              : 95
KW_ANCHO             : 94
KW_A_ENTERO          : 77
KW_A_FLOTANTE        : 104
KW_A_STRING          : 73
KW_CAMINA            : 70
KW_ENTERO            : 11
KW_ESTE              : 92
KW_FALSO             : 89
KW_FLOTANTE          : 12
KW_FUNCION           : 7
KW_GIRA              : 71
KW_INICIO            : 2
KW_INPUT             : 108
KW_MIENTRAS          : 35
KW_MIRA              : 72
KW_NORTE             : 90
KW_OESTE             : 93
KW_OUTPUT            : 111
KW_REINICIAR         : 107
KW_SALTA_A           : 112
KW_SI                : 80
KW_SI_NO             : 81
KW_STRING            : 13
KW_SUR               : 91
KW_VERDADERO         : 88
OP_AND               : 55
OP_ASIGNACION        : 34
OP_COMA              : 19 39 99 109 112
OP_COMPARADOR        : 60
OP_CORCHETE_DER      : 24
OP_CORCHETE_IZQ      : 24
OP_FACTOR            : 65
OP_LLAVE_DER         : 20 83
OP_LLAVE_IZQ         : 20 83
OP_OR                : 52
OP_PARENTESIS_DER    : 7 35 36 67 70 71 72 73 77 80 97 104 107 108 111 112
OP_PARENTESIS_IZQ    : 7 35 36 67 70 71 72 73 77 80 97 104 107 108 111 112
OP_PUNTO             : 102
OP_PUNTO_COMA        : 21 34 36 70 71 72 73 77 104 107 108 111 112
OP_TERMINO           : 62 68
error                : 

Nonterminals, with rules where they appear

a_entero             : 45
a_entero2            : 77
a_flotante           : 46
a_flotante2          : 104
a_string             : 44
a_string2            : 73
arr_not              : 23 23 34 34 76 76 96 96
asignacion           : 27
bloque_est           : 35 80 81
bloque_func          : 7
camina               : 41
ciclo                : 29
comp_and             : 54 55
comp_and_end         : 57
comp_or              : 51 52
concat_string        : 79 87 105 111
concat_string2       : 101
condicion            : 28
crear_funciones      : 2 3
crear_var            : 5 20 21
crear_var_glob       : 2 5
def_var              : 21 25
ejec_funcion         : 30
ejec_funcion_cont    : 37 39
ejec_funcion_medio   : 36
empty                : 4 6 10 15 18 22 26 33 38 40 53 56 59 63 66 82 100 103 110
estatuto             : 32 83
estatuto_rec         : 20 32
exp                  : 57 58 62
exp2                 : 61
expresion            : 34 35 37 39 67 70 71 72 80 98 99
factor               : 64
funcion              : 2 3
funcion_predef       : 31
gira                 : 42
inicio               : 0
input                : 48
input2               : 108 109
mira                 : 43
op_comparador        : 58
otra_expresion_and   : 54
otra_expresion_or    : 51
otra_var             : 21 25
otro_parametro       : 16
output               : 49
parametros           : 7
print_coma           : 17 25
print_id             : 7 23
reiniciar            : 47
salta_a              : 50
si_no                : 80
termino              : 61 65
termino2             : 64
tipo                 : 9 16 21
tipo_funcion         : 7
toma_parametro       : 14 17
var_cte              : 68 69
var_cte2             : 84
var_cte3             : 97
var_cte4             : 98 99

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (2) inicio -> . crear_var_glob crear_funciones KW_INICIO funcion
    (5) crear_var_glob -> . crear_var crear_var_glob
    (6) crear_var_glob -> . empty
    (21) crear_var -> . tipo def_var otra_var OP_PUNTO_COMA crear_var
    (22) crear_var -> . empty
    (1) empty -> .
    (11) tipo -> . KW_ENTERO
    (12) tipo -> . KW_FLOTANTE
    (13) tipo -> . KW_STRING

  ! shift/reduce conflict for KW_ENTERO resolved as shift
  ! shift/reduce conflict for KW_FLOTANTE resolved as shift
  ! shift/reduce conflict for KW_STRING resolved as shift
    KW_FUNCION      reduce using rule 1 (empty -> .)
    KW_INICIO       reduce using rule 1 (empty -> .)
    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 7

  ! KW_ENTERO       [ reduce using rule 1 (empty -> .) ]
  ! KW_FLOTANTE     [ reduce using rule 1 (empty -> .) ]
  ! KW_STRING       [ reduce using rule 1 (empty -> .) ]

    crear_var                      shift and go to state 2
    tipo                           shift and go to state 4
    crear_var_glob                 shift and go to state 5
    inicio                         shift and go to state 6
    empty                          shift and go to state 8

state 1

    (12) tipo -> KW_FLOTANTE .

    ID              reduce using rule 12 (tipo -> KW_FLOTANTE .)


state 2

    (5) crear_var_glob -> crear_var . crear_var_glob
    (5) crear_var_glob -> . crear_var crear_var_glob
    (6) crear_var_glob -> . empty
    (21) crear_var -> . tipo def_var otra_var OP_PUNTO_COMA crear_var
    (22) crear_var -> . empty
    (1) empty -> .
    (11) tipo -> . KW_ENTERO
    (12) tipo -> . KW_FLOTANTE
    (13) tipo -> . KW_STRING

  ! shift/reduce conflict for KW_ENTERO resolved as shift
  ! shift/reduce conflict for KW_FLOTANTE resolved as shift
  ! shift/reduce conflict for KW_STRING resolved as shift
    KW_FUNCION      reduce using rule 1 (empty -> .)
    KW_INICIO       reduce using rule 1 (empty -> .)
    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 7

  ! KW_ENTERO       [ reduce using rule 1 (empty -> .) ]
  ! KW_FLOTANTE     [ reduce using rule 1 (empty -> .) ]
  ! KW_STRING       [ reduce using rule 1 (empty -> .) ]

    crear_var                      shift and go to state 2
    tipo                           shift and go to state 4
    crear_var_glob                 shift and go to state 9
    empty                          shift and go to state 8

state 3

    (11) tipo -> KW_ENTERO .

    ID              reduce using rule 11 (tipo -> KW_ENTERO .)


state 4

    (21) crear_var -> tipo . def_var otra_var OP_PUNTO_COMA crear_var
    (23) def_var -> . print_id arr_not arr_not
    (8) print_id -> . ID

    ID              shift and go to state 11

    def_var                        shift and go to state 10
    print_id                       shift and go to state 12

state 5

    (2) inicio -> crear_var_glob . crear_funciones KW_INICIO funcion
    (3) crear_funciones -> . funcion crear_funciones
    (4) crear_funciones -> . empty
    (7) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (1) empty -> .

    KW_FUNCION      shift and go to state 13
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_funciones                shift and go to state 14
    funcion                        shift and go to state 16
    empty                          shift and go to state 15

state 6

    (0) S' -> inicio .



state 7

    (13) tipo -> KW_STRING .

    ID              reduce using rule 13 (tipo -> KW_STRING .)


state 8

    (6) crear_var_glob -> empty .
    (22) crear_var -> empty .

  ! reduce/reduce conflict for KW_FUNCION resolved using rule 6 (crear_var_glob -> empty .)
  ! reduce/reduce conflict for KW_INICIO resolved using rule 6 (crear_var_glob -> empty .)
    KW_FUNCION      reduce using rule 6 (crear_var_glob -> empty .)
    KW_INICIO       reduce using rule 6 (crear_var_glob -> empty .)
    KW_ENTERO       reduce using rule 22 (crear_var -> empty .)
    KW_FLOTANTE     reduce using rule 22 (crear_var -> empty .)
    KW_STRING       reduce using rule 22 (crear_var -> empty .)

  ! KW_FUNCION      [ reduce using rule 22 (crear_var -> empty .) ]
  ! KW_INICIO       [ reduce using rule 22 (crear_var -> empty .) ]


state 9

    (5) crear_var_glob -> crear_var crear_var_glob .

    KW_FUNCION      reduce using rule 5 (crear_var_glob -> crear_var crear_var_glob .)
    KW_INICIO       reduce using rule 5 (crear_var_glob -> crear_var crear_var_glob .)


state 10

    (21) crear_var -> tipo def_var . otra_var OP_PUNTO_COMA crear_var
    (25) otra_var -> . print_coma def_var otra_var
    (26) otra_var -> . empty
    (19) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 18
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_var                       shift and go to state 17
    print_coma                     shift and go to state 19
    empty                          shift and go to state 20

state 11

    (8) print_id -> ID .

    OP_CORCHETE_IZQ reduce using rule 8 (print_id -> ID .)
    OP_PARENTESIS_IZQ reduce using rule 8 (print_id -> ID .)


state 12

    (23) def_var -> print_id . arr_not arr_not
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 21

state 13

    (7) funcion -> KW_FUNCION . tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (9) tipo_funcion -> . tipo
    (10) tipo_funcion -> . empty
    (11) tipo -> . KW_ENTERO
    (12) tipo -> . KW_FLOTANTE
    (13) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 7
    ID              reduce using rule 1 (empty -> .)

    tipo                           shift and go to state 23
    tipo_funcion                   shift and go to state 24
    empty                          shift and go to state 25

state 14

    (2) inicio -> crear_var_glob crear_funciones . KW_INICIO funcion

    KW_INICIO       shift and go to state 26


state 15

    (4) crear_funciones -> empty .

    KW_INICIO       reduce using rule 4 (crear_funciones -> empty .)


state 16

    (3) crear_funciones -> funcion . crear_funciones
    (3) crear_funciones -> . funcion crear_funciones
    (4) crear_funciones -> . empty
    (7) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (1) empty -> .

    KW_FUNCION      shift and go to state 13
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_funciones                shift and go to state 27
    funcion                        shift and go to state 16
    empty                          shift and go to state 15

state 17

    (21) crear_var -> tipo def_var otra_var . OP_PUNTO_COMA crear_var

    OP_PUNTO_COMA   shift and go to state 28


state 18

    (19) print_coma -> OP_COMA .

    KW_ENTERO       reduce using rule 19 (print_coma -> OP_COMA .)
    KW_FLOTANTE     reduce using rule 19 (print_coma -> OP_COMA .)
    KW_STRING       reduce using rule 19 (print_coma -> OP_COMA .)
    ID              reduce using rule 19 (print_coma -> OP_COMA .)


state 19

    (25) otra_var -> print_coma . def_var otra_var
    (23) def_var -> . print_id arr_not arr_not
    (8) print_id -> . ID

    ID              shift and go to state 11

    def_var                        shift and go to state 29
    print_id                       shift and go to state 12

state 20

    (26) otra_var -> empty .

    OP_PUNTO_COMA   reduce using rule 26 (otra_var -> empty .)


state 21

    (23) def_var -> print_id arr_not . arr_not
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 30

state 22

    (24) arr_not -> OP_CORCHETE_IZQ . CTE_E OP_CORCHETE_DER

    CTE_E           shift and go to state 31


state 23

    (9) tipo_funcion -> tipo .

    ID              reduce using rule 9 (tipo_funcion -> tipo .)


state 24

    (7) funcion -> KW_FUNCION tipo_funcion . print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (8) print_id -> . ID

    ID              shift and go to state 11

    print_id                       shift and go to state 32

state 25

    (10) tipo_funcion -> empty .

    ID              reduce using rule 10 (tipo_funcion -> empty .)


state 26

    (2) inicio -> crear_var_glob crear_funciones KW_INICIO . funcion
    (7) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func

    KW_FUNCION      shift and go to state 13

    funcion                        shift and go to state 33

state 27

    (3) crear_funciones -> funcion crear_funciones .

    KW_INICIO       reduce using rule 3 (crear_funciones -> funcion crear_funciones .)


state 28

    (21) crear_var -> tipo def_var otra_var OP_PUNTO_COMA . crear_var
    (21) crear_var -> . tipo def_var otra_var OP_PUNTO_COMA crear_var
    (22) crear_var -> . empty
    (11) tipo -> . KW_ENTERO
    (12) tipo -> . KW_FLOTANTE
    (13) tipo -> . KW_STRING
    (1) empty -> .

  ! shift/reduce conflict for KW_ENTERO resolved as shift
  ! shift/reduce conflict for KW_FLOTANTE resolved as shift
  ! shift/reduce conflict for KW_STRING resolved as shift
    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 7
    KW_FUNCION      reduce using rule 1 (empty -> .)
    KW_INICIO       reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_A_STRING     reduce using rule 1 (empty -> .)
    KW_A_ENTERO     reduce using rule 1 (empty -> .)
    KW_A_FLOTANTE   reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

  ! KW_ENTERO       [ reduce using rule 1 (empty -> .) ]
  ! KW_FLOTANTE     [ reduce using rule 1 (empty -> .) ]
  ! KW_STRING       [ reduce using rule 1 (empty -> .) ]

    crear_var                      shift and go to state 34
    empty                          shift and go to state 35
    tipo                           shift and go to state 4

state 29

    (25) otra_var -> print_coma def_var . otra_var
    (25) otra_var -> . print_coma def_var otra_var
    (26) otra_var -> . empty
    (19) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 18
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_var                       shift and go to state 36
    empty                          shift and go to state 20
    print_coma                     shift and go to state 19

state 30

    (23) def_var -> print_id arr_not arr_not .

    OP_COMA         reduce using rule 23 (def_var -> print_id arr_not arr_not .)
    OP_PUNTO_COMA   reduce using rule 23 (def_var -> print_id arr_not arr_not .)


state 31

    (24) arr_not -> OP_CORCHETE_IZQ CTE_E . OP_CORCHETE_DER

    OP_CORCHETE_DER shift and go to state 37


state 32

    (7) funcion -> KW_FUNCION tipo_funcion print_id . OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func

    OP_PARENTESIS_IZQ shift and go to state 38


state 33

    (2) inicio -> crear_var_glob crear_funciones KW_INICIO funcion .

    $end            reduce using rule 2 (inicio -> crear_var_glob crear_funciones KW_INICIO funcion .)


state 34

    (21) crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .

    ID              reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_SI           reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_MIENTRAS     reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_CAMINA       reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_GIRA         reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_MIRA         reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_A_STRING     reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_A_ENTERO     reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_A_FLOTANTE   reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_REINICIAR    reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_INPUT        reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_OUTPUT       reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_SALTA_A      reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    OP_LLAVE_DER    reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_ENTERO       reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_FLOTANTE     reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_STRING       reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_FUNCION      reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_INICIO       reduce using rule 21 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)


state 35

    (22) crear_var -> empty .

    ID              reduce using rule 22 (crear_var -> empty .)
    KW_SI           reduce using rule 22 (crear_var -> empty .)
    KW_MIENTRAS     reduce using rule 22 (crear_var -> empty .)
    KW_CAMINA       reduce using rule 22 (crear_var -> empty .)
    KW_GIRA         reduce using rule 22 (crear_var -> empty .)
    KW_MIRA         reduce using rule 22 (crear_var -> empty .)
    KW_A_STRING     reduce using rule 22 (crear_var -> empty .)
    KW_A_ENTERO     reduce using rule 22 (crear_var -> empty .)
    KW_A_FLOTANTE   reduce using rule 22 (crear_var -> empty .)
    KW_REINICIAR    reduce using rule 22 (crear_var -> empty .)
    KW_INPUT        reduce using rule 22 (crear_var -> empty .)
    KW_OUTPUT       reduce using rule 22 (crear_var -> empty .)
    KW_SALTA_A      reduce using rule 22 (crear_var -> empty .)
    OP_LLAVE_DER    reduce using rule 22 (crear_var -> empty .)
    KW_ENTERO       reduce using rule 22 (crear_var -> empty .)
    KW_FLOTANTE     reduce using rule 22 (crear_var -> empty .)
    KW_STRING       reduce using rule 22 (crear_var -> empty .)
    KW_FUNCION      reduce using rule 22 (crear_var -> empty .)
    KW_INICIO       reduce using rule 22 (crear_var -> empty .)


state 36

    (25) otra_var -> print_coma def_var otra_var .

    OP_PUNTO_COMA   reduce using rule 25 (otra_var -> print_coma def_var otra_var .)


state 37

    (24) arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .

    OP_CORCHETE_IZQ reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_PARENTESIS_DER reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_COMA         reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_PUNTO_COMA   reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_ASIGNACION   reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_FACTOR       reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_TERMINO      reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_COMPARADOR   reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_AND          reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_OR           reduce using rule 24 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)


state 38

    (7) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ . parametros OP_PARENTESIS_DER bloque_func
    (14) parametros -> . toma_parametro
    (15) parametros -> . empty
    (16) toma_parametro -> . tipo ID otro_parametro
    (1) empty -> .
    (11) tipo -> . KW_ENTERO
    (12) tipo -> . KW_FLOTANTE
    (13) tipo -> . KW_STRING

    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 7

    tipo                           shift and go to state 39
    toma_parametro                 shift and go to state 40
    parametros                     shift and go to state 41
    empty                          shift and go to state 42

state 39

    (16) toma_parametro -> tipo . ID otro_parametro

    ID              shift and go to state 43


state 40

    (14) parametros -> toma_parametro .

    OP_PARENTESIS_DER reduce using rule 14 (parametros -> toma_parametro .)


state 41

    (7) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros . OP_PARENTESIS_DER bloque_func

    OP_PARENTESIS_DER shift and go to state 44


state 42

    (15) parametros -> empty .

    OP_PARENTESIS_DER reduce using rule 15 (parametros -> empty .)


state 43

    (16) toma_parametro -> tipo ID . otro_parametro
    (17) otro_parametro -> . print_coma toma_parametro
    (18) otro_parametro -> . empty
    (19) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 18
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    print_coma                     shift and go to state 45
    empty                          shift and go to state 47
    otro_parametro                 shift and go to state 46

state 44

    (7) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER . bloque_func
    (20) bloque_func -> . OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 49

    bloque_func                    shift and go to state 48

state 45

    (17) otro_parametro -> print_coma . toma_parametro
    (16) toma_parametro -> . tipo ID otro_parametro
    (11) tipo -> . KW_ENTERO
    (12) tipo -> . KW_FLOTANTE
    (13) tipo -> . KW_STRING

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 7

    tipo                           shift and go to state 39
    toma_parametro                 shift and go to state 50

state 46

    (16) toma_parametro -> tipo ID otro_parametro .

    OP_PARENTESIS_DER reduce using rule 16 (toma_parametro -> tipo ID otro_parametro .)


state 47

    (18) otro_parametro -> empty .

    OP_PARENTESIS_DER reduce using rule 18 (otro_parametro -> empty .)


state 48

    (7) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .

    $end            reduce using rule 7 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)
    KW_FUNCION      reduce using rule 7 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)
    KW_INICIO       reduce using rule 7 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)


state 49

    (20) bloque_func -> OP_LLAVE_IZQ . crear_var estatuto_rec OP_LLAVE_DER
    (21) crear_var -> . tipo def_var otra_var OP_PUNTO_COMA crear_var
    (22) crear_var -> . empty
    (11) tipo -> . KW_ENTERO
    (12) tipo -> . KW_FLOTANTE
    (13) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 7
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_A_STRING     reduce using rule 1 (empty -> .)
    KW_A_ENTERO     reduce using rule 1 (empty -> .)
    KW_A_FLOTANTE   reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    crear_var                      shift and go to state 51
    tipo                           shift and go to state 4
    empty                          shift and go to state 35

state 50

    (17) otro_parametro -> print_coma toma_parametro .

    OP_PARENTESIS_DER reduce using rule 17 (otro_parametro -> print_coma toma_parametro .)


state 51

    (20) bloque_func -> OP_LLAVE_IZQ crear_var . estatuto_rec OP_LLAVE_DER
    (32) estatuto_rec -> . estatuto estatuto_rec
    (33) estatuto_rec -> . empty
    (27) estatuto -> . asignacion
    (28) estatuto -> . condicion
    (29) estatuto -> . ciclo
    (30) estatuto -> . ejec_funcion
    (31) estatuto -> . funcion_predef
    (1) empty -> .
    (34) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (80) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (35) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (36) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (41) funcion_predef -> . camina
    (42) funcion_predef -> . gira
    (43) funcion_predef -> . mira
    (44) funcion_predef -> . a_string
    (45) funcion_predef -> . a_entero
    (46) funcion_predef -> . a_flotante
    (47) funcion_predef -> . reiniciar
    (48) funcion_predef -> . input
    (49) funcion_predef -> . output
    (50) funcion_predef -> . salta_a
    (70) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (71) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (72) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (73) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (77) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (104) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (107) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (108) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (111) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (112) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_LLAVE_DER    reduce using rule 1 (empty -> .)
    ID              shift and go to state 74
    KW_SI           shift and go to state 59
    KW_MIENTRAS     shift and go to state 61
    KW_CAMINA       shift and go to state 72
    KW_GIRA         shift and go to state 69
    KW_MIRA         shift and go to state 80
    KW_A_STRING     shift and go to state 66
    KW_A_ENTERO     shift and go to state 77
    KW_A_FLOTANTE   shift and go to state 79
    KW_REINICIAR    shift and go to state 58
    KW_INPUT        shift and go to state 73
    KW_OUTPUT       shift and go to state 82
    KW_SALTA_A      shift and go to state 52

    reiniciar                      shift and go to state 53
    a_string                       shift and go to state 54
    camina                         shift and go to state 55
    gira                           shift and go to state 56
    ejec_funcion                   shift and go to state 57
    funcion_predef                 shift and go to state 60
    a_entero                       shift and go to state 75
    estatuto                       shift and go to state 63
    condicion                      shift and go to state 64
    input                          shift and go to state 71
    empty                          shift and go to state 67
    mira                           shift and go to state 68
    estatuto_rec                   shift and go to state 70
    a_flotante                     shift and go to state 65
    ciclo                          shift and go to state 62
    asignacion                     shift and go to state 76
    salta_a                        shift and go to state 78
    output                         shift and go to state 81

state 52

    (112) salta_a -> KW_SALTA_A . OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 83


state 53

    (47) funcion_predef -> reiniciar .

    OP_LLAVE_DER    reduce using rule 47 (funcion_predef -> reiniciar .)
    ID              reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_SI           reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_MIENTRAS     reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_CAMINA       reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_GIRA         reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_MIRA         reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_A_STRING     reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_A_ENTERO     reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_A_FLOTANTE   reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_REINICIAR    reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_INPUT        reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_OUTPUT       reduce using rule 47 (funcion_predef -> reiniciar .)
    KW_SALTA_A      reduce using rule 47 (funcion_predef -> reiniciar .)


state 54

    (44) funcion_predef -> a_string .

    OP_LLAVE_DER    reduce using rule 44 (funcion_predef -> a_string .)
    ID              reduce using rule 44 (funcion_predef -> a_string .)
    KW_SI           reduce using rule 44 (funcion_predef -> a_string .)
    KW_MIENTRAS     reduce using rule 44 (funcion_predef -> a_string .)
    KW_CAMINA       reduce using rule 44 (funcion_predef -> a_string .)
    KW_GIRA         reduce using rule 44 (funcion_predef -> a_string .)
    KW_MIRA         reduce using rule 44 (funcion_predef -> a_string .)
    KW_A_STRING     reduce using rule 44 (funcion_predef -> a_string .)
    KW_A_ENTERO     reduce using rule 44 (funcion_predef -> a_string .)
    KW_A_FLOTANTE   reduce using rule 44 (funcion_predef -> a_string .)
    KW_REINICIAR    reduce using rule 44 (funcion_predef -> a_string .)
    KW_INPUT        reduce using rule 44 (funcion_predef -> a_string .)
    KW_OUTPUT       reduce using rule 44 (funcion_predef -> a_string .)
    KW_SALTA_A      reduce using rule 44 (funcion_predef -> a_string .)


state 55

    (41) funcion_predef -> camina .

    OP_LLAVE_DER    reduce using rule 41 (funcion_predef -> camina .)
    ID              reduce using rule 41 (funcion_predef -> camina .)
    KW_SI           reduce using rule 41 (funcion_predef -> camina .)
    KW_MIENTRAS     reduce using rule 41 (funcion_predef -> camina .)
    KW_CAMINA       reduce using rule 41 (funcion_predef -> camina .)
    KW_GIRA         reduce using rule 41 (funcion_predef -> camina .)
    KW_MIRA         reduce using rule 41 (funcion_predef -> camina .)
    KW_A_STRING     reduce using rule 41 (funcion_predef -> camina .)
    KW_A_ENTERO     reduce using rule 41 (funcion_predef -> camina .)
    KW_A_FLOTANTE   reduce using rule 41 (funcion_predef -> camina .)
    KW_REINICIAR    reduce using rule 41 (funcion_predef -> camina .)
    KW_INPUT        reduce using rule 41 (funcion_predef -> camina .)
    KW_OUTPUT       reduce using rule 41 (funcion_predef -> camina .)
    KW_SALTA_A      reduce using rule 41 (funcion_predef -> camina .)


state 56

    (42) funcion_predef -> gira .

    OP_LLAVE_DER    reduce using rule 42 (funcion_predef -> gira .)
    ID              reduce using rule 42 (funcion_predef -> gira .)
    KW_SI           reduce using rule 42 (funcion_predef -> gira .)
    KW_MIENTRAS     reduce using rule 42 (funcion_predef -> gira .)
    KW_CAMINA       reduce using rule 42 (funcion_predef -> gira .)
    KW_GIRA         reduce using rule 42 (funcion_predef -> gira .)
    KW_MIRA         reduce using rule 42 (funcion_predef -> gira .)
    KW_A_STRING     reduce using rule 42 (funcion_predef -> gira .)
    KW_A_ENTERO     reduce using rule 42 (funcion_predef -> gira .)
    KW_A_FLOTANTE   reduce using rule 42 (funcion_predef -> gira .)
    KW_REINICIAR    reduce using rule 42 (funcion_predef -> gira .)
    KW_INPUT        reduce using rule 42 (funcion_predef -> gira .)
    KW_OUTPUT       reduce using rule 42 (funcion_predef -> gira .)
    KW_SALTA_A      reduce using rule 42 (funcion_predef -> gira .)


state 57

    (30) estatuto -> ejec_funcion .

    ID              reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_SI           reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_MIENTRAS     reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_CAMINA       reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_GIRA         reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_MIRA         reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_A_STRING     reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_A_ENTERO     reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_A_FLOTANTE   reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_REINICIAR    reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_INPUT        reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_OUTPUT       reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_SALTA_A      reduce using rule 30 (estatuto -> ejec_funcion .)
    OP_LLAVE_DER    reduce using rule 30 (estatuto -> ejec_funcion .)


state 58

    (107) reiniciar -> KW_REINICIAR . OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 84


state 59

    (80) condicion -> KW_SI . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no

    OP_PARENTESIS_IZQ shift and go to state 85


state 60

    (31) estatuto -> funcion_predef .

    ID              reduce using rule 31 (estatuto -> funcion_predef .)
    KW_SI           reduce using rule 31 (estatuto -> funcion_predef .)
    KW_MIENTRAS     reduce using rule 31 (estatuto -> funcion_predef .)
    KW_CAMINA       reduce using rule 31 (estatuto -> funcion_predef .)
    KW_GIRA         reduce using rule 31 (estatuto -> funcion_predef .)
    KW_MIRA         reduce using rule 31 (estatuto -> funcion_predef .)
    KW_A_STRING     reduce using rule 31 (estatuto -> funcion_predef .)
    KW_A_ENTERO     reduce using rule 31 (estatuto -> funcion_predef .)
    KW_A_FLOTANTE   reduce using rule 31 (estatuto -> funcion_predef .)
    KW_REINICIAR    reduce using rule 31 (estatuto -> funcion_predef .)
    KW_INPUT        reduce using rule 31 (estatuto -> funcion_predef .)
    KW_OUTPUT       reduce using rule 31 (estatuto -> funcion_predef .)
    KW_SALTA_A      reduce using rule 31 (estatuto -> funcion_predef .)
    OP_LLAVE_DER    reduce using rule 31 (estatuto -> funcion_predef .)


state 61

    (35) ciclo -> KW_MIENTRAS . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est

    OP_PARENTESIS_IZQ shift and go to state 86


state 62

    (29) estatuto -> ciclo .

    ID              reduce using rule 29 (estatuto -> ciclo .)
    KW_SI           reduce using rule 29 (estatuto -> ciclo .)
    KW_MIENTRAS     reduce using rule 29 (estatuto -> ciclo .)
    KW_CAMINA       reduce using rule 29 (estatuto -> ciclo .)
    KW_GIRA         reduce using rule 29 (estatuto -> ciclo .)
    KW_MIRA         reduce using rule 29 (estatuto -> ciclo .)
    KW_A_STRING     reduce using rule 29 (estatuto -> ciclo .)
    KW_A_ENTERO     reduce using rule 29 (estatuto -> ciclo .)
    KW_A_FLOTANTE   reduce using rule 29 (estatuto -> ciclo .)
    KW_REINICIAR    reduce using rule 29 (estatuto -> ciclo .)
    KW_INPUT        reduce using rule 29 (estatuto -> ciclo .)
    KW_OUTPUT       reduce using rule 29 (estatuto -> ciclo .)
    KW_SALTA_A      reduce using rule 29 (estatuto -> ciclo .)
    OP_LLAVE_DER    reduce using rule 29 (estatuto -> ciclo .)


state 63

    (32) estatuto_rec -> estatuto . estatuto_rec
    (32) estatuto_rec -> . estatuto estatuto_rec
    (33) estatuto_rec -> . empty
    (27) estatuto -> . asignacion
    (28) estatuto -> . condicion
    (29) estatuto -> . ciclo
    (30) estatuto -> . ejec_funcion
    (31) estatuto -> . funcion_predef
    (1) empty -> .
    (34) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (80) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (35) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (36) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (41) funcion_predef -> . camina
    (42) funcion_predef -> . gira
    (43) funcion_predef -> . mira
    (44) funcion_predef -> . a_string
    (45) funcion_predef -> . a_entero
    (46) funcion_predef -> . a_flotante
    (47) funcion_predef -> . reiniciar
    (48) funcion_predef -> . input
    (49) funcion_predef -> . output
    (50) funcion_predef -> . salta_a
    (70) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (71) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (72) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (73) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (77) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (104) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (107) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (108) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (111) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (112) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_LLAVE_DER    reduce using rule 1 (empty -> .)
    ID              shift and go to state 74
    KW_SI           shift and go to state 59
    KW_MIENTRAS     shift and go to state 61
    KW_CAMINA       shift and go to state 72
    KW_GIRA         shift and go to state 69
    KW_MIRA         shift and go to state 80
    KW_A_STRING     shift and go to state 66
    KW_A_ENTERO     shift and go to state 77
    KW_A_FLOTANTE   shift and go to state 79
    KW_REINICIAR    shift and go to state 58
    KW_INPUT        shift and go to state 73
    KW_OUTPUT       shift and go to state 82
    KW_SALTA_A      shift and go to state 52

    reiniciar                      shift and go to state 53
    a_string                       shift and go to state 54
    camina                         shift and go to state 55
    gira                           shift and go to state 56
    ejec_funcion                   shift and go to state 57
    funcion_predef                 shift and go to state 60
    a_entero                       shift and go to state 75
    estatuto                       shift and go to state 63
    condicion                      shift and go to state 64
    input                          shift and go to state 71
    empty                          shift and go to state 67
    mira                           shift and go to state 68
    estatuto_rec                   shift and go to state 87
    a_flotante                     shift and go to state 65
    ciclo                          shift and go to state 62
    asignacion                     shift and go to state 76
    salta_a                        shift and go to state 78
    output                         shift and go to state 81

state 64

    (28) estatuto -> condicion .

    ID              reduce using rule 28 (estatuto -> condicion .)
    KW_SI           reduce using rule 28 (estatuto -> condicion .)
    KW_MIENTRAS     reduce using rule 28 (estatuto -> condicion .)
    KW_CAMINA       reduce using rule 28 (estatuto -> condicion .)
    KW_GIRA         reduce using rule 28 (estatuto -> condicion .)
    KW_MIRA         reduce using rule 28 (estatuto -> condicion .)
    KW_A_STRING     reduce using rule 28 (estatuto -> condicion .)
    KW_A_ENTERO     reduce using rule 28 (estatuto -> condicion .)
    KW_A_FLOTANTE   reduce using rule 28 (estatuto -> condicion .)
    KW_REINICIAR    reduce using rule 28 (estatuto -> condicion .)
    KW_INPUT        reduce using rule 28 (estatuto -> condicion .)
    KW_OUTPUT       reduce using rule 28 (estatuto -> condicion .)
    KW_SALTA_A      reduce using rule 28 (estatuto -> condicion .)
    OP_LLAVE_DER    reduce using rule 28 (estatuto -> condicion .)


state 65

    (46) funcion_predef -> a_flotante .

    OP_LLAVE_DER    reduce using rule 46 (funcion_predef -> a_flotante .)
    ID              reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_SI           reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_MIENTRAS     reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_CAMINA       reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_GIRA         reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_MIRA         reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_A_STRING     reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_A_ENTERO     reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_A_FLOTANTE   reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_REINICIAR    reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_INPUT        reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_OUTPUT       reduce using rule 46 (funcion_predef -> a_flotante .)
    KW_SALTA_A      reduce using rule 46 (funcion_predef -> a_flotante .)


state 66

    (73) a_string -> KW_A_STRING . OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 88


state 67

    (33) estatuto_rec -> empty .

    OP_LLAVE_DER    reduce using rule 33 (estatuto_rec -> empty .)


state 68

    (43) funcion_predef -> mira .

    OP_LLAVE_DER    reduce using rule 43 (funcion_predef -> mira .)
    ID              reduce using rule 43 (funcion_predef -> mira .)
    KW_SI           reduce using rule 43 (funcion_predef -> mira .)
    KW_MIENTRAS     reduce using rule 43 (funcion_predef -> mira .)
    KW_CAMINA       reduce using rule 43 (funcion_predef -> mira .)
    KW_GIRA         reduce using rule 43 (funcion_predef -> mira .)
    KW_MIRA         reduce using rule 43 (funcion_predef -> mira .)
    KW_A_STRING     reduce using rule 43 (funcion_predef -> mira .)
    KW_A_ENTERO     reduce using rule 43 (funcion_predef -> mira .)
    KW_A_FLOTANTE   reduce using rule 43 (funcion_predef -> mira .)
    KW_REINICIAR    reduce using rule 43 (funcion_predef -> mira .)
    KW_INPUT        reduce using rule 43 (funcion_predef -> mira .)
    KW_OUTPUT       reduce using rule 43 (funcion_predef -> mira .)
    KW_SALTA_A      reduce using rule 43 (funcion_predef -> mira .)


state 69

    (71) gira -> KW_GIRA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 89


state 70

    (20) bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec . OP_LLAVE_DER

    OP_LLAVE_DER    shift and go to state 90


state 71

    (48) funcion_predef -> input .

    OP_LLAVE_DER    reduce using rule 48 (funcion_predef -> input .)
    ID              reduce using rule 48 (funcion_predef -> input .)
    KW_SI           reduce using rule 48 (funcion_predef -> input .)
    KW_MIENTRAS     reduce using rule 48 (funcion_predef -> input .)
    KW_CAMINA       reduce using rule 48 (funcion_predef -> input .)
    KW_GIRA         reduce using rule 48 (funcion_predef -> input .)
    KW_MIRA         reduce using rule 48 (funcion_predef -> input .)
    KW_A_STRING     reduce using rule 48 (funcion_predef -> input .)
    KW_A_ENTERO     reduce using rule 48 (funcion_predef -> input .)
    KW_A_FLOTANTE   reduce using rule 48 (funcion_predef -> input .)
    KW_REINICIAR    reduce using rule 48 (funcion_predef -> input .)
    KW_INPUT        reduce using rule 48 (funcion_predef -> input .)
    KW_OUTPUT       reduce using rule 48 (funcion_predef -> input .)
    KW_SALTA_A      reduce using rule 48 (funcion_predef -> input .)


state 72

    (70) camina -> KW_CAMINA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 91


state 73

    (108) input -> KW_INPUT . OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 92


state 74

    (34) asignacion -> ID . arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (36) ejec_funcion -> ID . OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_PARENTESIS_IZQ shift and go to state 94
    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 93

state 75

    (45) funcion_predef -> a_entero .

    OP_LLAVE_DER    reduce using rule 45 (funcion_predef -> a_entero .)
    ID              reduce using rule 45 (funcion_predef -> a_entero .)
    KW_SI           reduce using rule 45 (funcion_predef -> a_entero .)
    KW_MIENTRAS     reduce using rule 45 (funcion_predef -> a_entero .)
    KW_CAMINA       reduce using rule 45 (funcion_predef -> a_entero .)
    KW_GIRA         reduce using rule 45 (funcion_predef -> a_entero .)
    KW_MIRA         reduce using rule 45 (funcion_predef -> a_entero .)
    KW_A_STRING     reduce using rule 45 (funcion_predef -> a_entero .)
    KW_A_ENTERO     reduce using rule 45 (funcion_predef -> a_entero .)
    KW_A_FLOTANTE   reduce using rule 45 (funcion_predef -> a_entero .)
    KW_REINICIAR    reduce using rule 45 (funcion_predef -> a_entero .)
    KW_INPUT        reduce using rule 45 (funcion_predef -> a_entero .)
    KW_OUTPUT       reduce using rule 45 (funcion_predef -> a_entero .)
    KW_SALTA_A      reduce using rule 45 (funcion_predef -> a_entero .)


state 76

    (27) estatuto -> asignacion .

    ID              reduce using rule 27 (estatuto -> asignacion .)
    KW_SI           reduce using rule 27 (estatuto -> asignacion .)
    KW_MIENTRAS     reduce using rule 27 (estatuto -> asignacion .)
    KW_CAMINA       reduce using rule 27 (estatuto -> asignacion .)
    KW_GIRA         reduce using rule 27 (estatuto -> asignacion .)
    KW_MIRA         reduce using rule 27 (estatuto -> asignacion .)
    KW_A_STRING     reduce using rule 27 (estatuto -> asignacion .)
    KW_A_ENTERO     reduce using rule 27 (estatuto -> asignacion .)
    KW_A_FLOTANTE   reduce using rule 27 (estatuto -> asignacion .)
    KW_REINICIAR    reduce using rule 27 (estatuto -> asignacion .)
    KW_INPUT        reduce using rule 27 (estatuto -> asignacion .)
    KW_OUTPUT       reduce using rule 27 (estatuto -> asignacion .)
    KW_SALTA_A      reduce using rule 27 (estatuto -> asignacion .)
    OP_LLAVE_DER    reduce using rule 27 (estatuto -> asignacion .)


state 77

    (77) a_entero -> KW_A_ENTERO . OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 95


state 78

    (50) funcion_predef -> salta_a .

    OP_LLAVE_DER    reduce using rule 50 (funcion_predef -> salta_a .)
    ID              reduce using rule 50 (funcion_predef -> salta_a .)
    KW_SI           reduce using rule 50 (funcion_predef -> salta_a .)
    KW_MIENTRAS     reduce using rule 50 (funcion_predef -> salta_a .)
    KW_CAMINA       reduce using rule 50 (funcion_predef -> salta_a .)
    KW_GIRA         reduce using rule 50 (funcion_predef -> salta_a .)
    KW_MIRA         reduce using rule 50 (funcion_predef -> salta_a .)
    KW_A_STRING     reduce using rule 50 (funcion_predef -> salta_a .)
    KW_A_ENTERO     reduce using rule 50 (funcion_predef -> salta_a .)
    KW_A_FLOTANTE   reduce using rule 50 (funcion_predef -> salta_a .)
    KW_REINICIAR    reduce using rule 50 (funcion_predef -> salta_a .)
    KW_INPUT        reduce using rule 50 (funcion_predef -> salta_a .)
    KW_OUTPUT       reduce using rule 50 (funcion_predef -> salta_a .)
    KW_SALTA_A      reduce using rule 50 (funcion_predef -> salta_a .)


state 79

    (104) a_flotante -> KW_A_FLOTANTE . OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 96


state 80

    (72) mira -> KW_MIRA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 97


state 81

    (49) funcion_predef -> output .

    OP_LLAVE_DER    reduce using rule 49 (funcion_predef -> output .)
    ID              reduce using rule 49 (funcion_predef -> output .)
    KW_SI           reduce using rule 49 (funcion_predef -> output .)
    KW_MIENTRAS     reduce using rule 49 (funcion_predef -> output .)
    KW_CAMINA       reduce using rule 49 (funcion_predef -> output .)
    KW_GIRA         reduce using rule 49 (funcion_predef -> output .)
    KW_MIRA         reduce using rule 49 (funcion_predef -> output .)
    KW_A_STRING     reduce using rule 49 (funcion_predef -> output .)
    KW_A_ENTERO     reduce using rule 49 (funcion_predef -> output .)
    KW_A_FLOTANTE   reduce using rule 49 (funcion_predef -> output .)
    KW_REINICIAR    reduce using rule 49 (funcion_predef -> output .)
    KW_INPUT        reduce using rule 49 (funcion_predef -> output .)
    KW_OUTPUT       reduce using rule 49 (funcion_predef -> output .)
    KW_SALTA_A      reduce using rule 49 (funcion_predef -> output .)


state 82

    (111) output -> KW_OUTPUT . OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 98


state 83

    (112) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ . CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    CTE_E           shift and go to state 99


state 84

    (107) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 100


state 85

    (80) condicion -> KW_SI OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER bloque_est si_no
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 120
    comp_or                        shift and go to state 116
    comp_and                       shift and go to state 110
    factor                         shift and go to state 112
    var_cte                        shift and go to state 103
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    concat_string                  shift and go to state 107

state 86

    (35) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER bloque_est
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 123
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    comp_and                       shift and go to state 110
    factor                         shift and go to state 112
    var_cte                        shift and go to state 103
    termino                        shift and go to state 106
    exp                            shift and go to state 122

state 87

    (32) estatuto_rec -> estatuto estatuto_rec .

    OP_LLAVE_DER    reduce using rule 32 (estatuto_rec -> estatuto estatuto_rec .)


state 88

    (73) a_string -> KW_A_STRING OP_PARENTESIS_IZQ . a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (74) a_string2 -> . CTE_E
    (75) a_string2 -> . CTE_F
    (76) a_string2 -> . ID arr_not arr_not

    CTE_E           shift and go to state 127
    CTE_F           shift and go to state 126
    ID              shift and go to state 125

    a_string2                      shift and go to state 124

state 89

    (71) gira -> KW_GIRA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 128
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 90

    (20) bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .

    KW_FUNCION      reduce using rule 20 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)
    KW_INICIO       reduce using rule 20 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)
    $end            reduce using rule 20 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)


state 91

    (70) camina -> KW_CAMINA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 129
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 92

    (108) input -> KW_INPUT OP_PARENTESIS_IZQ . ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA

    ID              shift and go to state 130


state 93

    (34) asignacion -> ID arr_not . arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 131

state 94

    (36) ejec_funcion -> ID OP_PARENTESIS_IZQ . ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (37) ejec_funcion_medio -> . expresion ejec_funcion_cont
    (38) ejec_funcion_medio -> . empty
    (51) expresion -> . comp_or otra_expresion_or
    (1) empty -> .
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 134
    comp_or                        shift and go to state 116
    ejec_funcion_medio             shift and go to state 133
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112
    empty                          shift and go to state 132
    concat_string                  shift and go to state 107

state 95

    (77) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ . a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (78) a_entero2 -> . CTE_F
    (79) a_entero2 -> . concat_string
    (101) concat_string -> . CTE_S concat_string2

    CTE_F           shift and go to state 136
    CTE_S           shift and go to state 108

    a_entero2                      shift and go to state 137
    concat_string                  shift and go to state 135

state 96

    (104) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ . a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (105) a_flotante2 -> . concat_string
    (106) a_flotante2 -> . CTE_F
    (101) concat_string -> . CTE_S concat_string2

    CTE_F           shift and go to state 140
    CTE_S           shift and go to state 108

    a_flotante2                    shift and go to state 138
    concat_string                  shift and go to state 139

state 97

    (72) mira -> KW_MIRA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 141
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 98

    (111) output -> KW_OUTPUT OP_PARENTESIS_IZQ . concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (101) concat_string -> . CTE_S concat_string2

    CTE_S           shift and go to state 108

    concat_string                  shift and go to state 142

state 99

    (112) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E . OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_COMA         shift and go to state 143


state 100

    (107) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 144


state 101

    (68) factor -> OP_TERMINO . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 145

state 102

    (90) var_cte -> KW_NORTE .

    OP_FACTOR       reduce using rule 90 (var_cte -> KW_NORTE .)
    OP_TERMINO      reduce using rule 90 (var_cte -> KW_NORTE .)
    OP_COMPARADOR   reduce using rule 90 (var_cte -> KW_NORTE .)
    OP_AND          reduce using rule 90 (var_cte -> KW_NORTE .)
    OP_OR           reduce using rule 90 (var_cte -> KW_NORTE .)
    OP_COMA         reduce using rule 90 (var_cte -> KW_NORTE .)
    OP_PARENTESIS_DER reduce using rule 90 (var_cte -> KW_NORTE .)
    OP_PUNTO_COMA   reduce using rule 90 (var_cte -> KW_NORTE .)


state 103

    (69) factor -> var_cte .

    OP_FACTOR       reduce using rule 69 (factor -> var_cte .)
    OP_TERMINO      reduce using rule 69 (factor -> var_cte .)
    OP_COMPARADOR   reduce using rule 69 (factor -> var_cte .)
    OP_AND          reduce using rule 69 (factor -> var_cte .)
    OP_PARENTESIS_DER reduce using rule 69 (factor -> var_cte .)
    OP_COMA         reduce using rule 69 (factor -> var_cte .)
    OP_PUNTO_COMA   reduce using rule 69 (factor -> var_cte .)
    OP_OR           reduce using rule 69 (factor -> var_cte .)


state 104

    (95) var_cte -> KW_ALTO .

    OP_FACTOR       reduce using rule 95 (var_cte -> KW_ALTO .)
    OP_TERMINO      reduce using rule 95 (var_cte -> KW_ALTO .)
    OP_COMPARADOR   reduce using rule 95 (var_cte -> KW_ALTO .)
    OP_AND          reduce using rule 95 (var_cte -> KW_ALTO .)
    OP_OR           reduce using rule 95 (var_cte -> KW_ALTO .)
    OP_COMA         reduce using rule 95 (var_cte -> KW_ALTO .)
    OP_PARENTESIS_DER reduce using rule 95 (var_cte -> KW_ALTO .)
    OP_PUNTO_COMA   reduce using rule 95 (var_cte -> KW_ALTO .)


state 105

    (92) var_cte -> KW_ESTE .

    OP_FACTOR       reduce using rule 92 (var_cte -> KW_ESTE .)
    OP_TERMINO      reduce using rule 92 (var_cte -> KW_ESTE .)
    OP_COMPARADOR   reduce using rule 92 (var_cte -> KW_ESTE .)
    OP_AND          reduce using rule 92 (var_cte -> KW_ESTE .)
    OP_OR           reduce using rule 92 (var_cte -> KW_ESTE .)
    OP_COMA         reduce using rule 92 (var_cte -> KW_ESTE .)
    OP_PARENTESIS_DER reduce using rule 92 (var_cte -> KW_ESTE .)
    OP_PUNTO_COMA   reduce using rule 92 (var_cte -> KW_ESTE .)


state 106

    (61) exp -> termino . exp2
    (62) exp2 -> . OP_TERMINO exp
    (63) exp2 -> . empty
    (1) empty -> .

    OP_TERMINO      shift and go to state 146
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    exp2                           shift and go to state 147
    empty                          shift and go to state 148

state 107

    (87) var_cte -> concat_string .

    OP_FACTOR       reduce using rule 87 (var_cte -> concat_string .)
    OP_TERMINO      reduce using rule 87 (var_cte -> concat_string .)
    OP_COMPARADOR   reduce using rule 87 (var_cte -> concat_string .)
    OP_AND          reduce using rule 87 (var_cte -> concat_string .)
    OP_OR           reduce using rule 87 (var_cte -> concat_string .)
    OP_COMA         reduce using rule 87 (var_cte -> concat_string .)
    OP_PARENTESIS_DER reduce using rule 87 (var_cte -> concat_string .)
    OP_PUNTO_COMA   reduce using rule 87 (var_cte -> concat_string .)


state 108

    (101) concat_string -> CTE_S . concat_string2
    (102) concat_string2 -> . OP_PUNTO CTE_S
    (103) concat_string2 -> . empty
    (1) empty -> .

    OP_PUNTO        shift and go to state 149
    OP_FACTOR       reduce using rule 1 (empty -> .)
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    concat_string2                 shift and go to state 150
    empty                          shift and go to state 151

state 109

    (89) var_cte -> KW_FALSO .

    OP_FACTOR       reduce using rule 89 (var_cte -> KW_FALSO .)
    OP_TERMINO      reduce using rule 89 (var_cte -> KW_FALSO .)
    OP_COMPARADOR   reduce using rule 89 (var_cte -> KW_FALSO .)
    OP_AND          reduce using rule 89 (var_cte -> KW_FALSO .)
    OP_OR           reduce using rule 89 (var_cte -> KW_FALSO .)
    OP_COMA         reduce using rule 89 (var_cte -> KW_FALSO .)
    OP_PARENTESIS_DER reduce using rule 89 (var_cte -> KW_FALSO .)
    OP_PUNTO_COMA   reduce using rule 89 (var_cte -> KW_FALSO .)


state 110

    (54) comp_or -> comp_and . otra_expresion_and
    (55) otra_expresion_and -> . OP_AND comp_and
    (56) otra_expresion_and -> . empty
    (1) empty -> .

    OP_AND          shift and go to state 153
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_expresion_and             shift and go to state 152
    empty                          shift and go to state 154

state 111

    (93) var_cte -> KW_OESTE .

    OP_FACTOR       reduce using rule 93 (var_cte -> KW_OESTE .)
    OP_TERMINO      reduce using rule 93 (var_cte -> KW_OESTE .)
    OP_COMPARADOR   reduce using rule 93 (var_cte -> KW_OESTE .)
    OP_AND          reduce using rule 93 (var_cte -> KW_OESTE .)
    OP_OR           reduce using rule 93 (var_cte -> KW_OESTE .)
    OP_COMA         reduce using rule 93 (var_cte -> KW_OESTE .)
    OP_PARENTESIS_DER reduce using rule 93 (var_cte -> KW_OESTE .)
    OP_PUNTO_COMA   reduce using rule 93 (var_cte -> KW_OESTE .)


state 112

    (64) termino -> factor . termino2
    (65) termino2 -> . OP_FACTOR termino
    (66) termino2 -> . empty
    (1) empty -> .

    OP_FACTOR       shift and go to state 155
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    termino2                       shift and go to state 156
    empty                          shift and go to state 157

state 113

    (86) var_cte -> CTE_F .

    OP_FACTOR       reduce using rule 86 (var_cte -> CTE_F .)
    OP_TERMINO      reduce using rule 86 (var_cte -> CTE_F .)
    OP_COMPARADOR   reduce using rule 86 (var_cte -> CTE_F .)
    OP_AND          reduce using rule 86 (var_cte -> CTE_F .)
    OP_OR           reduce using rule 86 (var_cte -> CTE_F .)
    OP_COMA         reduce using rule 86 (var_cte -> CTE_F .)
    OP_PARENTESIS_DER reduce using rule 86 (var_cte -> CTE_F .)
    OP_PUNTO_COMA   reduce using rule 86 (var_cte -> CTE_F .)


state 114

    (85) var_cte -> CTE_E .

    OP_FACTOR       reduce using rule 85 (var_cte -> CTE_E .)
    OP_TERMINO      reduce using rule 85 (var_cte -> CTE_E .)
    OP_COMPARADOR   reduce using rule 85 (var_cte -> CTE_E .)
    OP_AND          reduce using rule 85 (var_cte -> CTE_E .)
    OP_OR           reduce using rule 85 (var_cte -> CTE_E .)
    OP_COMA         reduce using rule 85 (var_cte -> CTE_E .)
    OP_PARENTESIS_DER reduce using rule 85 (var_cte -> CTE_E .)
    OP_PUNTO_COMA   reduce using rule 85 (var_cte -> CTE_E .)


state 115

    (91) var_cte -> KW_SUR .

    OP_FACTOR       reduce using rule 91 (var_cte -> KW_SUR .)
    OP_TERMINO      reduce using rule 91 (var_cte -> KW_SUR .)
    OP_COMPARADOR   reduce using rule 91 (var_cte -> KW_SUR .)
    OP_AND          reduce using rule 91 (var_cte -> KW_SUR .)
    OP_OR           reduce using rule 91 (var_cte -> KW_SUR .)
    OP_COMA         reduce using rule 91 (var_cte -> KW_SUR .)
    OP_PARENTESIS_DER reduce using rule 91 (var_cte -> KW_SUR .)
    OP_PUNTO_COMA   reduce using rule 91 (var_cte -> KW_SUR .)


state 116

    (51) expresion -> comp_or . otra_expresion_or
    (52) otra_expresion_or -> . OP_OR comp_or
    (53) otra_expresion_or -> . empty
    (1) empty -> .

    OP_OR           shift and go to state 158
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_expresion_or              shift and go to state 159
    empty                          shift and go to state 160

state 117

    (67) factor -> OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 161
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 118

    (94) var_cte -> KW_ANCHO .

    OP_FACTOR       reduce using rule 94 (var_cte -> KW_ANCHO .)
    OP_TERMINO      reduce using rule 94 (var_cte -> KW_ANCHO .)
    OP_COMPARADOR   reduce using rule 94 (var_cte -> KW_ANCHO .)
    OP_AND          reduce using rule 94 (var_cte -> KW_ANCHO .)
    OP_OR           reduce using rule 94 (var_cte -> KW_ANCHO .)
    OP_COMA         reduce using rule 94 (var_cte -> KW_ANCHO .)
    OP_PARENTESIS_DER reduce using rule 94 (var_cte -> KW_ANCHO .)
    OP_PUNTO_COMA   reduce using rule 94 (var_cte -> KW_ANCHO .)


state 119

    (84) var_cte -> ID . var_cte2
    (96) var_cte2 -> . arr_not arr_not
    (97) var_cte2 -> . OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_PARENTESIS_IZQ shift and go to state 164
    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 163
    var_cte2                       shift and go to state 162

state 120

    (80) condicion -> KW_SI OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER bloque_est si_no

    OP_PARENTESIS_DER shift and go to state 165


state 121

    (88) var_cte -> KW_VERDADERO .

    OP_FACTOR       reduce using rule 88 (var_cte -> KW_VERDADERO .)
    OP_TERMINO      reduce using rule 88 (var_cte -> KW_VERDADERO .)
    OP_COMPARADOR   reduce using rule 88 (var_cte -> KW_VERDADERO .)
    OP_AND          reduce using rule 88 (var_cte -> KW_VERDADERO .)
    OP_OR           reduce using rule 88 (var_cte -> KW_VERDADERO .)
    OP_COMA         reduce using rule 88 (var_cte -> KW_VERDADERO .)
    OP_PARENTESIS_DER reduce using rule 88 (var_cte -> KW_VERDADERO .)
    OP_PUNTO_COMA   reduce using rule 88 (var_cte -> KW_VERDADERO .)


state 122

    (57) comp_and -> exp . comp_and_end
    (58) comp_and_end -> . op_comparador exp
    (59) comp_and_end -> . empty
    (60) op_comparador -> . OP_COMPARADOR
    (1) empty -> .

    OP_COMPARADOR   shift and go to state 167
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    comp_and_end                   shift and go to state 166
    empty                          shift and go to state 168
    op_comparador                  shift and go to state 169

state 123

    (35) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER bloque_est

    OP_PARENTESIS_DER shift and go to state 170


state 124

    (73) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 171


state 125

    (76) a_string2 -> ID . arr_not arr_not
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 172

state 126

    (75) a_string2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 75 (a_string2 -> CTE_F .)


state 127

    (74) a_string2 -> CTE_E .

    OP_PARENTESIS_DER reduce using rule 74 (a_string2 -> CTE_E .)


state 128

    (71) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 173


state 129

    (70) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 174


state 130

    (108) input -> KW_INPUT OP_PARENTESIS_IZQ ID . input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (109) input2 -> . OP_COMA ID input2
    (110) input2 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 176
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    input2                         shift and go to state 175
    empty                          shift and go to state 177

state 131

    (34) asignacion -> ID arr_not arr_not . OP_ASIGNACION expresion OP_PUNTO_COMA

    OP_ASIGNACION   shift and go to state 178


state 132

    (38) ejec_funcion_medio -> empty .

    OP_PARENTESIS_DER reduce using rule 38 (ejec_funcion_medio -> empty .)


state 133

    (36) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 179


state 134

    (37) ejec_funcion_medio -> expresion . ejec_funcion_cont
    (39) ejec_funcion_cont -> . OP_COMA expresion ejec_funcion_cont
    (40) ejec_funcion_cont -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 180
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    empty                          shift and go to state 181
    ejec_funcion_cont              shift and go to state 182

state 135

    (79) a_entero2 -> concat_string .

    OP_PARENTESIS_DER reduce using rule 79 (a_entero2 -> concat_string .)


state 136

    (78) a_entero2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 78 (a_entero2 -> CTE_F .)


state 137

    (77) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 183


state 138

    (104) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 184


state 139

    (105) a_flotante2 -> concat_string .

    OP_PARENTESIS_DER reduce using rule 105 (a_flotante2 -> concat_string .)


state 140

    (106) a_flotante2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 106 (a_flotante2 -> CTE_F .)


state 141

    (72) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 185


state 142

    (111) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 186


state 143

    (112) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA . CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    CTE_E           shift and go to state 187


state 144

    (107) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 107 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 145

    (68) factor -> OP_TERMINO var_cte .

    OP_FACTOR       reduce using rule 68 (factor -> OP_TERMINO var_cte .)
    OP_TERMINO      reduce using rule 68 (factor -> OP_TERMINO var_cte .)
    OP_COMPARADOR   reduce using rule 68 (factor -> OP_TERMINO var_cte .)
    OP_AND          reduce using rule 68 (factor -> OP_TERMINO var_cte .)
    OP_PARENTESIS_DER reduce using rule 68 (factor -> OP_TERMINO var_cte .)
    OP_COMA         reduce using rule 68 (factor -> OP_TERMINO var_cte .)
    OP_PUNTO_COMA   reduce using rule 68 (factor -> OP_TERMINO var_cte .)
    OP_OR           reduce using rule 68 (factor -> OP_TERMINO var_cte .)


state 146

    (62) exp2 -> OP_TERMINO . exp
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    termino                        shift and go to state 106
    exp                            shift and go to state 188
    factor                         shift and go to state 112

state 147

    (61) exp -> termino exp2 .

    OP_COMPARADOR   reduce using rule 61 (exp -> termino exp2 .)
    OP_AND          reduce using rule 61 (exp -> termino exp2 .)
    OP_OR           reduce using rule 61 (exp -> termino exp2 .)
    OP_PARENTESIS_DER reduce using rule 61 (exp -> termino exp2 .)
    OP_COMA         reduce using rule 61 (exp -> termino exp2 .)
    OP_PUNTO_COMA   reduce using rule 61 (exp -> termino exp2 .)


state 148

    (63) exp2 -> empty .

    OP_COMPARADOR   reduce using rule 63 (exp2 -> empty .)
    OP_AND          reduce using rule 63 (exp2 -> empty .)
    OP_OR           reduce using rule 63 (exp2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 63 (exp2 -> empty .)
    OP_COMA         reduce using rule 63 (exp2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 63 (exp2 -> empty .)


state 149

    (102) concat_string2 -> OP_PUNTO . CTE_S

    CTE_S           shift and go to state 189


state 150

    (101) concat_string -> CTE_S concat_string2 .

    OP_FACTOR       reduce using rule 101 (concat_string -> CTE_S concat_string2 .)
    OP_TERMINO      reduce using rule 101 (concat_string -> CTE_S concat_string2 .)
    OP_COMPARADOR   reduce using rule 101 (concat_string -> CTE_S concat_string2 .)
    OP_AND          reduce using rule 101 (concat_string -> CTE_S concat_string2 .)
    OP_OR           reduce using rule 101 (concat_string -> CTE_S concat_string2 .)
    OP_PARENTESIS_DER reduce using rule 101 (concat_string -> CTE_S concat_string2 .)
    OP_COMA         reduce using rule 101 (concat_string -> CTE_S concat_string2 .)
    OP_PUNTO_COMA   reduce using rule 101 (concat_string -> CTE_S concat_string2 .)


state 151

    (103) concat_string2 -> empty .

    OP_FACTOR       reduce using rule 103 (concat_string2 -> empty .)
    OP_TERMINO      reduce using rule 103 (concat_string2 -> empty .)
    OP_COMPARADOR   reduce using rule 103 (concat_string2 -> empty .)
    OP_AND          reduce using rule 103 (concat_string2 -> empty .)
    OP_OR           reduce using rule 103 (concat_string2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 103 (concat_string2 -> empty .)
    OP_COMA         reduce using rule 103 (concat_string2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 103 (concat_string2 -> empty .)


state 152

    (54) comp_or -> comp_and otra_expresion_and .

    OP_PARENTESIS_DER reduce using rule 54 (comp_or -> comp_and otra_expresion_and .)
    OP_COMA         reduce using rule 54 (comp_or -> comp_and otra_expresion_and .)
    OP_PUNTO_COMA   reduce using rule 54 (comp_or -> comp_and otra_expresion_and .)
    OP_OR           reduce using rule 54 (comp_or -> comp_and otra_expresion_and .)


state 153

    (55) otra_expresion_and -> OP_AND . comp_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 190
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 154

    (56) otra_expresion_and -> empty .

    OP_OR           reduce using rule 56 (otra_expresion_and -> empty .)
    OP_PARENTESIS_DER reduce using rule 56 (otra_expresion_and -> empty .)
    OP_COMA         reduce using rule 56 (otra_expresion_and -> empty .)
    OP_PUNTO_COMA   reduce using rule 56 (otra_expresion_and -> empty .)


state 155

    (65) termino2 -> OP_FACTOR . termino
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    termino                        shift and go to state 191
    factor                         shift and go to state 112

state 156

    (64) termino -> factor termino2 .

    OP_TERMINO      reduce using rule 64 (termino -> factor termino2 .)
    OP_COMPARADOR   reduce using rule 64 (termino -> factor termino2 .)
    OP_AND          reduce using rule 64 (termino -> factor termino2 .)
    OP_OR           reduce using rule 64 (termino -> factor termino2 .)
    OP_COMA         reduce using rule 64 (termino -> factor termino2 .)
    OP_PARENTESIS_DER reduce using rule 64 (termino -> factor termino2 .)
    OP_PUNTO_COMA   reduce using rule 64 (termino -> factor termino2 .)


state 157

    (66) termino2 -> empty .

    OP_TERMINO      reduce using rule 66 (termino2 -> empty .)
    OP_COMPARADOR   reduce using rule 66 (termino2 -> empty .)
    OP_AND          reduce using rule 66 (termino2 -> empty .)
    OP_OR           reduce using rule 66 (termino2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 66 (termino2 -> empty .)
    OP_COMA         reduce using rule 66 (termino2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 66 (termino2 -> empty .)


state 158

    (52) otra_expresion_or -> OP_OR . comp_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    comp_or                        shift and go to state 192
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 159

    (51) expresion -> comp_or otra_expresion_or .

    OP_PARENTESIS_DER reduce using rule 51 (expresion -> comp_or otra_expresion_or .)
    OP_COMA         reduce using rule 51 (expresion -> comp_or otra_expresion_or .)
    OP_PUNTO_COMA   reduce using rule 51 (expresion -> comp_or otra_expresion_or .)


state 160

    (53) otra_expresion_or -> empty .

    OP_PARENTESIS_DER reduce using rule 53 (otra_expresion_or -> empty .)
    OP_COMA         reduce using rule 53 (otra_expresion_or -> empty .)
    OP_PUNTO_COMA   reduce using rule 53 (otra_expresion_or -> empty .)


state 161

    (67) factor -> OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER

    OP_PARENTESIS_DER shift and go to state 193


state 162

    (84) var_cte -> ID var_cte2 .

    OP_FACTOR       reduce using rule 84 (var_cte -> ID var_cte2 .)
    OP_TERMINO      reduce using rule 84 (var_cte -> ID var_cte2 .)
    OP_COMPARADOR   reduce using rule 84 (var_cte -> ID var_cte2 .)
    OP_AND          reduce using rule 84 (var_cte -> ID var_cte2 .)
    OP_OR           reduce using rule 84 (var_cte -> ID var_cte2 .)
    OP_COMA         reduce using rule 84 (var_cte -> ID var_cte2 .)
    OP_PARENTESIS_DER reduce using rule 84 (var_cte -> ID var_cte2 .)
    OP_PUNTO_COMA   reduce using rule 84 (var_cte -> ID var_cte2 .)


state 163

    (96) var_cte2 -> arr_not . arr_not
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 194

state 164

    (97) var_cte2 -> OP_PARENTESIS_IZQ . var_cte3 OP_PARENTESIS_DER
    (98) var_cte3 -> . expresion var_cte4
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 196
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    comp_and                       shift and go to state 110
    factor                         shift and go to state 112
    var_cte                        shift and go to state 103
    var_cte3                       shift and go to state 195
    termino                        shift and go to state 106
    exp                            shift and go to state 122

state 165

    (80) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . bloque_est si_no
    (83) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 198

    bloque_est                     shift and go to state 197

state 166

    (57) comp_and -> exp comp_and_end .

    OP_AND          reduce using rule 57 (comp_and -> exp comp_and_end .)
    OP_OR           reduce using rule 57 (comp_and -> exp comp_and_end .)
    OP_COMA         reduce using rule 57 (comp_and -> exp comp_and_end .)
    OP_PARENTESIS_DER reduce using rule 57 (comp_and -> exp comp_and_end .)
    OP_PUNTO_COMA   reduce using rule 57 (comp_and -> exp comp_and_end .)


state 167

    (60) op_comparador -> OP_COMPARADOR .

    OP_PARENTESIS_IZQ reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    OP_TERMINO      reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    ID              reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    CTE_E           reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    CTE_F           reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_VERDADERO    reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_FALSO        reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_NORTE        reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_SUR          reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_ESTE         reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_OESTE        reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_ANCHO        reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    KW_ALTO         reduce using rule 60 (op_comparador -> OP_COMPARADOR .)
    CTE_S           reduce using rule 60 (op_comparador -> OP_COMPARADOR .)


state 168

    (59) comp_and_end -> empty .

    OP_AND          reduce using rule 59 (comp_and_end -> empty .)
    OP_OR           reduce using rule 59 (comp_and_end -> empty .)
    OP_PARENTESIS_DER reduce using rule 59 (comp_and_end -> empty .)
    OP_COMA         reduce using rule 59 (comp_and_end -> empty .)
    OP_PUNTO_COMA   reduce using rule 59 (comp_and_end -> empty .)


state 169

    (58) comp_and_end -> op_comparador . exp
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    termino                        shift and go to state 106
    exp                            shift and go to state 199
    factor                         shift and go to state 112

state 170

    (35) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . bloque_est
    (83) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 198

    bloque_est                     shift and go to state 200

state 171

    (73) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 201


state 172

    (76) a_string2 -> ID arr_not . arr_not
    (24) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 22

    arr_not                        shift and go to state 202

state 173

    (71) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 203


state 174

    (70) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 204


state 175

    (108) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 205


state 176

    (109) input2 -> OP_COMA . ID input2

    ID              shift and go to state 206


state 177

    (110) input2 -> empty .

    OP_PARENTESIS_DER reduce using rule 110 (input2 -> empty .)


state 178

    (34) asignacion -> ID arr_not arr_not OP_ASIGNACION . expresion OP_PUNTO_COMA
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 207
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 179

    (36) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 208


state 180

    (39) ejec_funcion_cont -> OP_COMA . expresion ejec_funcion_cont
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 209
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 181

    (40) ejec_funcion_cont -> empty .

    OP_PARENTESIS_DER reduce using rule 40 (ejec_funcion_cont -> empty .)


state 182

    (37) ejec_funcion_medio -> expresion ejec_funcion_cont .

    OP_PARENTESIS_DER reduce using rule 37 (ejec_funcion_medio -> expresion ejec_funcion_cont .)


state 183

    (77) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 210


state 184

    (104) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 211


state 185

    (72) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 212


state 186

    (111) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 213


state 187

    (112) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 214


state 188

    (62) exp2 -> OP_TERMINO exp .

    OP_COMPARADOR   reduce using rule 62 (exp2 -> OP_TERMINO exp .)
    OP_AND          reduce using rule 62 (exp2 -> OP_TERMINO exp .)
    OP_OR           reduce using rule 62 (exp2 -> OP_TERMINO exp .)
    OP_PARENTESIS_DER reduce using rule 62 (exp2 -> OP_TERMINO exp .)
    OP_COMA         reduce using rule 62 (exp2 -> OP_TERMINO exp .)
    OP_PUNTO_COMA   reduce using rule 62 (exp2 -> OP_TERMINO exp .)


state 189

    (102) concat_string2 -> OP_PUNTO CTE_S .

    OP_FACTOR       reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_TERMINO      reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_COMPARADOR   reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_AND          reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_OR           reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_PARENTESIS_DER reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_COMA         reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_PUNTO_COMA   reduce using rule 102 (concat_string2 -> OP_PUNTO CTE_S .)


state 190

    (55) otra_expresion_and -> OP_AND comp_and .

    OP_OR           reduce using rule 55 (otra_expresion_and -> OP_AND comp_and .)
    OP_PARENTESIS_DER reduce using rule 55 (otra_expresion_and -> OP_AND comp_and .)
    OP_COMA         reduce using rule 55 (otra_expresion_and -> OP_AND comp_and .)
    OP_PUNTO_COMA   reduce using rule 55 (otra_expresion_and -> OP_AND comp_and .)


state 191

    (65) termino2 -> OP_FACTOR termino .

    OP_TERMINO      reduce using rule 65 (termino2 -> OP_FACTOR termino .)
    OP_COMPARADOR   reduce using rule 65 (termino2 -> OP_FACTOR termino .)
    OP_AND          reduce using rule 65 (termino2 -> OP_FACTOR termino .)
    OP_OR           reduce using rule 65 (termino2 -> OP_FACTOR termino .)
    OP_PARENTESIS_DER reduce using rule 65 (termino2 -> OP_FACTOR termino .)
    OP_COMA         reduce using rule 65 (termino2 -> OP_FACTOR termino .)
    OP_PUNTO_COMA   reduce using rule 65 (termino2 -> OP_FACTOR termino .)


state 192

    (52) otra_expresion_or -> OP_OR comp_or .

    OP_PARENTESIS_DER reduce using rule 52 (otra_expresion_or -> OP_OR comp_or .)
    OP_COMA         reduce using rule 52 (otra_expresion_or -> OP_OR comp_or .)
    OP_PUNTO_COMA   reduce using rule 52 (otra_expresion_or -> OP_OR comp_or .)


state 193

    (67) factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .

    OP_FACTOR       reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_TERMINO      reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_COMPARADOR   reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_AND          reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_PARENTESIS_DER reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_COMA         reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_PUNTO_COMA   reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_OR           reduce using rule 67 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)


state 194

    (96) var_cte2 -> arr_not arr_not .

    OP_FACTOR       reduce using rule 96 (var_cte2 -> arr_not arr_not .)
    OP_TERMINO      reduce using rule 96 (var_cte2 -> arr_not arr_not .)
    OP_COMPARADOR   reduce using rule 96 (var_cte2 -> arr_not arr_not .)
    OP_AND          reduce using rule 96 (var_cte2 -> arr_not arr_not .)
    OP_OR           reduce using rule 96 (var_cte2 -> arr_not arr_not .)
    OP_PARENTESIS_DER reduce using rule 96 (var_cte2 -> arr_not arr_not .)
    OP_COMA         reduce using rule 96 (var_cte2 -> arr_not arr_not .)
    OP_PUNTO_COMA   reduce using rule 96 (var_cte2 -> arr_not arr_not .)


state 195

    (97) var_cte2 -> OP_PARENTESIS_IZQ var_cte3 . OP_PARENTESIS_DER

    OP_PARENTESIS_DER shift and go to state 215


state 196

    (98) var_cte3 -> expresion . var_cte4
    (99) var_cte4 -> . OP_COMA expresion var_cte4
    (100) var_cte4 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 216
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    var_cte4                       shift and go to state 217
    empty                          shift and go to state 218

state 197

    (80) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est . si_no
    (81) si_no -> . KW_SI_NO bloque_est
    (82) si_no -> . empty
    (1) empty -> .

    KW_SI_NO        shift and go to state 220
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_A_STRING     reduce using rule 1 (empty -> .)
    KW_A_ENTERO     reduce using rule 1 (empty -> .)
    KW_A_FLOTANTE   reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    si_no                          shift and go to state 219
    empty                          shift and go to state 221

state 198

    (83) bloque_est -> OP_LLAVE_IZQ . estatuto OP_LLAVE_DER
    (27) estatuto -> . asignacion
    (28) estatuto -> . condicion
    (29) estatuto -> . ciclo
    (30) estatuto -> . ejec_funcion
    (31) estatuto -> . funcion_predef
    (34) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (80) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (35) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (36) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (41) funcion_predef -> . camina
    (42) funcion_predef -> . gira
    (43) funcion_predef -> . mira
    (44) funcion_predef -> . a_string
    (45) funcion_predef -> . a_entero
    (46) funcion_predef -> . a_flotante
    (47) funcion_predef -> . reiniciar
    (48) funcion_predef -> . input
    (49) funcion_predef -> . output
    (50) funcion_predef -> . salta_a
    (70) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (71) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (72) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (73) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (77) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (104) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (107) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (108) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (111) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (112) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    ID              shift and go to state 74
    KW_SI           shift and go to state 59
    KW_MIENTRAS     shift and go to state 61
    KW_CAMINA       shift and go to state 72
    KW_GIRA         shift and go to state 69
    KW_MIRA         shift and go to state 80
    KW_A_STRING     shift and go to state 66
    KW_A_ENTERO     shift and go to state 77
    KW_A_FLOTANTE   shift and go to state 79
    KW_REINICIAR    shift and go to state 58
    KW_INPUT        shift and go to state 73
    KW_OUTPUT       shift and go to state 82
    KW_SALTA_A      shift and go to state 52

    reiniciar                      shift and go to state 53
    a_string                       shift and go to state 54
    camina                         shift and go to state 55
    gira                           shift and go to state 56
    ejec_funcion                   shift and go to state 57
    funcion_predef                 shift and go to state 60
    a_entero                       shift and go to state 75
    estatuto                       shift and go to state 222
    condicion                      shift and go to state 64
    input                          shift and go to state 71
    mira                           shift and go to state 68
    a_flotante                     shift and go to state 65
    ciclo                          shift and go to state 62
    asignacion                     shift and go to state 76
    salta_a                        shift and go to state 78
    output                         shift and go to state 81

state 199

    (58) comp_and_end -> op_comparador exp .

    OP_AND          reduce using rule 58 (comp_and_end -> op_comparador exp .)
    OP_OR           reduce using rule 58 (comp_and_end -> op_comparador exp .)
    OP_PARENTESIS_DER reduce using rule 58 (comp_and_end -> op_comparador exp .)
    OP_COMA         reduce using rule 58 (comp_and_end -> op_comparador exp .)
    OP_PUNTO_COMA   reduce using rule 58 (comp_and_end -> op_comparador exp .)


state 200

    (35) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .

    OP_LLAVE_DER    reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    ID              reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_SI           reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_MIENTRAS     reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_CAMINA       reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_GIRA         reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_MIRA         reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_A_STRING     reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_A_ENTERO     reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_A_FLOTANTE   reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_REINICIAR    reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_INPUT        reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_OUTPUT       reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_SALTA_A      reduce using rule 35 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)


state 201

    (73) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 73 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 202

    (76) a_string2 -> ID arr_not arr_not .

    OP_PARENTESIS_DER reduce using rule 76 (a_string2 -> ID arr_not arr_not .)


state 203

    (71) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 71 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 204

    (70) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 70 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 205

    (108) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 223


state 206

    (109) input2 -> OP_COMA ID . input2
    (109) input2 -> . OP_COMA ID input2
    (110) input2 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 176
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    input2                         shift and go to state 224
    empty                          shift and go to state 177

state 207

    (34) asignacion -> ID arr_not arr_not OP_ASIGNACION expresion . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 225


state 208

    (36) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 36 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 209

    (39) ejec_funcion_cont -> OP_COMA expresion . ejec_funcion_cont
    (39) ejec_funcion_cont -> . OP_COMA expresion ejec_funcion_cont
    (40) ejec_funcion_cont -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 180
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    empty                          shift and go to state 181
    ejec_funcion_cont              shift and go to state 226

state 210

    (77) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 77 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 211

    (104) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 104 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 212

    (72) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_LLAVE_DER    reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    ID              reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 72 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 213

    (111) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 111 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 214

    (112) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 227


state 215

    (97) var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .

    OP_FACTOR       reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_TERMINO      reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_COMPARADOR   reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_AND          reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_OR           reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_PARENTESIS_DER reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_COMA         reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_PUNTO_COMA   reduce using rule 97 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)


state 216

    (99) var_cte4 -> OP_COMA . expresion var_cte4
    (51) expresion -> . comp_or otra_expresion_or
    (54) comp_or -> . comp_and otra_expresion_and
    (57) comp_and -> . exp comp_and_end
    (61) exp -> . termino exp2
    (64) termino -> . factor termino2
    (67) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (68) factor -> . OP_TERMINO var_cte
    (69) factor -> . var_cte
    (84) var_cte -> . ID var_cte2
    (85) var_cte -> . CTE_E
    (86) var_cte -> . CTE_F
    (87) var_cte -> . concat_string
    (88) var_cte -> . KW_VERDADERO
    (89) var_cte -> . KW_FALSO
    (90) var_cte -> . KW_NORTE
    (91) var_cte -> . KW_SUR
    (92) var_cte -> . KW_ESTE
    (93) var_cte -> . KW_OESTE
    (94) var_cte -> . KW_ANCHO
    (95) var_cte -> . KW_ALTO
    (101) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 101
    ID              shift and go to state 119
    CTE_E           shift and go to state 114
    CTE_F           shift and go to state 113
    KW_VERDADERO    shift and go to state 121
    KW_FALSO        shift and go to state 109
    KW_NORTE        shift and go to state 102
    KW_SUR          shift and go to state 115
    KW_ESTE         shift and go to state 105
    KW_OESTE        shift and go to state 111
    KW_ANCHO        shift and go to state 118
    KW_ALTO         shift and go to state 104
    CTE_S           shift and go to state 108

    expresion                      shift and go to state 228
    comp_or                        shift and go to state 116
    concat_string                  shift and go to state 107
    var_cte                        shift and go to state 103
    comp_and                       shift and go to state 110
    termino                        shift and go to state 106
    exp                            shift and go to state 122
    factor                         shift and go to state 112

state 217

    (98) var_cte3 -> expresion var_cte4 .

    OP_PARENTESIS_DER reduce using rule 98 (var_cte3 -> expresion var_cte4 .)


state 218

    (100) var_cte4 -> empty .

    OP_PARENTESIS_DER reduce using rule 100 (var_cte4 -> empty .)


state 219

    (80) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .

    ID              reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_SI           reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_MIENTRAS     reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_CAMINA       reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_GIRA         reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_MIRA         reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_A_STRING     reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_A_ENTERO     reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_A_FLOTANTE   reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_REINICIAR    reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_INPUT        reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_OUTPUT       reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_SALTA_A      reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    OP_LLAVE_DER    reduce using rule 80 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)


state 220

    (81) si_no -> KW_SI_NO . bloque_est
    (83) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 198

    bloque_est                     shift and go to state 229

state 221

    (82) si_no -> empty .

    ID              reduce using rule 82 (si_no -> empty .)
    KW_SI           reduce using rule 82 (si_no -> empty .)
    KW_MIENTRAS     reduce using rule 82 (si_no -> empty .)
    KW_CAMINA       reduce using rule 82 (si_no -> empty .)
    KW_GIRA         reduce using rule 82 (si_no -> empty .)
    KW_MIRA         reduce using rule 82 (si_no -> empty .)
    KW_A_STRING     reduce using rule 82 (si_no -> empty .)
    KW_A_ENTERO     reduce using rule 82 (si_no -> empty .)
    KW_A_FLOTANTE   reduce using rule 82 (si_no -> empty .)
    KW_REINICIAR    reduce using rule 82 (si_no -> empty .)
    KW_INPUT        reduce using rule 82 (si_no -> empty .)
    KW_OUTPUT       reduce using rule 82 (si_no -> empty .)
    KW_SALTA_A      reduce using rule 82 (si_no -> empty .)
    OP_LLAVE_DER    reduce using rule 82 (si_no -> empty .)


state 222

    (83) bloque_est -> OP_LLAVE_IZQ estatuto . OP_LLAVE_DER

    OP_LLAVE_DER    shift and go to state 230


state 223

    (108) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_LLAVE_DER    reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    ID              reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 108 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 224

    (109) input2 -> OP_COMA ID input2 .

    OP_PARENTESIS_DER reduce using rule 109 (input2 -> OP_COMA ID input2 .)


state 225

    (34) asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .

    ID              reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_SI           reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 34 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)


state 226

    (39) ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont .

    OP_PARENTESIS_DER reduce using rule 39 (ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont .)


state 227

    (112) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_LLAVE_DER    reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    ID              reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 112 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 228

    (99) var_cte4 -> OP_COMA expresion . var_cte4
    (99) var_cte4 -> . OP_COMA expresion var_cte4
    (100) var_cte4 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 216
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    var_cte4                       shift and go to state 231
    empty                          shift and go to state 218

state 229

    (81) si_no -> KW_SI_NO bloque_est .

    ID              reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_SI           reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_MIENTRAS     reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_CAMINA       reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_GIRA         reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_MIRA         reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_A_STRING     reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_A_ENTERO     reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_A_FLOTANTE   reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_REINICIAR    reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_INPUT        reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_OUTPUT       reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    KW_SALTA_A      reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)
    OP_LLAVE_DER    reduce using rule 81 (si_no -> KW_SI_NO bloque_est .)


state 230

    (83) bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .

    ID              reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SI           reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_MIENTRAS     reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_CAMINA       reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_GIRA         reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_MIRA         reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_A_STRING     reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_A_ENTERO     reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_A_FLOTANTE   reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_REINICIAR    reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_INPUT        reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_OUTPUT       reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SALTA_A      reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    OP_LLAVE_DER    reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SI_NO        reduce using rule 83 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)


state 231

    (99) var_cte4 -> OP_COMA expresion var_cte4 .

    OP_PARENTESIS_DER reduce using rule 99 (var_cte4 -> OP_COMA expresion var_cte4 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for KW_ENTERO in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_FLOTANTE in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for KW_ENTERO in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_FLOTANTE in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for KW_ENTERO in state 28 resolved as shift
WARNING: shift/reduce conflict for KW_FLOTANTE in state 28 resolved as shift
WARNING: shift/reduce conflict for KW_STRING in state 28 resolved as shift
WARNING: reduce/reduce conflict in state 8 resolved using rule (crear_var_glob -> empty)
WARNING: rejected rule (crear_var -> empty) in state 8
