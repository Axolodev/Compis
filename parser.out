Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     empty -> <empty>
Rule 2     inicio -> crear_var crear_funciones KW_INICIO funcion
Rule 3     crear_funciones -> funcion crear_funciones
Rule 4     crear_funciones -> empty
Rule 5     funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
Rule 6     print_id -> ID
Rule 7     tipo_funcion -> tipo
Rule 8     tipo_funcion -> empty
Rule 9     tipo -> KW_ENTERO
Rule 10    tipo -> KW_FLOTANTE
Rule 11    tipo -> KW_STRING
Rule 12    parametros -> toma_parametro
Rule 13    parametros -> empty
Rule 14    toma_parametro -> tipo ID otro_parametro
Rule 15    otro_parametro -> print_coma toma_parametro
Rule 16    otro_parametro -> empty
Rule 17    print_coma -> OP_COMA
Rule 18    bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER
Rule 19    crear_var -> tipo def_var otra_var op_punto_coma crear_var
Rule 20    crear_var -> empty
Rule 21    op_punto_coma -> OP_PUNTO_COMA
Rule 22    def_var -> print_id arr_not arr_not
Rule 23    arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
Rule 24    arr_not -> empty
Rule 25    otra_var -> print_coma def_var otra_var
Rule 26    otra_var -> empty
Rule 27    estatuto -> asignacion
Rule 28    estatuto -> condicion
Rule 29    estatuto -> ciclo
Rule 30    estatuto -> ejec_funcion
Rule 31    estatuto -> funcion_predef
Rule 32    estatuto -> retorna
Rule 33    estatuto_rec -> estatuto estatuto_rec
Rule 34    estatuto_rec -> empty
Rule 35    asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
Rule 36    ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
Rule 37    ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 38    ejec_funcion_medio -> expresion ejec_funcion_cont
Rule 39    ejec_funcion_medio -> empty
Rule 40    ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont
Rule 41    ejec_funcion_cont -> empty
Rule 42    funcion_predef -> camina
Rule 43    funcion_predef -> gira
Rule 44    funcion_predef -> mira
Rule 45    funcion_predef -> reiniciar
Rule 46    funcion_predef -> input
Rule 47    funcion_predef -> output
Rule 48    funcion_predef -> salta_a
Rule 49    expresion -> comp_or otra_expresion_or
Rule 50    otra_expresion_or -> OP_OR comp_or
Rule 51    otra_expresion_or -> empty
Rule 52    comp_or -> comp_and otra_expresion_and
Rule 53    otra_expresion_and -> OP_AND comp_and
Rule 54    otra_expresion_and -> empty
Rule 55    comp_and -> exp comp_and_end
Rule 56    comp_and_end -> op_comparador exp
Rule 57    comp_and_end -> empty
Rule 58    op_comparador -> OP_COMPARADOR
Rule 59    exp -> termino exp2
Rule 60    exp2 -> OP_TERMINO exp
Rule 61    exp2 -> empty
Rule 62    termino -> factor termino2
Rule 63    termino2 -> OP_FACTOR termino
Rule 64    termino2 -> empty
Rule 65    factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
Rule 66    factor -> OP_TERMINO var_cte
Rule 67    factor -> var_cte
Rule 68    camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 69    gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 70    mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 71    a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 72    a_string2 -> CTE_E
Rule 73    a_string2 -> CTE_F
Rule 74    a_string2 -> ID arr_not arr_not
Rule 75    a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 76    a_entero2 -> CTE_F
Rule 77    a_entero2 -> concat_string
Rule 78    condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
Rule 79    si_no -> KW_SI_NO bloque_est
Rule 80    si_no -> empty
Rule 81    bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER
Rule 82    retorna -> KW_RETORNA expresion OP_PUNTO_COMA
Rule 83    var_cte -> ID var_cte2
Rule 84    var_cte -> CTE_E
Rule 85    var_cte -> CTE_F
Rule 86    var_cte -> concat_string
Rule 87    var_cte -> KW_VERDADERO
Rule 88    var_cte -> KW_FALSO
Rule 89    var_cte -> KW_NORTE
Rule 90    var_cte -> KW_SUR
Rule 91    var_cte -> KW_ESTE
Rule 92    var_cte -> KW_OESTE
Rule 93    var_cte -> KW_ANCHO
Rule 94    var_cte -> KW_ALTO
Rule 95    var_cte -> a_string
Rule 96    var_cte -> a_entero
Rule 97    var_cte -> a_flotante
Rule 98    var_cte2 -> arr_not arr_not
Rule 99    var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER
Rule 100   var_cte3 -> expresion var_cte4
Rule 101   var_cte4 -> OP_COMA expresion var_cte4
Rule 102   var_cte4 -> empty
Rule 103   concat_string -> CTE_S concat_string2
Rule 104   concat_string2 -> OP_PUNTO CTE_S
Rule 105   concat_string2 -> empty
Rule 106   a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 107   a_flotante2 -> concat_string
Rule 108   a_flotante2 -> CTE_F
Rule 109   reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 110   input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 111   input2 -> OP_COMA ID input2
Rule 112   input2 -> empty
Rule 113   output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 114   salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

Terminals, with rules where they appear

CTE_E                : 23 72 84 114 114
CTE_F                : 73 76 85 108
CTE_S                : 103 104
ID                   : 6 14 35 37 74 83 110 111
KW_ALTO              : 94
KW_ANCHO             : 93
KW_A_ENTERO          : 75
KW_A_FLOTANTE        : 106
KW_A_STRING          : 71
KW_CAMINA            : 68
KW_ENTERO            : 9
KW_ESTE              : 91
KW_FALSO             : 88
KW_FLOTANTE          : 10
KW_FUNCION           : 5
KW_GIRA              : 69
KW_INICIO            : 2
KW_INPUT             : 110
KW_MIENTRAS          : 36
KW_MIRA              : 70
KW_NORTE             : 89
KW_OESTE             : 92
KW_OUTPUT            : 113
KW_REINICIAR         : 109
KW_RETORNA           : 82
KW_SALTA_A           : 114
KW_SI                : 78
KW_SI_NO             : 79
KW_STRING            : 11
KW_SUR               : 90
KW_VERDADERO         : 87
OP_AND               : 53
OP_ASIGNACION        : 35
OP_COMA              : 17 40 101 111 114
OP_COMPARADOR        : 58
OP_CORCHETE_DER      : 23
OP_CORCHETE_IZQ      : 23
OP_FACTOR            : 63
OP_LLAVE_DER         : 18 81
OP_LLAVE_IZQ         : 18 81
OP_OR                : 50
OP_PARENTESIS_DER    : 5 36 37 65 68 69 70 71 75 78 99 106 109 110 113 114
OP_PARENTESIS_IZQ    : 5 36 37 65 68 69 70 71 75 78 99 106 109 110 113 114
OP_PUNTO             : 104
OP_PUNTO_COMA        : 21 35 37 68 69 70 71 75 82 106 109 110 113 114
OP_TERMINO           : 60 66
error                : 

Nonterminals, with rules where they appear

a_entero             : 96
a_entero2            : 75
a_flotante           : 97
a_flotante2          : 106
a_string             : 95
a_string2            : 71
arr_not              : 22 22 35 35 74 74 98 98
asignacion           : 27
bloque_est           : 36 78 79
bloque_func          : 5
camina               : 42
ciclo                : 29
comp_and             : 52 53
comp_and_end         : 55
comp_or              : 49 50
concat_string        : 77 86 107 113
concat_string2       : 103
condicion            : 28
crear_funciones      : 2 3
crear_var            : 2 18 19
def_var              : 19 25
ejec_funcion         : 30
ejec_funcion_cont    : 38 40
ejec_funcion_medio   : 37
empty                : 4 8 13 16 20 24 26 34 39 41 51 54 57 61 64 80 102 105 112
estatuto             : 33 81
estatuto_rec         : 18 33
exp                  : 55 56 60
exp2                 : 59
expresion            : 35 36 38 40 65 68 69 70 78 82 100 101
factor               : 62
funcion              : 2 3
funcion_predef       : 31
gira                 : 43
inicio               : 0
input                : 46
input2               : 110 111
mira                 : 44
op_comparador        : 56
op_punto_coma        : 19
otra_expresion_and   : 52
otra_expresion_or    : 49
otra_var             : 19 25
otro_parametro       : 14
output               : 47
parametros           : 5
print_coma           : 15 25
print_id             : 5 22
reiniciar            : 45
retorna              : 32
salta_a              : 48
si_no                : 78
termino              : 59 63
termino2             : 62
tipo                 : 7 14 19
tipo_funcion         : 5
toma_parametro       : 12 15
var_cte              : 66 67
var_cte2             : 83
var_cte3             : 99
var_cte4             : 100 101

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (2) inicio -> . crear_var crear_funciones KW_INICIO funcion
    (19) crear_var -> . tipo def_var otra_var op_punto_coma crear_var
    (20) crear_var -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    KW_FUNCION      reduce using rule 1 (empty -> .)
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_var                      shift and go to state 2
    tipo                           shift and go to state 4
    inicio                         shift and go to state 5
    empty                          shift and go to state 7

state 1

    (10) tipo -> KW_FLOTANTE .

    ID              reduce using rule 10 (tipo -> KW_FLOTANTE .)


state 2

    (2) inicio -> crear_var . crear_funciones KW_INICIO funcion
    (3) crear_funciones -> . funcion crear_funciones
    (4) crear_funciones -> . empty
    (5) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (1) empty -> .

    KW_FUNCION      shift and go to state 8
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_funciones                shift and go to state 9
    funcion                        shift and go to state 11
    empty                          shift and go to state 10

state 3

    (9) tipo -> KW_ENTERO .

    ID              reduce using rule 9 (tipo -> KW_ENTERO .)


state 4

    (19) crear_var -> tipo . def_var otra_var op_punto_coma crear_var
    (22) def_var -> . print_id arr_not arr_not
    (6) print_id -> . ID

    ID              shift and go to state 13

    def_var                        shift and go to state 12
    print_id                       shift and go to state 14

state 5

    (0) S' -> inicio .



state 6

    (11) tipo -> KW_STRING .

    ID              reduce using rule 11 (tipo -> KW_STRING .)


state 7

    (20) crear_var -> empty .

    ID              reduce using rule 20 (crear_var -> empty .)
    KW_SI           reduce using rule 20 (crear_var -> empty .)
    KW_MIENTRAS     reduce using rule 20 (crear_var -> empty .)
    KW_RETORNA      reduce using rule 20 (crear_var -> empty .)
    KW_CAMINA       reduce using rule 20 (crear_var -> empty .)
    KW_GIRA         reduce using rule 20 (crear_var -> empty .)
    KW_MIRA         reduce using rule 20 (crear_var -> empty .)
    KW_REINICIAR    reduce using rule 20 (crear_var -> empty .)
    KW_INPUT        reduce using rule 20 (crear_var -> empty .)
    KW_OUTPUT       reduce using rule 20 (crear_var -> empty .)
    KW_SALTA_A      reduce using rule 20 (crear_var -> empty .)
    OP_LLAVE_DER    reduce using rule 20 (crear_var -> empty .)
    KW_FUNCION      reduce using rule 20 (crear_var -> empty .)
    KW_INICIO       reduce using rule 20 (crear_var -> empty .)


state 8

    (5) funcion -> KW_FUNCION . tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (7) tipo_funcion -> . tipo
    (8) tipo_funcion -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    ID              reduce using rule 1 (empty -> .)

    tipo                           shift and go to state 15
    tipo_funcion                   shift and go to state 16
    empty                          shift and go to state 17

state 9

    (2) inicio -> crear_var crear_funciones . KW_INICIO funcion

    KW_INICIO       shift and go to state 18


state 10

    (4) crear_funciones -> empty .

    KW_INICIO       reduce using rule 4 (crear_funciones -> empty .)


state 11

    (3) crear_funciones -> funcion . crear_funciones
    (3) crear_funciones -> . funcion crear_funciones
    (4) crear_funciones -> . empty
    (5) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (1) empty -> .

    KW_FUNCION      shift and go to state 8
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_funciones                shift and go to state 19
    funcion                        shift and go to state 11
    empty                          shift and go to state 10

state 12

    (19) crear_var -> tipo def_var . otra_var op_punto_coma crear_var
    (25) otra_var -> . print_coma def_var otra_var
    (26) otra_var -> . empty
    (17) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 21
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_var                       shift and go to state 20
    print_coma                     shift and go to state 22
    empty                          shift and go to state 23

state 13

    (6) print_id -> ID .

    OP_CORCHETE_IZQ reduce using rule 6 (print_id -> ID .)
    OP_COMA         reduce using rule 6 (print_id -> ID .)
    OP_PUNTO_COMA   reduce using rule 6 (print_id -> ID .)
    OP_PARENTESIS_IZQ reduce using rule 6 (print_id -> ID .)


state 14

    (22) def_var -> print_id . arr_not arr_not
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

  ! shift/reduce conflict for OP_CORCHETE_IZQ resolved as shift
    OP_CORCHETE_IZQ shift and go to state 25
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

  ! OP_CORCHETE_IZQ [ reduce using rule 1 (empty -> .) ]

    arr_not                        shift and go to state 24
    empty                          shift and go to state 26

state 15

    (7) tipo_funcion -> tipo .

    ID              reduce using rule 7 (tipo_funcion -> tipo .)


state 16

    (5) funcion -> KW_FUNCION tipo_funcion . print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (6) print_id -> . ID

    ID              shift and go to state 13

    print_id                       shift and go to state 27

state 17

    (8) tipo_funcion -> empty .

    ID              reduce using rule 8 (tipo_funcion -> empty .)


state 18

    (2) inicio -> crear_var crear_funciones KW_INICIO . funcion
    (5) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func

    KW_FUNCION      shift and go to state 8

    funcion                        shift and go to state 28

state 19

    (3) crear_funciones -> funcion crear_funciones .

    KW_INICIO       reduce using rule 3 (crear_funciones -> funcion crear_funciones .)


state 20

    (19) crear_var -> tipo def_var otra_var . op_punto_coma crear_var
    (21) op_punto_coma -> . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 30

    op_punto_coma                  shift and go to state 29

state 21

    (17) print_coma -> OP_COMA .

    KW_ENTERO       reduce using rule 17 (print_coma -> OP_COMA .)
    KW_FLOTANTE     reduce using rule 17 (print_coma -> OP_COMA .)
    KW_STRING       reduce using rule 17 (print_coma -> OP_COMA .)
    ID              reduce using rule 17 (print_coma -> OP_COMA .)


state 22

    (25) otra_var -> print_coma . def_var otra_var
    (22) def_var -> . print_id arr_not arr_not
    (6) print_id -> . ID

    ID              shift and go to state 13

    def_var                        shift and go to state 31
    print_id                       shift and go to state 14

state 23

    (26) otra_var -> empty .

    OP_PUNTO_COMA   reduce using rule 26 (otra_var -> empty .)


state 24

    (22) def_var -> print_id arr_not . arr_not
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

    OP_CORCHETE_IZQ shift and go to state 25
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    arr_not                        shift and go to state 32
    empty                          shift and go to state 26

state 25

    (23) arr_not -> OP_CORCHETE_IZQ . CTE_E OP_CORCHETE_DER

    CTE_E           shift and go to state 33


state 26

    (24) arr_not -> empty .

    OP_FACTOR       reduce using rule 24 (arr_not -> empty .)
    OP_TERMINO      reduce using rule 24 (arr_not -> empty .)
    OP_COMPARADOR   reduce using rule 24 (arr_not -> empty .)
    OP_AND          reduce using rule 24 (arr_not -> empty .)
    OP_OR           reduce using rule 24 (arr_not -> empty .)
    OP_PUNTO_COMA   reduce using rule 24 (arr_not -> empty .)
    OP_PARENTESIS_DER reduce using rule 24 (arr_not -> empty .)
    OP_COMA         reduce using rule 24 (arr_not -> empty .)
    OP_CORCHETE_IZQ reduce using rule 24 (arr_not -> empty .)
    OP_ASIGNACION   reduce using rule 24 (arr_not -> empty .)


state 27

    (5) funcion -> KW_FUNCION tipo_funcion print_id . OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func

    OP_PARENTESIS_IZQ shift and go to state 34


state 28

    (2) inicio -> crear_var crear_funciones KW_INICIO funcion .

    $end            reduce using rule 2 (inicio -> crear_var crear_funciones KW_INICIO funcion .)


state 29

    (19) crear_var -> tipo def_var otra_var op_punto_coma . crear_var
    (19) crear_var -> . tipo def_var otra_var op_punto_coma crear_var
    (20) crear_var -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    KW_FUNCION      reduce using rule 1 (empty -> .)
    KW_INICIO       reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_RETORNA      reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    crear_var                      shift and go to state 35
    tipo                           shift and go to state 4
    empty                          shift and go to state 7

state 30

    (21) op_punto_coma -> OP_PUNTO_COMA .

    KW_ENTERO       reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_FLOTANTE     reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_STRING       reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_FUNCION      reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_INICIO       reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    ID              reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_SI           reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 21 (op_punto_coma -> OP_PUNTO_COMA .)


state 31

    (25) otra_var -> print_coma def_var . otra_var
    (25) otra_var -> . print_coma def_var otra_var
    (26) otra_var -> . empty
    (17) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 21
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_var                       shift and go to state 36
    empty                          shift and go to state 23
    print_coma                     shift and go to state 22

state 32

    (22) def_var -> print_id arr_not arr_not .

    OP_COMA         reduce using rule 22 (def_var -> print_id arr_not arr_not .)
    OP_PUNTO_COMA   reduce using rule 22 (def_var -> print_id arr_not arr_not .)


state 33

    (23) arr_not -> OP_CORCHETE_IZQ CTE_E . OP_CORCHETE_DER

    OP_CORCHETE_DER shift and go to state 37


state 34

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ . parametros OP_PARENTESIS_DER bloque_func
    (12) parametros -> . toma_parametro
    (13) parametros -> . empty
    (14) toma_parametro -> . tipo ID otro_parametro
    (1) empty -> .
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING

    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6

    tipo                           shift and go to state 38
    toma_parametro                 shift and go to state 39
    parametros                     shift and go to state 40
    empty                          shift and go to state 41

state 35

    (19) crear_var -> tipo def_var otra_var op_punto_coma crear_var .

    ID              reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_SI           reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_MIENTRAS     reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_RETORNA      reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_CAMINA       reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_GIRA         reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_MIRA         reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_REINICIAR    reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_INPUT        reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_OUTPUT       reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_SALTA_A      reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    OP_LLAVE_DER    reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_FUNCION      reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)
    KW_INICIO       reduce using rule 19 (crear_var -> tipo def_var otra_var op_punto_coma crear_var .)


state 36

    (25) otra_var -> print_coma def_var otra_var .

    OP_PUNTO_COMA   reduce using rule 25 (otra_var -> print_coma def_var otra_var .)


state 37

    (23) arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .

    OP_FACTOR       reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_TERMINO      reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_COMPARADOR   reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_AND          reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_OR           reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_PUNTO_COMA   reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_PARENTESIS_DER reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_COMA         reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_CORCHETE_IZQ reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_ASIGNACION   reduce using rule 23 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)


state 38

    (14) toma_parametro -> tipo . ID otro_parametro

    ID              shift and go to state 42


state 39

    (12) parametros -> toma_parametro .

    OP_PARENTESIS_DER reduce using rule 12 (parametros -> toma_parametro .)


state 40

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros . OP_PARENTESIS_DER bloque_func

    OP_PARENTESIS_DER shift and go to state 43


state 41

    (13) parametros -> empty .

    OP_PARENTESIS_DER reduce using rule 13 (parametros -> empty .)


state 42

    (14) toma_parametro -> tipo ID . otro_parametro
    (15) otro_parametro -> . print_coma toma_parametro
    (16) otro_parametro -> . empty
    (17) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 21
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    print_coma                     shift and go to state 44
    empty                          shift and go to state 46
    otro_parametro                 shift and go to state 45

state 43

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER . bloque_func
    (18) bloque_func -> . OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 48

    bloque_func                    shift and go to state 47

state 44

    (15) otro_parametro -> print_coma . toma_parametro
    (14) toma_parametro -> . tipo ID otro_parametro
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6

    tipo                           shift and go to state 38
    toma_parametro                 shift and go to state 49

state 45

    (14) toma_parametro -> tipo ID otro_parametro .

    OP_PARENTESIS_DER reduce using rule 14 (toma_parametro -> tipo ID otro_parametro .)


state 46

    (16) otro_parametro -> empty .

    OP_PARENTESIS_DER reduce using rule 16 (otro_parametro -> empty .)


state 47

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .

    KW_FUNCION      reduce using rule 5 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)
    KW_INICIO       reduce using rule 5 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)
    $end            reduce using rule 5 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)


state 48

    (18) bloque_func -> OP_LLAVE_IZQ . crear_var estatuto_rec OP_LLAVE_DER
    (19) crear_var -> . tipo def_var otra_var op_punto_coma crear_var
    (20) crear_var -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_RETORNA      reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    crear_var                      shift and go to state 50
    tipo                           shift and go to state 4
    empty                          shift and go to state 7

state 49

    (15) otro_parametro -> print_coma toma_parametro .

    OP_PARENTESIS_DER reduce using rule 15 (otro_parametro -> print_coma toma_parametro .)


state 50

    (18) bloque_func -> OP_LLAVE_IZQ crear_var . estatuto_rec OP_LLAVE_DER
    (33) estatuto_rec -> . estatuto estatuto_rec
    (34) estatuto_rec -> . empty
    (27) estatuto -> . asignacion
    (28) estatuto -> . condicion
    (29) estatuto -> . ciclo
    (30) estatuto -> . ejec_funcion
    (31) estatuto -> . funcion_predef
    (32) estatuto -> . retorna
    (1) empty -> .
    (35) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (78) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (36) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (37) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (42) funcion_predef -> . camina
    (43) funcion_predef -> . gira
    (44) funcion_predef -> . mira
    (45) funcion_predef -> . reiniciar
    (46) funcion_predef -> . input
    (47) funcion_predef -> . output
    (48) funcion_predef -> . salta_a
    (82) retorna -> . KW_RETORNA expresion OP_PUNTO_COMA
    (68) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (69) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (70) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (109) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (110) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (113) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (114) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_LLAVE_DER    reduce using rule 1 (empty -> .)
    ID              shift and go to state 71
    KW_SI           shift and go to state 57
    KW_MIENTRAS     shift and go to state 68
    KW_RETORNA      shift and go to state 75
    KW_CAMINA       shift and go to state 69
    KW_GIRA         shift and go to state 66
    KW_MIRA         shift and go to state 76
    KW_REINICIAR    shift and go to state 56
    KW_INPUT        shift and go to state 70
    KW_OUTPUT       shift and go to state 73
    KW_SALTA_A      shift and go to state 51

    reiniciar                      shift and go to state 52
    camina                         shift and go to state 53
    gira                           shift and go to state 54
    ejec_funcion                   shift and go to state 55
    funcion_predef                 shift and go to state 58
    ciclo                          shift and go to state 59
    estatuto                       shift and go to state 60
    condicion                      shift and go to state 61
    retorna                        shift and go to state 62
    input                          shift and go to state 63
    empty                          shift and go to state 64
    mira                           shift and go to state 65
    estatuto_rec                   shift and go to state 67
    asignacion                     shift and go to state 72
    salta_a                        shift and go to state 74
    output                         shift and go to state 77

state 51

    (114) salta_a -> KW_SALTA_A . OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 78


state 52

    (45) funcion_predef -> reiniciar .

    OP_LLAVE_DER    reduce using rule 45 (funcion_predef -> reiniciar .)
    ID              reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_SI           reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_MIENTRAS     reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_RETORNA      reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_CAMINA       reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_GIRA         reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_MIRA         reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_REINICIAR    reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_INPUT        reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_OUTPUT       reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_SALTA_A      reduce using rule 45 (funcion_predef -> reiniciar .)


state 53

    (42) funcion_predef -> camina .

    OP_LLAVE_DER    reduce using rule 42 (funcion_predef -> camina .)
    ID              reduce using rule 42 (funcion_predef -> camina .)
    KW_SI           reduce using rule 42 (funcion_predef -> camina .)
    KW_MIENTRAS     reduce using rule 42 (funcion_predef -> camina .)
    KW_RETORNA      reduce using rule 42 (funcion_predef -> camina .)
    KW_CAMINA       reduce using rule 42 (funcion_predef -> camina .)
    KW_GIRA         reduce using rule 42 (funcion_predef -> camina .)
    KW_MIRA         reduce using rule 42 (funcion_predef -> camina .)
    KW_REINICIAR    reduce using rule 42 (funcion_predef -> camina .)
    KW_INPUT        reduce using rule 42 (funcion_predef -> camina .)
    KW_OUTPUT       reduce using rule 42 (funcion_predef -> camina .)
    KW_SALTA_A      reduce using rule 42 (funcion_predef -> camina .)


state 54

    (43) funcion_predef -> gira .

    OP_LLAVE_DER    reduce using rule 43 (funcion_predef -> gira .)
    ID              reduce using rule 43 (funcion_predef -> gira .)
    KW_SI           reduce using rule 43 (funcion_predef -> gira .)
    KW_MIENTRAS     reduce using rule 43 (funcion_predef -> gira .)
    KW_RETORNA      reduce using rule 43 (funcion_predef -> gira .)
    KW_CAMINA       reduce using rule 43 (funcion_predef -> gira .)
    KW_GIRA         reduce using rule 43 (funcion_predef -> gira .)
    KW_MIRA         reduce using rule 43 (funcion_predef -> gira .)
    KW_REINICIAR    reduce using rule 43 (funcion_predef -> gira .)
    KW_INPUT        reduce using rule 43 (funcion_predef -> gira .)
    KW_OUTPUT       reduce using rule 43 (funcion_predef -> gira .)
    KW_SALTA_A      reduce using rule 43 (funcion_predef -> gira .)


state 55

    (30) estatuto -> ejec_funcion .

    OP_LLAVE_DER    reduce using rule 30 (estatuto -> ejec_funcion .)
    ID              reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_SI           reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_MIENTRAS     reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_RETORNA      reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_CAMINA       reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_GIRA         reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_MIRA         reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_REINICIAR    reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_INPUT        reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_OUTPUT       reduce using rule 30 (estatuto -> ejec_funcion .)
    KW_SALTA_A      reduce using rule 30 (estatuto -> ejec_funcion .)


state 56

    (109) reiniciar -> KW_REINICIAR . OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 79


state 57

    (78) condicion -> KW_SI . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no

    OP_PARENTESIS_IZQ shift and go to state 80


state 58

    (31) estatuto -> funcion_predef .

    OP_LLAVE_DER    reduce using rule 31 (estatuto -> funcion_predef .)
    ID              reduce using rule 31 (estatuto -> funcion_predef .)
    KW_SI           reduce using rule 31 (estatuto -> funcion_predef .)
    KW_MIENTRAS     reduce using rule 31 (estatuto -> funcion_predef .)
    KW_RETORNA      reduce using rule 31 (estatuto -> funcion_predef .)
    KW_CAMINA       reduce using rule 31 (estatuto -> funcion_predef .)
    KW_GIRA         reduce using rule 31 (estatuto -> funcion_predef .)
    KW_MIRA         reduce using rule 31 (estatuto -> funcion_predef .)
    KW_REINICIAR    reduce using rule 31 (estatuto -> funcion_predef .)
    KW_INPUT        reduce using rule 31 (estatuto -> funcion_predef .)
    KW_OUTPUT       reduce using rule 31 (estatuto -> funcion_predef .)
    KW_SALTA_A      reduce using rule 31 (estatuto -> funcion_predef .)


state 59

    (29) estatuto -> ciclo .

    OP_LLAVE_DER    reduce using rule 29 (estatuto -> ciclo .)
    ID              reduce using rule 29 (estatuto -> ciclo .)
    KW_SI           reduce using rule 29 (estatuto -> ciclo .)
    KW_MIENTRAS     reduce using rule 29 (estatuto -> ciclo .)
    KW_RETORNA      reduce using rule 29 (estatuto -> ciclo .)
    KW_CAMINA       reduce using rule 29 (estatuto -> ciclo .)
    KW_GIRA         reduce using rule 29 (estatuto -> ciclo .)
    KW_MIRA         reduce using rule 29 (estatuto -> ciclo .)
    KW_REINICIAR    reduce using rule 29 (estatuto -> ciclo .)
    KW_INPUT        reduce using rule 29 (estatuto -> ciclo .)
    KW_OUTPUT       reduce using rule 29 (estatuto -> ciclo .)
    KW_SALTA_A      reduce using rule 29 (estatuto -> ciclo .)


state 60

    (33) estatuto_rec -> estatuto . estatuto_rec
    (33) estatuto_rec -> . estatuto estatuto_rec
    (34) estatuto_rec -> . empty
    (27) estatuto -> . asignacion
    (28) estatuto -> . condicion
    (29) estatuto -> . ciclo
    (30) estatuto -> . ejec_funcion
    (31) estatuto -> . funcion_predef
    (32) estatuto -> . retorna
    (1) empty -> .
    (35) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (78) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (36) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (37) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (42) funcion_predef -> . camina
    (43) funcion_predef -> . gira
    (44) funcion_predef -> . mira
    (45) funcion_predef -> . reiniciar
    (46) funcion_predef -> . input
    (47) funcion_predef -> . output
    (48) funcion_predef -> . salta_a
    (82) retorna -> . KW_RETORNA expresion OP_PUNTO_COMA
    (68) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (69) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (70) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (109) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (110) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (113) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (114) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_LLAVE_DER    reduce using rule 1 (empty -> .)
    ID              shift and go to state 71
    KW_SI           shift and go to state 57
    KW_MIENTRAS     shift and go to state 68
    KW_RETORNA      shift and go to state 75
    KW_CAMINA       shift and go to state 69
    KW_GIRA         shift and go to state 66
    KW_MIRA         shift and go to state 76
    KW_REINICIAR    shift and go to state 56
    KW_INPUT        shift and go to state 70
    KW_OUTPUT       shift and go to state 73
    KW_SALTA_A      shift and go to state 51

    reiniciar                      shift and go to state 52
    camina                         shift and go to state 53
    gira                           shift and go to state 54
    ejec_funcion                   shift and go to state 55
    funcion_predef                 shift and go to state 58
    ciclo                          shift and go to state 59
    estatuto                       shift and go to state 60
    condicion                      shift and go to state 61
    retorna                        shift and go to state 62
    input                          shift and go to state 63
    empty                          shift and go to state 64
    mira                           shift and go to state 65
    estatuto_rec                   shift and go to state 81
    asignacion                     shift and go to state 72
    salta_a                        shift and go to state 74
    output                         shift and go to state 77

state 61

    (28) estatuto -> condicion .

    OP_LLAVE_DER    reduce using rule 28 (estatuto -> condicion .)
    ID              reduce using rule 28 (estatuto -> condicion .)
    KW_SI           reduce using rule 28 (estatuto -> condicion .)
    KW_MIENTRAS     reduce using rule 28 (estatuto -> condicion .)
    KW_RETORNA      reduce using rule 28 (estatuto -> condicion .)
    KW_CAMINA       reduce using rule 28 (estatuto -> condicion .)
    KW_GIRA         reduce using rule 28 (estatuto -> condicion .)
    KW_MIRA         reduce using rule 28 (estatuto -> condicion .)
    KW_REINICIAR    reduce using rule 28 (estatuto -> condicion .)
    KW_INPUT        reduce using rule 28 (estatuto -> condicion .)
    KW_OUTPUT       reduce using rule 28 (estatuto -> condicion .)
    KW_SALTA_A      reduce using rule 28 (estatuto -> condicion .)


state 62

    (32) estatuto -> retorna .

    OP_LLAVE_DER    reduce using rule 32 (estatuto -> retorna .)
    ID              reduce using rule 32 (estatuto -> retorna .)
    KW_SI           reduce using rule 32 (estatuto -> retorna .)
    KW_MIENTRAS     reduce using rule 32 (estatuto -> retorna .)
    KW_RETORNA      reduce using rule 32 (estatuto -> retorna .)
    KW_CAMINA       reduce using rule 32 (estatuto -> retorna .)
    KW_GIRA         reduce using rule 32 (estatuto -> retorna .)
    KW_MIRA         reduce using rule 32 (estatuto -> retorna .)
    KW_REINICIAR    reduce using rule 32 (estatuto -> retorna .)
    KW_INPUT        reduce using rule 32 (estatuto -> retorna .)
    KW_OUTPUT       reduce using rule 32 (estatuto -> retorna .)
    KW_SALTA_A      reduce using rule 32 (estatuto -> retorna .)


state 63

    (46) funcion_predef -> input .

    OP_LLAVE_DER    reduce using rule 46 (funcion_predef -> input .)
    ID              reduce using rule 46 (funcion_predef -> input .)
    KW_SI           reduce using rule 46 (funcion_predef -> input .)
    KW_MIENTRAS     reduce using rule 46 (funcion_predef -> input .)
    KW_RETORNA      reduce using rule 46 (funcion_predef -> input .)
    KW_CAMINA       reduce using rule 46 (funcion_predef -> input .)
    KW_GIRA         reduce using rule 46 (funcion_predef -> input .)
    KW_MIRA         reduce using rule 46 (funcion_predef -> input .)
    KW_REINICIAR    reduce using rule 46 (funcion_predef -> input .)
    KW_INPUT        reduce using rule 46 (funcion_predef -> input .)
    KW_OUTPUT       reduce using rule 46 (funcion_predef -> input .)
    KW_SALTA_A      reduce using rule 46 (funcion_predef -> input .)


state 64

    (34) estatuto_rec -> empty .

    OP_LLAVE_DER    reduce using rule 34 (estatuto_rec -> empty .)


state 65

    (44) funcion_predef -> mira .

    OP_LLAVE_DER    reduce using rule 44 (funcion_predef -> mira .)
    ID              reduce using rule 44 (funcion_predef -> mira .)
    KW_SI           reduce using rule 44 (funcion_predef -> mira .)
    KW_MIENTRAS     reduce using rule 44 (funcion_predef -> mira .)
    KW_RETORNA      reduce using rule 44 (funcion_predef -> mira .)
    KW_CAMINA       reduce using rule 44 (funcion_predef -> mira .)
    KW_GIRA         reduce using rule 44 (funcion_predef -> mira .)
    KW_MIRA         reduce using rule 44 (funcion_predef -> mira .)
    KW_REINICIAR    reduce using rule 44 (funcion_predef -> mira .)
    KW_INPUT        reduce using rule 44 (funcion_predef -> mira .)
    KW_OUTPUT       reduce using rule 44 (funcion_predef -> mira .)
    KW_SALTA_A      reduce using rule 44 (funcion_predef -> mira .)


state 66

    (69) gira -> KW_GIRA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 82


state 67

    (18) bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec . OP_LLAVE_DER

    OP_LLAVE_DER    shift and go to state 83


state 68

    (36) ciclo -> KW_MIENTRAS . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est

    OP_PARENTESIS_IZQ shift and go to state 84


state 69

    (68) camina -> KW_CAMINA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 85


state 70

    (110) input -> KW_INPUT . OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 86


state 71

    (35) asignacion -> ID . arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (37) ejec_funcion -> ID . OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

  ! shift/reduce conflict for OP_CORCHETE_IZQ resolved as shift
    OP_PARENTESIS_IZQ shift and go to state 88
    OP_CORCHETE_IZQ shift and go to state 25
    OP_ASIGNACION   reduce using rule 1 (empty -> .)

  ! OP_CORCHETE_IZQ [ reduce using rule 1 (empty -> .) ]

    arr_not                        shift and go to state 87
    empty                          shift and go to state 26

state 72

    (27) estatuto -> asignacion .

    OP_LLAVE_DER    reduce using rule 27 (estatuto -> asignacion .)
    ID              reduce using rule 27 (estatuto -> asignacion .)
    KW_SI           reduce using rule 27 (estatuto -> asignacion .)
    KW_MIENTRAS     reduce using rule 27 (estatuto -> asignacion .)
    KW_RETORNA      reduce using rule 27 (estatuto -> asignacion .)
    KW_CAMINA       reduce using rule 27 (estatuto -> asignacion .)
    KW_GIRA         reduce using rule 27 (estatuto -> asignacion .)
    KW_MIRA         reduce using rule 27 (estatuto -> asignacion .)
    KW_REINICIAR    reduce using rule 27 (estatuto -> asignacion .)
    KW_INPUT        reduce using rule 27 (estatuto -> asignacion .)
    KW_OUTPUT       reduce using rule 27 (estatuto -> asignacion .)
    KW_SALTA_A      reduce using rule 27 (estatuto -> asignacion .)


state 73

    (113) output -> KW_OUTPUT . OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 89


state 74

    (48) funcion_predef -> salta_a .

    OP_LLAVE_DER    reduce using rule 48 (funcion_predef -> salta_a .)
    ID              reduce using rule 48 (funcion_predef -> salta_a .)
    KW_SI           reduce using rule 48 (funcion_predef -> salta_a .)
    KW_MIENTRAS     reduce using rule 48 (funcion_predef -> salta_a .)
    KW_RETORNA      reduce using rule 48 (funcion_predef -> salta_a .)
    KW_CAMINA       reduce using rule 48 (funcion_predef -> salta_a .)
    KW_GIRA         reduce using rule 48 (funcion_predef -> salta_a .)
    KW_MIRA         reduce using rule 48 (funcion_predef -> salta_a .)
    KW_REINICIAR    reduce using rule 48 (funcion_predef -> salta_a .)
    KW_INPUT        reduce using rule 48 (funcion_predef -> salta_a .)
    KW_OUTPUT       reduce using rule 48 (funcion_predef -> salta_a .)
    KW_SALTA_A      reduce using rule 48 (funcion_predef -> salta_a .)


state 75

    (82) retorna -> KW_RETORNA . expresion OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    expresion                      shift and go to state 113
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    comp_and                       shift and go to state 100
    termino                        shift and go to state 95
    exp                            shift and go to state 108
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 76

    (70) mira -> KW_MIRA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 118


state 77

    (47) funcion_predef -> output .

    OP_LLAVE_DER    reduce using rule 47 (funcion_predef -> output .)
    ID              reduce using rule 47 (funcion_predef -> output .)
    KW_SI           reduce using rule 47 (funcion_predef -> output .)
    KW_MIENTRAS     reduce using rule 47 (funcion_predef -> output .)
    KW_RETORNA      reduce using rule 47 (funcion_predef -> output .)
    KW_CAMINA       reduce using rule 47 (funcion_predef -> output .)
    KW_GIRA         reduce using rule 47 (funcion_predef -> output .)
    KW_MIRA         reduce using rule 47 (funcion_predef -> output .)
    KW_REINICIAR    reduce using rule 47 (funcion_predef -> output .)
    KW_INPUT        reduce using rule 47 (funcion_predef -> output .)
    KW_OUTPUT       reduce using rule 47 (funcion_predef -> output .)
    KW_SALTA_A      reduce using rule 47 (funcion_predef -> output .)


state 78

    (114) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ . CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    CTE_E           shift and go to state 119


state 79

    (109) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 120


state 80

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER bloque_est si_no
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    comp_or                        shift and go to state 96
    a_entero                       shift and go to state 112
    comp_and                       shift and go to state 100
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    concat_string                  shift and go to state 97
    expresion                      shift and go to state 121
    exp                            shift and go to state 108

state 81

    (33) estatuto_rec -> estatuto estatuto_rec .

    OP_LLAVE_DER    reduce using rule 33 (estatuto_rec -> estatuto estatuto_rec .)


state 82

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    expresion                      shift and go to state 122
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    comp_and                       shift and go to state 100
    termino                        shift and go to state 95
    exp                            shift and go to state 108
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 83

    (18) bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .

    KW_FUNCION      reduce using rule 18 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)
    KW_INICIO       reduce using rule 18 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)
    $end            reduce using rule 18 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)


state 84

    (36) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER bloque_est
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    comp_and                       shift and go to state 100
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112
    expresion                      shift and go to state 123
    exp                            shift and go to state 108

state 85

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    expresion                      shift and go to state 124
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    comp_and                       shift and go to state 100
    termino                        shift and go to state 95
    exp                            shift and go to state 108
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 86

    (110) input -> KW_INPUT OP_PARENTESIS_IZQ . ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA

    ID              shift and go to state 125


state 87

    (35) asignacion -> ID arr_not . arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

    OP_CORCHETE_IZQ shift and go to state 25
    OP_ASIGNACION   reduce using rule 1 (empty -> .)

    arr_not                        shift and go to state 126
    empty                          shift and go to state 26

state 88

    (37) ejec_funcion -> ID OP_PARENTESIS_IZQ . ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (38) ejec_funcion_medio -> . expresion ejec_funcion_cont
    (39) ejec_funcion_medio -> . empty
    (49) expresion -> . comp_or otra_expresion_or
    (1) empty -> .
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    comp_or                        shift and go to state 96
    a_entero                       shift and go to state 112
    comp_and                       shift and go to state 100
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    empty                          shift and go to state 127
    ejec_funcion_medio             shift and go to state 128
    a_string                       shift and go to state 110
    concat_string                  shift and go to state 97
    expresion                      shift and go to state 129
    exp                            shift and go to state 108

state 89

    (113) output -> KW_OUTPUT OP_PARENTESIS_IZQ . concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (103) concat_string -> . CTE_S concat_string2

    CTE_S           shift and go to state 98

    concat_string                  shift and go to state 130

state 90

    (66) factor -> OP_TERMINO . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    a_entero                       shift and go to state 112
    a_string                       shift and go to state 110
    a_flotante                     shift and go to state 104
    var_cte                        shift and go to state 131
    concat_string                  shift and go to state 97

state 91

    (89) var_cte -> KW_NORTE .

    OP_FACTOR       reduce using rule 89 (var_cte -> KW_NORTE .)
    OP_TERMINO      reduce using rule 89 (var_cte -> KW_NORTE .)
    OP_COMPARADOR   reduce using rule 89 (var_cte -> KW_NORTE .)
    OP_AND          reduce using rule 89 (var_cte -> KW_NORTE .)
    OP_OR           reduce using rule 89 (var_cte -> KW_NORTE .)
    OP_PARENTESIS_DER reduce using rule 89 (var_cte -> KW_NORTE .)
    OP_PUNTO_COMA   reduce using rule 89 (var_cte -> KW_NORTE .)
    OP_COMA         reduce using rule 89 (var_cte -> KW_NORTE .)


state 92

    (67) factor -> var_cte .

    OP_FACTOR       reduce using rule 67 (factor -> var_cte .)
    OP_TERMINO      reduce using rule 67 (factor -> var_cte .)
    OP_COMPARADOR   reduce using rule 67 (factor -> var_cte .)
    OP_AND          reduce using rule 67 (factor -> var_cte .)
    OP_PUNTO_COMA   reduce using rule 67 (factor -> var_cte .)
    OP_PARENTESIS_DER reduce using rule 67 (factor -> var_cte .)
    OP_COMA         reduce using rule 67 (factor -> var_cte .)
    OP_OR           reduce using rule 67 (factor -> var_cte .)


state 93

    (94) var_cte -> KW_ALTO .

    OP_FACTOR       reduce using rule 94 (var_cte -> KW_ALTO .)
    OP_TERMINO      reduce using rule 94 (var_cte -> KW_ALTO .)
    OP_COMPARADOR   reduce using rule 94 (var_cte -> KW_ALTO .)
    OP_AND          reduce using rule 94 (var_cte -> KW_ALTO .)
    OP_OR           reduce using rule 94 (var_cte -> KW_ALTO .)
    OP_PARENTESIS_DER reduce using rule 94 (var_cte -> KW_ALTO .)
    OP_PUNTO_COMA   reduce using rule 94 (var_cte -> KW_ALTO .)
    OP_COMA         reduce using rule 94 (var_cte -> KW_ALTO .)


state 94

    (91) var_cte -> KW_ESTE .

    OP_FACTOR       reduce using rule 91 (var_cte -> KW_ESTE .)
    OP_TERMINO      reduce using rule 91 (var_cte -> KW_ESTE .)
    OP_COMPARADOR   reduce using rule 91 (var_cte -> KW_ESTE .)
    OP_AND          reduce using rule 91 (var_cte -> KW_ESTE .)
    OP_OR           reduce using rule 91 (var_cte -> KW_ESTE .)
    OP_PARENTESIS_DER reduce using rule 91 (var_cte -> KW_ESTE .)
    OP_PUNTO_COMA   reduce using rule 91 (var_cte -> KW_ESTE .)
    OP_COMA         reduce using rule 91 (var_cte -> KW_ESTE .)


state 95

    (59) exp -> termino . exp2
    (60) exp2 -> . OP_TERMINO exp
    (61) exp2 -> . empty
    (1) empty -> .

    OP_TERMINO      shift and go to state 132
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

    exp2                           shift and go to state 133
    empty                          shift and go to state 134

state 96

    (49) expresion -> comp_or . otra_expresion_or
    (50) otra_expresion_or -> . OP_OR comp_or
    (51) otra_expresion_or -> . empty
    (1) empty -> .

    OP_OR           shift and go to state 135
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

    otra_expresion_or              shift and go to state 136
    empty                          shift and go to state 137

state 97

    (86) var_cte -> concat_string .

    OP_FACTOR       reduce using rule 86 (var_cte -> concat_string .)
    OP_TERMINO      reduce using rule 86 (var_cte -> concat_string .)
    OP_COMPARADOR   reduce using rule 86 (var_cte -> concat_string .)
    OP_AND          reduce using rule 86 (var_cte -> concat_string .)
    OP_OR           reduce using rule 86 (var_cte -> concat_string .)
    OP_PARENTESIS_DER reduce using rule 86 (var_cte -> concat_string .)
    OP_PUNTO_COMA   reduce using rule 86 (var_cte -> concat_string .)
    OP_COMA         reduce using rule 86 (var_cte -> concat_string .)


state 98

    (103) concat_string -> CTE_S . concat_string2
    (104) concat_string2 -> . OP_PUNTO CTE_S
    (105) concat_string2 -> . empty
    (1) empty -> .

    OP_PUNTO        shift and go to state 138
    OP_FACTOR       reduce using rule 1 (empty -> .)
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

    concat_string2                 shift and go to state 139
    empty                          shift and go to state 140

state 99

    (88) var_cte -> KW_FALSO .

    OP_FACTOR       reduce using rule 88 (var_cte -> KW_FALSO .)
    OP_TERMINO      reduce using rule 88 (var_cte -> KW_FALSO .)
    OP_COMPARADOR   reduce using rule 88 (var_cte -> KW_FALSO .)
    OP_AND          reduce using rule 88 (var_cte -> KW_FALSO .)
    OP_OR           reduce using rule 88 (var_cte -> KW_FALSO .)
    OP_PARENTESIS_DER reduce using rule 88 (var_cte -> KW_FALSO .)
    OP_PUNTO_COMA   reduce using rule 88 (var_cte -> KW_FALSO .)
    OP_COMA         reduce using rule 88 (var_cte -> KW_FALSO .)


state 100

    (52) comp_or -> comp_and . otra_expresion_and
    (53) otra_expresion_and -> . OP_AND comp_and
    (54) otra_expresion_and -> . empty
    (1) empty -> .

    OP_AND          shift and go to state 142
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

    otra_expresion_and             shift and go to state 141
    empty                          shift and go to state 143

state 101

    (92) var_cte -> KW_OESTE .

    OP_FACTOR       reduce using rule 92 (var_cte -> KW_OESTE .)
    OP_TERMINO      reduce using rule 92 (var_cte -> KW_OESTE .)
    OP_COMPARADOR   reduce using rule 92 (var_cte -> KW_OESTE .)
    OP_AND          reduce using rule 92 (var_cte -> KW_OESTE .)
    OP_OR           reduce using rule 92 (var_cte -> KW_OESTE .)
    OP_PARENTESIS_DER reduce using rule 92 (var_cte -> KW_OESTE .)
    OP_PUNTO_COMA   reduce using rule 92 (var_cte -> KW_OESTE .)
    OP_COMA         reduce using rule 92 (var_cte -> KW_OESTE .)


state 102

    (62) termino -> factor . termino2
    (63) termino2 -> . OP_FACTOR termino
    (64) termino2 -> . empty
    (1) empty -> .

    OP_FACTOR       shift and go to state 144
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

    termino2                       shift and go to state 145
    empty                          shift and go to state 146

state 103

    (85) var_cte -> CTE_F .

    OP_FACTOR       reduce using rule 85 (var_cte -> CTE_F .)
    OP_TERMINO      reduce using rule 85 (var_cte -> CTE_F .)
    OP_COMPARADOR   reduce using rule 85 (var_cte -> CTE_F .)
    OP_AND          reduce using rule 85 (var_cte -> CTE_F .)
    OP_OR           reduce using rule 85 (var_cte -> CTE_F .)
    OP_PARENTESIS_DER reduce using rule 85 (var_cte -> CTE_F .)
    OP_PUNTO_COMA   reduce using rule 85 (var_cte -> CTE_F .)
    OP_COMA         reduce using rule 85 (var_cte -> CTE_F .)


state 104

    (97) var_cte -> a_flotante .

    OP_FACTOR       reduce using rule 97 (var_cte -> a_flotante .)
    OP_TERMINO      reduce using rule 97 (var_cte -> a_flotante .)
    OP_COMPARADOR   reduce using rule 97 (var_cte -> a_flotante .)
    OP_AND          reduce using rule 97 (var_cte -> a_flotante .)
    OP_OR           reduce using rule 97 (var_cte -> a_flotante .)
    OP_PARENTESIS_DER reduce using rule 97 (var_cte -> a_flotante .)
    OP_PUNTO_COMA   reduce using rule 97 (var_cte -> a_flotante .)
    OP_COMA         reduce using rule 97 (var_cte -> a_flotante .)


state 105

    (84) var_cte -> CTE_E .

    OP_FACTOR       reduce using rule 84 (var_cte -> CTE_E .)
    OP_TERMINO      reduce using rule 84 (var_cte -> CTE_E .)
    OP_COMPARADOR   reduce using rule 84 (var_cte -> CTE_E .)
    OP_AND          reduce using rule 84 (var_cte -> CTE_E .)
    OP_OR           reduce using rule 84 (var_cte -> CTE_E .)
    OP_PARENTESIS_DER reduce using rule 84 (var_cte -> CTE_E .)
    OP_PUNTO_COMA   reduce using rule 84 (var_cte -> CTE_E .)
    OP_COMA         reduce using rule 84 (var_cte -> CTE_E .)


state 106

    (71) a_string -> KW_A_STRING . OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 147


state 107

    (90) var_cte -> KW_SUR .

    OP_FACTOR       reduce using rule 90 (var_cte -> KW_SUR .)
    OP_TERMINO      reduce using rule 90 (var_cte -> KW_SUR .)
    OP_COMPARADOR   reduce using rule 90 (var_cte -> KW_SUR .)
    OP_AND          reduce using rule 90 (var_cte -> KW_SUR .)
    OP_OR           reduce using rule 90 (var_cte -> KW_SUR .)
    OP_PARENTESIS_DER reduce using rule 90 (var_cte -> KW_SUR .)
    OP_PUNTO_COMA   reduce using rule 90 (var_cte -> KW_SUR .)
    OP_COMA         reduce using rule 90 (var_cte -> KW_SUR .)


state 108

    (55) comp_and -> exp . comp_and_end
    (56) comp_and_end -> . op_comparador exp
    (57) comp_and_end -> . empty
    (58) op_comparador -> . OP_COMPARADOR
    (1) empty -> .

    OP_COMPARADOR   shift and go to state 149
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

    comp_and_end                   shift and go to state 148
    empty                          shift and go to state 150
    op_comparador                  shift and go to state 151

state 109

    (93) var_cte -> KW_ANCHO .

    OP_FACTOR       reduce using rule 93 (var_cte -> KW_ANCHO .)
    OP_TERMINO      reduce using rule 93 (var_cte -> KW_ANCHO .)
    OP_COMPARADOR   reduce using rule 93 (var_cte -> KW_ANCHO .)
    OP_AND          reduce using rule 93 (var_cte -> KW_ANCHO .)
    OP_OR           reduce using rule 93 (var_cte -> KW_ANCHO .)
    OP_PARENTESIS_DER reduce using rule 93 (var_cte -> KW_ANCHO .)
    OP_PUNTO_COMA   reduce using rule 93 (var_cte -> KW_ANCHO .)
    OP_COMA         reduce using rule 93 (var_cte -> KW_ANCHO .)


state 110

    (95) var_cte -> a_string .

    OP_FACTOR       reduce using rule 95 (var_cte -> a_string .)
    OP_TERMINO      reduce using rule 95 (var_cte -> a_string .)
    OP_COMPARADOR   reduce using rule 95 (var_cte -> a_string .)
    OP_AND          reduce using rule 95 (var_cte -> a_string .)
    OP_OR           reduce using rule 95 (var_cte -> a_string .)
    OP_PARENTESIS_DER reduce using rule 95 (var_cte -> a_string .)
    OP_PUNTO_COMA   reduce using rule 95 (var_cte -> a_string .)
    OP_COMA         reduce using rule 95 (var_cte -> a_string .)


state 111

    (83) var_cte -> ID . var_cte2
    (98) var_cte2 -> . arr_not arr_not
    (99) var_cte2 -> . OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

  ! shift/reduce conflict for OP_CORCHETE_IZQ resolved as shift
    OP_PARENTESIS_IZQ shift and go to state 154
    OP_CORCHETE_IZQ shift and go to state 25
    OP_FACTOR       reduce using rule 1 (empty -> .)
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

  ! OP_CORCHETE_IZQ [ reduce using rule 1 (empty -> .) ]

    arr_not                        shift and go to state 153
    var_cte2                       shift and go to state 152
    empty                          shift and go to state 26

state 112

    (96) var_cte -> a_entero .

    OP_FACTOR       reduce using rule 96 (var_cte -> a_entero .)
    OP_TERMINO      reduce using rule 96 (var_cte -> a_entero .)
    OP_COMPARADOR   reduce using rule 96 (var_cte -> a_entero .)
    OP_AND          reduce using rule 96 (var_cte -> a_entero .)
    OP_OR           reduce using rule 96 (var_cte -> a_entero .)
    OP_PARENTESIS_DER reduce using rule 96 (var_cte -> a_entero .)
    OP_PUNTO_COMA   reduce using rule 96 (var_cte -> a_entero .)
    OP_COMA         reduce using rule 96 (var_cte -> a_entero .)


state 113

    (82) retorna -> KW_RETORNA expresion . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 155


state 114

    (87) var_cte -> KW_VERDADERO .

    OP_FACTOR       reduce using rule 87 (var_cte -> KW_VERDADERO .)
    OP_TERMINO      reduce using rule 87 (var_cte -> KW_VERDADERO .)
    OP_COMPARADOR   reduce using rule 87 (var_cte -> KW_VERDADERO .)
    OP_AND          reduce using rule 87 (var_cte -> KW_VERDADERO .)
    OP_OR           reduce using rule 87 (var_cte -> KW_VERDADERO .)
    OP_PARENTESIS_DER reduce using rule 87 (var_cte -> KW_VERDADERO .)
    OP_PUNTO_COMA   reduce using rule 87 (var_cte -> KW_VERDADERO .)
    OP_COMA         reduce using rule 87 (var_cte -> KW_VERDADERO .)


state 115

    (75) a_entero -> KW_A_ENTERO . OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 156


state 116

    (106) a_flotante -> KW_A_FLOTANTE . OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 157


state 117

    (65) factor -> OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    expresion                      shift and go to state 158
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    comp_and                       shift and go to state 100
    termino                        shift and go to state 95
    exp                            shift and go to state 108
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 118

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    expresion                      shift and go to state 159
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    comp_and                       shift and go to state 100
    termino                        shift and go to state 95
    exp                            shift and go to state 108
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 119

    (114) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E . OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_COMA         shift and go to state 160


state 120

    (109) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 161


state 121

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER bloque_est si_no

    OP_PARENTESIS_DER shift and go to state 162


state 122

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 163


state 123

    (36) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER bloque_est

    OP_PARENTESIS_DER shift and go to state 164


state 124

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 165


state 125

    (110) input -> KW_INPUT OP_PARENTESIS_IZQ ID . input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (111) input2 -> . OP_COMA ID input2
    (112) input2 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 167
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    input2                         shift and go to state 166
    empty                          shift and go to state 168

state 126

    (35) asignacion -> ID arr_not arr_not . OP_ASIGNACION expresion OP_PUNTO_COMA

    OP_ASIGNACION   shift and go to state 169


state 127

    (39) ejec_funcion_medio -> empty .

    OP_PARENTESIS_DER reduce using rule 39 (ejec_funcion_medio -> empty .)


state 128

    (37) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 170


state 129

    (38) ejec_funcion_medio -> expresion . ejec_funcion_cont
    (40) ejec_funcion_cont -> . OP_COMA expresion ejec_funcion_cont
    (41) ejec_funcion_cont -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 171
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    empty                          shift and go to state 172
    ejec_funcion_cont              shift and go to state 173

state 130

    (113) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 174


state 131

    (66) factor -> OP_TERMINO var_cte .

    OP_FACTOR       reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_TERMINO      reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_COMPARADOR   reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_AND          reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_PUNTO_COMA   reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_PARENTESIS_DER reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_COMA         reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_OR           reduce using rule 66 (factor -> OP_TERMINO var_cte .)


state 132

    (60) exp2 -> OP_TERMINO . exp
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    exp                            shift and go to state 175
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 133

    (59) exp -> termino exp2 .

    OP_COMPARADOR   reduce using rule 59 (exp -> termino exp2 .)
    OP_AND          reduce using rule 59 (exp -> termino exp2 .)
    OP_PUNTO_COMA   reduce using rule 59 (exp -> termino exp2 .)
    OP_PARENTESIS_DER reduce using rule 59 (exp -> termino exp2 .)
    OP_COMA         reduce using rule 59 (exp -> termino exp2 .)
    OP_OR           reduce using rule 59 (exp -> termino exp2 .)


state 134

    (61) exp2 -> empty .

    OP_COMPARADOR   reduce using rule 61 (exp2 -> empty .)
    OP_AND          reduce using rule 61 (exp2 -> empty .)
    OP_OR           reduce using rule 61 (exp2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 61 (exp2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 61 (exp2 -> empty .)
    OP_COMA         reduce using rule 61 (exp2 -> empty .)


state 135

    (50) otra_expresion_or -> OP_OR . comp_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    comp_or                        shift and go to state 176
    concat_string                  shift and go to state 97
    a_flotante                     shift and go to state 104
    var_cte                        shift and go to state 92
    comp_and                       shift and go to state 100
    termino                        shift and go to state 95
    exp                            shift and go to state 108
    factor                         shift and go to state 102
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 136

    (49) expresion -> comp_or otra_expresion_or .

    OP_COMA         reduce using rule 49 (expresion -> comp_or otra_expresion_or .)
    OP_PARENTESIS_DER reduce using rule 49 (expresion -> comp_or otra_expresion_or .)
    OP_PUNTO_COMA   reduce using rule 49 (expresion -> comp_or otra_expresion_or .)


state 137

    (51) otra_expresion_or -> empty .

    OP_PUNTO_COMA   reduce using rule 51 (otra_expresion_or -> empty .)
    OP_PARENTESIS_DER reduce using rule 51 (otra_expresion_or -> empty .)
    OP_COMA         reduce using rule 51 (otra_expresion_or -> empty .)


state 138

    (104) concat_string2 -> OP_PUNTO . CTE_S

    CTE_S           shift and go to state 177


state 139

    (103) concat_string -> CTE_S concat_string2 .

    OP_PARENTESIS_DER reduce using rule 103 (concat_string -> CTE_S concat_string2 .)
    OP_FACTOR       reduce using rule 103 (concat_string -> CTE_S concat_string2 .)
    OP_TERMINO      reduce using rule 103 (concat_string -> CTE_S concat_string2 .)
    OP_AND          reduce using rule 103 (concat_string -> CTE_S concat_string2 .)
    OP_OR           reduce using rule 103 (concat_string -> CTE_S concat_string2 .)
    OP_PUNTO_COMA   reduce using rule 103 (concat_string -> CTE_S concat_string2 .)
    OP_COMA         reduce using rule 103 (concat_string -> CTE_S concat_string2 .)
    OP_COMPARADOR   reduce using rule 103 (concat_string -> CTE_S concat_string2 .)


state 140

    (105) concat_string2 -> empty .

    OP_FACTOR       reduce using rule 105 (concat_string2 -> empty .)
    OP_TERMINO      reduce using rule 105 (concat_string2 -> empty .)
    OP_COMPARADOR   reduce using rule 105 (concat_string2 -> empty .)
    OP_AND          reduce using rule 105 (concat_string2 -> empty .)
    OP_OR           reduce using rule 105 (concat_string2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 105 (concat_string2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 105 (concat_string2 -> empty .)
    OP_COMA         reduce using rule 105 (concat_string2 -> empty .)


state 141

    (52) comp_or -> comp_and otra_expresion_and .

    OP_OR           reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)
    OP_PUNTO_COMA   reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)
    OP_COMA         reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)
    OP_PARENTESIS_DER reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)


state 142

    (53) otra_expresion_and -> OP_AND . comp_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    comp_and                       shift and go to state 178
    termino                        shift and go to state 95
    exp                            shift and go to state 108
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 143

    (54) otra_expresion_and -> empty .

    OP_OR           reduce using rule 54 (otra_expresion_and -> empty .)
    OP_PUNTO_COMA   reduce using rule 54 (otra_expresion_and -> empty .)
    OP_PARENTESIS_DER reduce using rule 54 (otra_expresion_and -> empty .)
    OP_COMA         reduce using rule 54 (otra_expresion_and -> empty .)


state 144

    (63) termino2 -> OP_FACTOR . termino
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    termino                        shift and go to state 179
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 145

    (62) termino -> factor termino2 .

    OP_TERMINO      reduce using rule 62 (termino -> factor termino2 .)
    OP_COMPARADOR   reduce using rule 62 (termino -> factor termino2 .)
    OP_AND          reduce using rule 62 (termino -> factor termino2 .)
    OP_PUNTO_COMA   reduce using rule 62 (termino -> factor termino2 .)
    OP_PARENTESIS_DER reduce using rule 62 (termino -> factor termino2 .)
    OP_COMA         reduce using rule 62 (termino -> factor termino2 .)
    OP_OR           reduce using rule 62 (termino -> factor termino2 .)


state 146

    (64) termino2 -> empty .

    OP_TERMINO      reduce using rule 64 (termino2 -> empty .)
    OP_COMPARADOR   reduce using rule 64 (termino2 -> empty .)
    OP_AND          reduce using rule 64 (termino2 -> empty .)
    OP_OR           reduce using rule 64 (termino2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 64 (termino2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 64 (termino2 -> empty .)
    OP_COMA         reduce using rule 64 (termino2 -> empty .)


state 147

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ . a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (72) a_string2 -> . CTE_E
    (73) a_string2 -> . CTE_F
    (74) a_string2 -> . ID arr_not arr_not

    CTE_E           shift and go to state 183
    CTE_F           shift and go to state 182
    ID              shift and go to state 181

    a_string2                      shift and go to state 180

state 148

    (55) comp_and -> exp comp_and_end .

    OP_AND          reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_OR           reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_PARENTESIS_DER reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_COMA         reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_PUNTO_COMA   reduce using rule 55 (comp_and -> exp comp_and_end .)


state 149

    (58) op_comparador -> OP_COMPARADOR .

    OP_PARENTESIS_IZQ reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    OP_TERMINO      reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    ID              reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    CTE_E           reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    CTE_F           reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_VERDADERO    reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_FALSO        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_NORTE        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_SUR          reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_ESTE         reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_OESTE        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_ANCHO        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_ALTO         reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    CTE_S           reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_A_STRING     reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_A_ENTERO     reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_A_FLOTANTE   reduce using rule 58 (op_comparador -> OP_COMPARADOR .)


state 150

    (57) comp_and_end -> empty .

    OP_AND          reduce using rule 57 (comp_and_end -> empty .)
    OP_OR           reduce using rule 57 (comp_and_end -> empty .)
    OP_PUNTO_COMA   reduce using rule 57 (comp_and_end -> empty .)
    OP_PARENTESIS_DER reduce using rule 57 (comp_and_end -> empty .)
    OP_COMA         reduce using rule 57 (comp_and_end -> empty .)


state 151

    (56) comp_and_end -> op_comparador . exp
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    a_flotante                     shift and go to state 104
    concat_string                  shift and go to state 97
    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    exp                            shift and go to state 184
    factor                         shift and go to state 102
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112

state 152

    (83) var_cte -> ID var_cte2 .

    OP_FACTOR       reduce using rule 83 (var_cte -> ID var_cte2 .)
    OP_TERMINO      reduce using rule 83 (var_cte -> ID var_cte2 .)
    OP_COMPARADOR   reduce using rule 83 (var_cte -> ID var_cte2 .)
    OP_AND          reduce using rule 83 (var_cte -> ID var_cte2 .)
    OP_OR           reduce using rule 83 (var_cte -> ID var_cte2 .)
    OP_PARENTESIS_DER reduce using rule 83 (var_cte -> ID var_cte2 .)
    OP_PUNTO_COMA   reduce using rule 83 (var_cte -> ID var_cte2 .)
    OP_COMA         reduce using rule 83 (var_cte -> ID var_cte2 .)


state 153

    (98) var_cte2 -> arr_not . arr_not
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

    OP_CORCHETE_IZQ shift and go to state 25
    OP_FACTOR       reduce using rule 1 (empty -> .)
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)

    arr_not                        shift and go to state 185
    empty                          shift and go to state 26

state 154

    (99) var_cte2 -> OP_PARENTESIS_IZQ . var_cte3 OP_PARENTESIS_DER
    (100) var_cte3 -> . expresion var_cte4
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    comp_and                       shift and go to state 100
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    var_cte3                       shift and go to state 186
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112
    expresion                      shift and go to state 187
    exp                            shift and go to state 108

state 155

    (82) retorna -> KW_RETORNA expresion OP_PUNTO_COMA .

    ID              reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_SI           reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 82 (retorna -> KW_RETORNA expresion OP_PUNTO_COMA .)


state 156

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ . a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (76) a_entero2 -> . CTE_F
    (77) a_entero2 -> . concat_string
    (103) concat_string -> . CTE_S concat_string2

    CTE_F           shift and go to state 189
    CTE_S           shift and go to state 98

    a_entero2                      shift and go to state 190
    concat_string                  shift and go to state 188

state 157

    (106) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ . a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (107) a_flotante2 -> . concat_string
    (108) a_flotante2 -> . CTE_F
    (103) concat_string -> . CTE_S concat_string2

    CTE_F           shift and go to state 193
    CTE_S           shift and go to state 98

    a_flotante2                    shift and go to state 191
    concat_string                  shift and go to state 192

state 158

    (65) factor -> OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER

    OP_PARENTESIS_DER shift and go to state 194


state 159

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 195


state 160

    (114) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA . CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    CTE_E           shift and go to state 196


state 161

    (109) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 109 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 162

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . bloque_est si_no
    (81) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 198

    bloque_est                     shift and go to state 197

state 163

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 199


state 164

    (36) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . bloque_est
    (81) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 198

    bloque_est                     shift and go to state 200

state 165

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 201


state 166

    (110) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 202


state 167

    (111) input2 -> OP_COMA . ID input2

    ID              shift and go to state 203


state 168

    (112) input2 -> empty .

    OP_PARENTESIS_DER reduce using rule 112 (input2 -> empty .)


state 169

    (35) asignacion -> ID arr_not arr_not OP_ASIGNACION . expresion OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    comp_and                       shift and go to state 100
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112
    expresion                      shift and go to state 204
    exp                            shift and go to state 108

state 170

    (37) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 205


state 171

    (40) ejec_funcion_cont -> OP_COMA . expresion ejec_funcion_cont
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    comp_and                       shift and go to state 100
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112
    expresion                      shift and go to state 206
    exp                            shift and go to state 108

state 172

    (41) ejec_funcion_cont -> empty .

    OP_PARENTESIS_DER reduce using rule 41 (ejec_funcion_cont -> empty .)


state 173

    (38) ejec_funcion_medio -> expresion ejec_funcion_cont .

    OP_PARENTESIS_DER reduce using rule 38 (ejec_funcion_medio -> expresion ejec_funcion_cont .)


state 174

    (113) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 207


state 175

    (60) exp2 -> OP_TERMINO exp .

    OP_COMPARADOR   reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_AND          reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_OR           reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_PUNTO_COMA   reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_PARENTESIS_DER reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_COMA         reduce using rule 60 (exp2 -> OP_TERMINO exp .)


state 176

    (50) otra_expresion_or -> OP_OR comp_or .

    OP_PUNTO_COMA   reduce using rule 50 (otra_expresion_or -> OP_OR comp_or .)
    OP_PARENTESIS_DER reduce using rule 50 (otra_expresion_or -> OP_OR comp_or .)
    OP_COMA         reduce using rule 50 (otra_expresion_or -> OP_OR comp_or .)


state 177

    (104) concat_string2 -> OP_PUNTO CTE_S .

    OP_FACTOR       reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_TERMINO      reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_COMPARADOR   reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_AND          reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_OR           reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_PUNTO_COMA   reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_PARENTESIS_DER reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_COMA         reduce using rule 104 (concat_string2 -> OP_PUNTO CTE_S .)


state 178

    (53) otra_expresion_and -> OP_AND comp_and .

    OP_OR           reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)
    OP_PUNTO_COMA   reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)
    OP_PARENTESIS_DER reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)
    OP_COMA         reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)


state 179

    (63) termino2 -> OP_FACTOR termino .

    OP_TERMINO      reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_COMPARADOR   reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_AND          reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_OR           reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_PUNTO_COMA   reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_PARENTESIS_DER reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_COMA         reduce using rule 63 (termino2 -> OP_FACTOR termino .)


state 180

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 208


state 181

    (74) a_string2 -> ID . arr_not arr_not
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

  ! shift/reduce conflict for OP_CORCHETE_IZQ resolved as shift
    OP_CORCHETE_IZQ shift and go to state 25
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

  ! OP_CORCHETE_IZQ [ reduce using rule 1 (empty -> .) ]

    arr_not                        shift and go to state 209
    empty                          shift and go to state 26

state 182

    (73) a_string2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 73 (a_string2 -> CTE_F .)


state 183

    (72) a_string2 -> CTE_E .

    OP_PARENTESIS_DER reduce using rule 72 (a_string2 -> CTE_E .)


state 184

    (56) comp_and_end -> op_comparador exp .

    OP_AND          reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_OR           reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_PUNTO_COMA   reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_PARENTESIS_DER reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_COMA         reduce using rule 56 (comp_and_end -> op_comparador exp .)


state 185

    (98) var_cte2 -> arr_not arr_not .

    OP_FACTOR       reduce using rule 98 (var_cte2 -> arr_not arr_not .)
    OP_TERMINO      reduce using rule 98 (var_cte2 -> arr_not arr_not .)
    OP_COMPARADOR   reduce using rule 98 (var_cte2 -> arr_not arr_not .)
    OP_AND          reduce using rule 98 (var_cte2 -> arr_not arr_not .)
    OP_OR           reduce using rule 98 (var_cte2 -> arr_not arr_not .)
    OP_PUNTO_COMA   reduce using rule 98 (var_cte2 -> arr_not arr_not .)
    OP_PARENTESIS_DER reduce using rule 98 (var_cte2 -> arr_not arr_not .)
    OP_COMA         reduce using rule 98 (var_cte2 -> arr_not arr_not .)


state 186

    (99) var_cte2 -> OP_PARENTESIS_IZQ var_cte3 . OP_PARENTESIS_DER

    OP_PARENTESIS_DER shift and go to state 210


state 187

    (100) var_cte3 -> expresion . var_cte4
    (101) var_cte4 -> . OP_COMA expresion var_cte4
    (102) var_cte4 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 211
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    var_cte4                       shift and go to state 212
    empty                          shift and go to state 213

state 188

    (77) a_entero2 -> concat_string .

    OP_PARENTESIS_DER reduce using rule 77 (a_entero2 -> concat_string .)


state 189

    (76) a_entero2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 76 (a_entero2 -> CTE_F .)


state 190

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 214


state 191

    (106) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 215


state 192

    (107) a_flotante2 -> concat_string .

    OP_PARENTESIS_DER reduce using rule 107 (a_flotante2 -> concat_string .)


state 193

    (108) a_flotante2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 108 (a_flotante2 -> CTE_F .)


state 194

    (65) factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .

    OP_FACTOR       reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_TERMINO      reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_COMPARADOR   reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_AND          reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_PUNTO_COMA   reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_PARENTESIS_DER reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_COMA         reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_OR           reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)


state 195

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 216


state 196

    (114) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 217


state 197

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est . si_no
    (79) si_no -> . KW_SI_NO bloque_est
    (80) si_no -> . empty
    (1) empty -> .

    KW_SI_NO        shift and go to state 219
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_RETORNA      reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    si_no                          shift and go to state 218
    empty                          shift and go to state 220

state 198

    (81) bloque_est -> OP_LLAVE_IZQ . estatuto OP_LLAVE_DER
    (27) estatuto -> . asignacion
    (28) estatuto -> . condicion
    (29) estatuto -> . ciclo
    (30) estatuto -> . ejec_funcion
    (31) estatuto -> . funcion_predef
    (32) estatuto -> . retorna
    (35) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (78) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (36) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (37) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (42) funcion_predef -> . camina
    (43) funcion_predef -> . gira
    (44) funcion_predef -> . mira
    (45) funcion_predef -> . reiniciar
    (46) funcion_predef -> . input
    (47) funcion_predef -> . output
    (48) funcion_predef -> . salta_a
    (82) retorna -> . KW_RETORNA expresion OP_PUNTO_COMA
    (68) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (69) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (70) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (109) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (110) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (113) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (114) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    ID              shift and go to state 71
    KW_SI           shift and go to state 57
    KW_MIENTRAS     shift and go to state 68
    KW_RETORNA      shift and go to state 75
    KW_CAMINA       shift and go to state 69
    KW_GIRA         shift and go to state 66
    KW_MIRA         shift and go to state 76
    KW_REINICIAR    shift and go to state 56
    KW_INPUT        shift and go to state 70
    KW_OUTPUT       shift and go to state 73
    KW_SALTA_A      shift and go to state 51

    funcion_predef                 shift and go to state 58
    ciclo                          shift and go to state 59
    asignacion                     shift and go to state 72
    reiniciar                      shift and go to state 52
    salta_a                        shift and go to state 74
    estatuto                       shift and go to state 221
    mira                           shift and go to state 65
    output                         shift and go to state 77
    camina                         shift and go to state 53
    condicion                      shift and go to state 61
    retorna                        shift and go to state 62
    gira                           shift and go to state 54
    input                          shift and go to state 63
    ejec_funcion                   shift and go to state 55

state 199

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 200

    (36) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .

    ID              reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_SI           reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_MIENTRAS     reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_RETORNA      reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_CAMINA       reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_GIRA         reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_MIRA         reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_REINICIAR    reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_INPUT        reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_OUTPUT       reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_SALTA_A      reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    OP_LLAVE_DER    reduce using rule 36 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)


state 201

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_LLAVE_DER    reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    ID              reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 202

    (110) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 222


state 203

    (111) input2 -> OP_COMA ID . input2
    (111) input2 -> . OP_COMA ID input2
    (112) input2 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 167
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    input2                         shift and go to state 223
    empty                          shift and go to state 168

state 204

    (35) asignacion -> ID arr_not arr_not OP_ASIGNACION expresion . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 224


state 205

    (37) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 37 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 206

    (40) ejec_funcion_cont -> OP_COMA expresion . ejec_funcion_cont
    (40) ejec_funcion_cont -> . OP_COMA expresion ejec_funcion_cont
    (41) ejec_funcion_cont -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 171
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    empty                          shift and go to state 172
    ejec_funcion_cont              shift and go to state 225

state 207

    (113) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_LLAVE_DER    reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    ID              reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 113 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 208

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 226


state 209

    (74) a_string2 -> ID arr_not . arr_not
    (23) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
    (24) arr_not -> . empty
    (1) empty -> .

    OP_CORCHETE_IZQ shift and go to state 25
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    arr_not                        shift and go to state 227
    empty                          shift and go to state 26

state 210

    (99) var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .

    OP_FACTOR       reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_TERMINO      reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_COMPARADOR   reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_AND          reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_OR           reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_PUNTO_COMA   reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_PARENTESIS_DER reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_COMA         reduce using rule 99 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)


state 211

    (101) var_cte4 -> OP_COMA . expresion var_cte4
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (83) var_cte -> . ID var_cte2
    (84) var_cte -> . CTE_E
    (85) var_cte -> . CTE_F
    (86) var_cte -> . concat_string
    (87) var_cte -> . KW_VERDADERO
    (88) var_cte -> . KW_FALSO
    (89) var_cte -> . KW_NORTE
    (90) var_cte -> . KW_SUR
    (91) var_cte -> . KW_ESTE
    (92) var_cte -> . KW_OESTE
    (93) var_cte -> . KW_ANCHO
    (94) var_cte -> . KW_ALTO
    (95) var_cte -> . a_string
    (96) var_cte -> . a_entero
    (97) var_cte -> . a_flotante
    (103) concat_string -> . CTE_S concat_string2
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 117
    OP_TERMINO      shift and go to state 90
    ID              shift and go to state 111
    CTE_E           shift and go to state 105
    CTE_F           shift and go to state 103
    KW_VERDADERO    shift and go to state 114
    KW_FALSO        shift and go to state 99
    KW_NORTE        shift and go to state 91
    KW_SUR          shift and go to state 107
    KW_ESTE         shift and go to state 94
    KW_OESTE        shift and go to state 101
    KW_ANCHO        shift and go to state 109
    KW_ALTO         shift and go to state 93
    CTE_S           shift and go to state 98
    KW_A_STRING     shift and go to state 106
    KW_A_ENTERO     shift and go to state 115
    KW_A_FLOTANTE   shift and go to state 116

    var_cte                        shift and go to state 92
    termino                        shift and go to state 95
    comp_or                        shift and go to state 96
    concat_string                  shift and go to state 97
    comp_and                       shift and go to state 100
    factor                         shift and go to state 102
    a_flotante                     shift and go to state 104
    a_string                       shift and go to state 110
    a_entero                       shift and go to state 112
    expresion                      shift and go to state 228
    exp                            shift and go to state 108

state 212

    (100) var_cte3 -> expresion var_cte4 .

    OP_PARENTESIS_DER reduce using rule 100 (var_cte3 -> expresion var_cte4 .)


state 213

    (102) var_cte4 -> empty .

    OP_PARENTESIS_DER reduce using rule 102 (var_cte4 -> empty .)


state 214

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 229


state 215

    (106) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 230


state 216

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 217

    (114) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 231


state 218

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .

    ID              reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_SI           reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_MIENTRAS     reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_RETORNA      reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_CAMINA       reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_GIRA         reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_MIRA         reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_REINICIAR    reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_INPUT        reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_OUTPUT       reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_SALTA_A      reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    OP_LLAVE_DER    reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)


state 219

    (79) si_no -> KW_SI_NO . bloque_est
    (81) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 198

    bloque_est                     shift and go to state 232

state 220

    (80) si_no -> empty .

    ID              reduce using rule 80 (si_no -> empty .)
    KW_SI           reduce using rule 80 (si_no -> empty .)
    KW_MIENTRAS     reduce using rule 80 (si_no -> empty .)
    KW_RETORNA      reduce using rule 80 (si_no -> empty .)
    KW_CAMINA       reduce using rule 80 (si_no -> empty .)
    KW_GIRA         reduce using rule 80 (si_no -> empty .)
    KW_MIRA         reduce using rule 80 (si_no -> empty .)
    KW_REINICIAR    reduce using rule 80 (si_no -> empty .)
    KW_INPUT        reduce using rule 80 (si_no -> empty .)
    KW_OUTPUT       reduce using rule 80 (si_no -> empty .)
    KW_SALTA_A      reduce using rule 80 (si_no -> empty .)
    OP_LLAVE_DER    reduce using rule 80 (si_no -> empty .)


state 221

    (81) bloque_est -> OP_LLAVE_IZQ estatuto . OP_LLAVE_DER

    OP_LLAVE_DER    shift and go to state 233


state 222

    (110) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 110 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 223

    (111) input2 -> OP_COMA ID input2 .

    OP_PARENTESIS_DER reduce using rule 111 (input2 -> OP_COMA ID input2 .)


state 224

    (35) asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .

    ID              reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_SI           reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 35 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)


state 225

    (40) ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont .

    OP_PARENTESIS_DER reduce using rule 40 (ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont .)


state 226

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_FACTOR       reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_TERMINO      reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_COMPARADOR   reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_AND          reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_OR           reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_COMA         reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_PARENTESIS_DER reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_PUNTO_COMA   reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 227

    (74) a_string2 -> ID arr_not arr_not .

    OP_PARENTESIS_DER reduce using rule 74 (a_string2 -> ID arr_not arr_not .)


state 228

    (101) var_cte4 -> OP_COMA expresion . var_cte4
    (101) var_cte4 -> . OP_COMA expresion var_cte4
    (102) var_cte4 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 211
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    var_cte4                       shift and go to state 234
    empty                          shift and go to state 213

state 229

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_FACTOR       reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_TERMINO      reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_COMPARADOR   reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_AND          reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_OR           reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_PARENTESIS_DER reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_PUNTO_COMA   reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_COMA         reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 230

    (106) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_FACTOR       reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_TERMINO      reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_COMPARADOR   reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_AND          reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_OR           reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_COMA         reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_PARENTESIS_DER reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_PUNTO_COMA   reduce using rule 106 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 231

    (114) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_RETORNA      reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 114 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 232

    (79) si_no -> KW_SI_NO bloque_est .

    ID              reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_SI           reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_MIENTRAS     reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_RETORNA      reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_CAMINA       reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_GIRA         reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_MIRA         reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_REINICIAR    reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_INPUT        reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_OUTPUT       reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_SALTA_A      reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    OP_LLAVE_DER    reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)


state 233

    (81) bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .

    ID              reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SI           reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_MIENTRAS     reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_RETORNA      reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_CAMINA       reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_GIRA         reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_MIRA         reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_REINICIAR    reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_INPUT        reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_OUTPUT       reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SALTA_A      reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    OP_LLAVE_DER    reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SI_NO        reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)


state 234

    (101) var_cte4 -> OP_COMA expresion var_cte4 .

    OP_PARENTESIS_DER reduce using rule 101 (var_cte4 -> OP_COMA expresion var_cte4 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for OP_CORCHETE_IZQ in state 14 resolved as shift
WARNING: shift/reduce conflict for OP_CORCHETE_IZQ in state 71 resolved as shift
WARNING: shift/reduce conflict for OP_CORCHETE_IZQ in state 111 resolved as shift
WARNING: shift/reduce conflict for OP_CORCHETE_IZQ in state 181 resolved as shift
