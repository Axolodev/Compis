Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> inicio
Rule 1     empty -> <empty>
Rule 2     inicio -> crear_var crear_funciones KW_INICIO funcion
Rule 3     crear_funciones -> funcion crear_funciones
Rule 4     crear_funciones -> empty
Rule 5     funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
Rule 6     print_id -> ID
Rule 7     tipo_funcion -> tipo
Rule 8     tipo_funcion -> empty
Rule 9     tipo -> KW_ENTERO
Rule 10    tipo -> KW_FLOTANTE
Rule 11    tipo -> KW_STRING
Rule 12    parametros -> toma_parametro
Rule 13    parametros -> empty
Rule 14    toma_parametro -> tipo ID otro_parametro
Rule 15    otro_parametro -> print_coma toma_parametro
Rule 16    otro_parametro -> empty
Rule 17    print_coma -> OP_COMA
Rule 18    bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER
Rule 19    crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var
Rule 20    crear_var -> empty
Rule 21    def_var -> print_id arr_not arr_not
Rule 22    arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER
Rule 23    otra_var -> print_coma def_var otra_var
Rule 24    otra_var -> empty
Rule 25    estatuto -> asignacion
Rule 26    estatuto -> condicion
Rule 27    estatuto -> ciclo
Rule 28    estatuto -> ejec_funcion
Rule 29    estatuto -> funcion_predef
Rule 30    estatuto_rec -> estatuto estatuto_rec
Rule 31    estatuto_rec -> empty
Rule 32    asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
Rule 33    ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
Rule 34    ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 35    ejec_funcion_medio -> expresion ejec_funcion_cont
Rule 36    ejec_funcion_medio -> empty
Rule 37    ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont
Rule 38    ejec_funcion_cont -> empty
Rule 39    funcion_predef -> camina
Rule 40    funcion_predef -> gira
Rule 41    funcion_predef -> mira
Rule 42    funcion_predef -> a_string
Rule 43    funcion_predef -> a_entero
Rule 44    funcion_predef -> a_flotante
Rule 45    funcion_predef -> reiniciar
Rule 46    funcion_predef -> input
Rule 47    funcion_predef -> output
Rule 48    funcion_predef -> salta_a
Rule 49    expresion -> comp_or otra_expresion_or
Rule 50    otra_expresion_or -> OP_OR comp_or
Rule 51    otra_expresion_or -> empty
Rule 52    comp_or -> comp_and otra_expresion_and
Rule 53    otra_expresion_and -> OP_AND comp_and
Rule 54    otra_expresion_and -> empty
Rule 55    comp_and -> exp comp_and_end
Rule 56    comp_and_end -> op_comparador exp
Rule 57    comp_and_end -> empty
Rule 58    op_comparador -> OP_COMPARADOR
Rule 59    exp -> termino exp2
Rule 60    exp2 -> OP_TERMINO exp
Rule 61    exp2 -> empty
Rule 62    termino -> factor termino2
Rule 63    termino2 -> OP_FACTOR termino
Rule 64    termino2 -> empty
Rule 65    factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
Rule 66    factor -> OP_TERMINO var_cte
Rule 67    factor -> var_cte
Rule 68    camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 69    gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 70    mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 71    a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 72    a_string2 -> CTE_E
Rule 73    a_string2 -> CTE_F
Rule 74    a_string2 -> ID arr_not arr_not
Rule 75    a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 76    a_entero2 -> CTE_F
Rule 77    a_entero2 -> concat_string
Rule 78    condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
Rule 79    si_no -> KW_SI_NO bloque_est
Rule 80    si_no -> empty
Rule 81    bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER
Rule 82    var_cte -> ID var_cte2
Rule 83    var_cte -> CTE_E
Rule 84    var_cte -> CTE_F
Rule 85    var_cte -> concat_string
Rule 86    var_cte -> KW_VERDADERO
Rule 87    var_cte -> KW_FALSO
Rule 88    var_cte -> KW_NORTE
Rule 89    var_cte -> KW_SUR
Rule 90    var_cte -> KW_ESTE
Rule 91    var_cte -> KW_OESTE
Rule 92    var_cte -> KW_ANCHO
Rule 93    var_cte -> KW_ALTO
Rule 94    var_cte2 -> arr_not arr_not
Rule 95    var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER
Rule 96    var_cte3 -> expresion var_cte4
Rule 97    var_cte4 -> OP_COMA expresion var_cte4
Rule 98    var_cte4 -> empty
Rule 99    concat_string -> CTE_S concat_string2
Rule 100   concat_string2 -> OP_PUNTO CTE_S
Rule 101   concat_string2 -> empty
Rule 102   a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 103   a_flotante2 -> concat_string
Rule 104   a_flotante2 -> CTE_F
Rule 105   reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 106   input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 107   input2 -> OP_COMA ID input2
Rule 108   input2 -> empty
Rule 109   output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
Rule 110   salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

Terminals, with rules where they appear

CTE_E                : 22 72 83 110 110
CTE_F                : 73 76 84 104
CTE_S                : 99 100
ID                   : 6 14 32 34 74 82 106 107
KW_ALTO              : 93
KW_ANCHO             : 92
KW_A_ENTERO          : 75
KW_A_FLOTANTE        : 102
KW_A_STRING          : 71
KW_CAMINA            : 68
KW_ENTERO            : 9
KW_ESTE              : 90
KW_FALSO             : 87
KW_FLOTANTE          : 10
KW_FUNCION           : 5
KW_GIRA              : 69
KW_INICIO            : 2
KW_INPUT             : 106
KW_MIENTRAS          : 33
KW_MIRA              : 70
KW_NORTE             : 88
KW_OESTE             : 91
KW_OUTPUT            : 109
KW_REINICIAR         : 105
KW_SALTA_A           : 110
KW_SI                : 78
KW_SI_NO             : 79
KW_STRING            : 11
KW_SUR               : 89
KW_VERDADERO         : 86
OP_AND               : 53
OP_ASIGNACION        : 32
OP_COMA              : 17 37 97 107 110
OP_COMPARADOR        : 58
OP_CORCHETE_DER      : 22
OP_CORCHETE_IZQ      : 22
OP_FACTOR            : 63
OP_LLAVE_DER         : 18 81
OP_LLAVE_IZQ         : 18 81
OP_OR                : 50
OP_PARENTESIS_DER    : 5 33 34 65 68 69 70 71 75 78 95 102 105 106 109 110
OP_PARENTESIS_IZQ    : 5 33 34 65 68 69 70 71 75 78 95 102 105 106 109 110
OP_PUNTO             : 100
OP_PUNTO_COMA        : 19 32 34 68 69 70 71 75 102 105 106 109 110
OP_TERMINO           : 60 66
error                : 

Nonterminals, with rules where they appear

a_entero             : 43
a_entero2            : 75
a_flotante           : 44
a_flotante2          : 102
a_string             : 42
a_string2            : 71
arr_not              : 21 21 32 32 74 74 94 94
asignacion           : 25
bloque_est           : 33 78 79
bloque_func          : 5
camina               : 39
ciclo                : 27
comp_and             : 52 53
comp_and_end         : 55
comp_or              : 49 50
concat_string        : 77 85 103 109
concat_string2       : 99
condicion            : 26
crear_funciones      : 2 3
crear_var            : 2 18 19
def_var              : 19 23
ejec_funcion         : 28
ejec_funcion_cont    : 35 37
ejec_funcion_medio   : 34
empty                : 4 8 13 16 20 24 31 36 38 51 54 57 61 64 80 98 101 108
estatuto             : 30 81
estatuto_rec         : 18 30
exp                  : 55 56 60
exp2                 : 59
expresion            : 32 33 35 37 65 68 69 70 78 96 97
factor               : 62
funcion              : 2 3
funcion_predef       : 29
gira                 : 40
inicio               : 0
input                : 46
input2               : 106 107
mira                 : 41
op_comparador        : 56
otra_expresion_and   : 52
otra_expresion_or    : 49
otra_var             : 19 23
otro_parametro       : 14
output               : 47
parametros           : 5
print_coma           : 15 23
print_id             : 5 21
reiniciar            : 45
salta_a              : 48
si_no                : 78
termino              : 59 63
termino2             : 62
tipo                 : 7 14 19
tipo_funcion         : 5
toma_parametro       : 12 15
var_cte              : 66 67
var_cte2             : 82
var_cte3             : 95
var_cte4             : 96 97

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (2) inicio -> . crear_var crear_funciones KW_INICIO funcion
    (19) crear_var -> . tipo def_var otra_var OP_PUNTO_COMA crear_var
    (20) crear_var -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    KW_FUNCION      reduce using rule 1 (empty -> .)
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_var                      shift and go to state 2
    tipo                           shift and go to state 4
    inicio                         shift and go to state 5
    empty                          shift and go to state 7

state 1

    (10) tipo -> KW_FLOTANTE .

    ID              reduce using rule 10 (tipo -> KW_FLOTANTE .)


state 2

    (2) inicio -> crear_var . crear_funciones KW_INICIO funcion
    (3) crear_funciones -> . funcion crear_funciones
    (4) crear_funciones -> . empty
    (5) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (1) empty -> .

    KW_FUNCION      shift and go to state 8
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_funciones                shift and go to state 9
    funcion                        shift and go to state 11
    empty                          shift and go to state 10

state 3

    (9) tipo -> KW_ENTERO .

    ID              reduce using rule 9 (tipo -> KW_ENTERO .)


state 4

    (19) crear_var -> tipo . def_var otra_var OP_PUNTO_COMA crear_var
    (21) def_var -> . print_id arr_not arr_not
    (6) print_id -> . ID

    ID              shift and go to state 13

    def_var                        shift and go to state 12
    print_id                       shift and go to state 14

state 5

    (0) S' -> inicio .



state 6

    (11) tipo -> KW_STRING .

    ID              reduce using rule 11 (tipo -> KW_STRING .)


state 7

    (20) crear_var -> empty .

    KW_FUNCION      reduce using rule 20 (crear_var -> empty .)
    KW_INICIO       reduce using rule 20 (crear_var -> empty .)
    ID              reduce using rule 20 (crear_var -> empty .)
    KW_SI           reduce using rule 20 (crear_var -> empty .)
    KW_MIENTRAS     reduce using rule 20 (crear_var -> empty .)
    KW_CAMINA       reduce using rule 20 (crear_var -> empty .)
    KW_GIRA         reduce using rule 20 (crear_var -> empty .)
    KW_MIRA         reduce using rule 20 (crear_var -> empty .)
    KW_A_STRING     reduce using rule 20 (crear_var -> empty .)
    KW_A_ENTERO     reduce using rule 20 (crear_var -> empty .)
    KW_A_FLOTANTE   reduce using rule 20 (crear_var -> empty .)
    KW_REINICIAR    reduce using rule 20 (crear_var -> empty .)
    KW_INPUT        reduce using rule 20 (crear_var -> empty .)
    KW_OUTPUT       reduce using rule 20 (crear_var -> empty .)
    KW_SALTA_A      reduce using rule 20 (crear_var -> empty .)
    OP_LLAVE_DER    reduce using rule 20 (crear_var -> empty .)


state 8

    (5) funcion -> KW_FUNCION . tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (7) tipo_funcion -> . tipo
    (8) tipo_funcion -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    ID              reduce using rule 1 (empty -> .)

    tipo                           shift and go to state 15
    tipo_funcion                   shift and go to state 16
    empty                          shift and go to state 17

state 9

    (2) inicio -> crear_var crear_funciones . KW_INICIO funcion

    KW_INICIO       shift and go to state 18


state 10

    (4) crear_funciones -> empty .

    KW_INICIO       reduce using rule 4 (crear_funciones -> empty .)


state 11

    (3) crear_funciones -> funcion . crear_funciones
    (3) crear_funciones -> . funcion crear_funciones
    (4) crear_funciones -> . empty
    (5) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (1) empty -> .

    KW_FUNCION      shift and go to state 8
    KW_INICIO       reduce using rule 1 (empty -> .)

    crear_funciones                shift and go to state 19
    funcion                        shift and go to state 11
    empty                          shift and go to state 10

state 12

    (19) crear_var -> tipo def_var . otra_var OP_PUNTO_COMA crear_var
    (23) otra_var -> . print_coma def_var otra_var
    (24) otra_var -> . empty
    (17) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 21
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_var                       shift and go to state 20
    print_coma                     shift and go to state 22
    empty                          shift and go to state 23

state 13

    (6) print_id -> ID .

    OP_CORCHETE_IZQ reduce using rule 6 (print_id -> ID .)
    OP_PARENTESIS_IZQ reduce using rule 6 (print_id -> ID .)


state 14

    (21) def_var -> print_id . arr_not arr_not
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 24

state 15

    (7) tipo_funcion -> tipo .

    ID              reduce using rule 7 (tipo_funcion -> tipo .)


state 16

    (5) funcion -> KW_FUNCION tipo_funcion . print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func
    (6) print_id -> . ID

    ID              shift and go to state 13

    print_id                       shift and go to state 26

state 17

    (8) tipo_funcion -> empty .

    ID              reduce using rule 8 (tipo_funcion -> empty .)


state 18

    (2) inicio -> crear_var crear_funciones KW_INICIO . funcion
    (5) funcion -> . KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func

    KW_FUNCION      shift and go to state 8

    funcion                        shift and go to state 27

state 19

    (3) crear_funciones -> funcion crear_funciones .

    KW_INICIO       reduce using rule 3 (crear_funciones -> funcion crear_funciones .)


state 20

    (19) crear_var -> tipo def_var otra_var . OP_PUNTO_COMA crear_var

    OP_PUNTO_COMA   shift and go to state 28


state 21

    (17) print_coma -> OP_COMA .

    KW_ENTERO       reduce using rule 17 (print_coma -> OP_COMA .)
    KW_FLOTANTE     reduce using rule 17 (print_coma -> OP_COMA .)
    KW_STRING       reduce using rule 17 (print_coma -> OP_COMA .)
    ID              reduce using rule 17 (print_coma -> OP_COMA .)


state 22

    (23) otra_var -> print_coma . def_var otra_var
    (21) def_var -> . print_id arr_not arr_not
    (6) print_id -> . ID

    ID              shift and go to state 13

    def_var                        shift and go to state 29
    print_id                       shift and go to state 14

state 23

    (24) otra_var -> empty .

    OP_PUNTO_COMA   reduce using rule 24 (otra_var -> empty .)


state 24

    (21) def_var -> print_id arr_not . arr_not
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 30

state 25

    (22) arr_not -> OP_CORCHETE_IZQ . CTE_E OP_CORCHETE_DER

    CTE_E           shift and go to state 31


state 26

    (5) funcion -> KW_FUNCION tipo_funcion print_id . OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func

    OP_PARENTESIS_IZQ shift and go to state 32


state 27

    (2) inicio -> crear_var crear_funciones KW_INICIO funcion .

    $end            reduce using rule 2 (inicio -> crear_var crear_funciones KW_INICIO funcion .)


state 28

    (19) crear_var -> tipo def_var otra_var OP_PUNTO_COMA . crear_var
    (19) crear_var -> . tipo def_var otra_var OP_PUNTO_COMA crear_var
    (20) crear_var -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    KW_FUNCION      reduce using rule 1 (empty -> .)
    KW_INICIO       reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_A_STRING     reduce using rule 1 (empty -> .)
    KW_A_ENTERO     reduce using rule 1 (empty -> .)
    KW_A_FLOTANTE   reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    crear_var                      shift and go to state 33
    empty                          shift and go to state 7
    tipo                           shift and go to state 4

state 29

    (23) otra_var -> print_coma def_var . otra_var
    (23) otra_var -> . print_coma def_var otra_var
    (24) otra_var -> . empty
    (17) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 21
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_var                       shift and go to state 34
    empty                          shift and go to state 23
    print_coma                     shift and go to state 22

state 30

    (21) def_var -> print_id arr_not arr_not .

    OP_COMA         reduce using rule 21 (def_var -> print_id arr_not arr_not .)
    OP_PUNTO_COMA   reduce using rule 21 (def_var -> print_id arr_not arr_not .)


state 31

    (22) arr_not -> OP_CORCHETE_IZQ CTE_E . OP_CORCHETE_DER

    OP_CORCHETE_DER shift and go to state 35


state 32

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ . parametros OP_PARENTESIS_DER bloque_func
    (12) parametros -> . toma_parametro
    (13) parametros -> . empty
    (14) toma_parametro -> . tipo ID otro_parametro
    (1) empty -> .
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING

    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6

    tipo                           shift and go to state 36
    toma_parametro                 shift and go to state 37
    parametros                     shift and go to state 38
    empty                          shift and go to state 39

state 33

    (19) crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .

    KW_FUNCION      reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_INICIO       reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    ID              reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_SI           reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_MIENTRAS     reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_CAMINA       reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_GIRA         reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_MIRA         reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_A_STRING     reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_A_ENTERO     reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_A_FLOTANTE   reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_REINICIAR    reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_INPUT        reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_OUTPUT       reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    KW_SALTA_A      reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)
    OP_LLAVE_DER    reduce using rule 19 (crear_var -> tipo def_var otra_var OP_PUNTO_COMA crear_var .)


state 34

    (23) otra_var -> print_coma def_var otra_var .

    OP_PUNTO_COMA   reduce using rule 23 (otra_var -> print_coma def_var otra_var .)


state 35

    (22) arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .

    OP_CORCHETE_IZQ reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_PARENTESIS_DER reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_COMA         reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_PUNTO_COMA   reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_FACTOR       reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_TERMINO      reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_COMPARADOR   reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_AND          reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_OR           reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)
    OP_ASIGNACION   reduce using rule 22 (arr_not -> OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER .)


state 36

    (14) toma_parametro -> tipo . ID otro_parametro

    ID              shift and go to state 40


state 37

    (12) parametros -> toma_parametro .

    OP_PARENTESIS_DER reduce using rule 12 (parametros -> toma_parametro .)


state 38

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros . OP_PARENTESIS_DER bloque_func

    OP_PARENTESIS_DER shift and go to state 41


state 39

    (13) parametros -> empty .

    OP_PARENTESIS_DER reduce using rule 13 (parametros -> empty .)


state 40

    (14) toma_parametro -> tipo ID . otro_parametro
    (15) otro_parametro -> . print_coma toma_parametro
    (16) otro_parametro -> . empty
    (17) print_coma -> . OP_COMA
    (1) empty -> .

    OP_COMA         shift and go to state 21
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    print_coma                     shift and go to state 42
    empty                          shift and go to state 44
    otro_parametro                 shift and go to state 43

state 41

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER . bloque_func
    (18) bloque_func -> . OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 46

    bloque_func                    shift and go to state 45

state 42

    (15) otro_parametro -> print_coma . toma_parametro
    (14) toma_parametro -> . tipo ID otro_parametro
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6

    tipo                           shift and go to state 36
    toma_parametro                 shift and go to state 47

state 43

    (14) toma_parametro -> tipo ID otro_parametro .

    OP_PARENTESIS_DER reduce using rule 14 (toma_parametro -> tipo ID otro_parametro .)


state 44

    (16) otro_parametro -> empty .

    OP_PARENTESIS_DER reduce using rule 16 (otro_parametro -> empty .)


state 45

    (5) funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .

    KW_FUNCION      reduce using rule 5 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)
    KW_INICIO       reduce using rule 5 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)
    $end            reduce using rule 5 (funcion -> KW_FUNCION tipo_funcion print_id OP_PARENTESIS_IZQ parametros OP_PARENTESIS_DER bloque_func .)


state 46

    (18) bloque_func -> OP_LLAVE_IZQ . crear_var estatuto_rec OP_LLAVE_DER
    (19) crear_var -> . tipo def_var otra_var OP_PUNTO_COMA crear_var
    (20) crear_var -> . empty
    (9) tipo -> . KW_ENTERO
    (10) tipo -> . KW_FLOTANTE
    (11) tipo -> . KW_STRING
    (1) empty -> .

    KW_ENTERO       shift and go to state 3
    KW_FLOTANTE     shift and go to state 1
    KW_STRING       shift and go to state 6
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_A_STRING     reduce using rule 1 (empty -> .)
    KW_A_ENTERO     reduce using rule 1 (empty -> .)
    KW_A_FLOTANTE   reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    crear_var                      shift and go to state 48
    tipo                           shift and go to state 4
    empty                          shift and go to state 7

state 47

    (15) otro_parametro -> print_coma toma_parametro .

    OP_PARENTESIS_DER reduce using rule 15 (otro_parametro -> print_coma toma_parametro .)


state 48

    (18) bloque_func -> OP_LLAVE_IZQ crear_var . estatuto_rec OP_LLAVE_DER
    (30) estatuto_rec -> . estatuto estatuto_rec
    (31) estatuto_rec -> . empty
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . ejec_funcion
    (29) estatuto -> . funcion_predef
    (1) empty -> .
    (32) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (78) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (33) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (34) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (39) funcion_predef -> . camina
    (40) funcion_predef -> . gira
    (41) funcion_predef -> . mira
    (42) funcion_predef -> . a_string
    (43) funcion_predef -> . a_entero
    (44) funcion_predef -> . a_flotante
    (45) funcion_predef -> . reiniciar
    (46) funcion_predef -> . input
    (47) funcion_predef -> . output
    (48) funcion_predef -> . salta_a
    (68) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (69) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (70) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (102) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (105) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (109) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (110) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_LLAVE_DER    reduce using rule 1 (empty -> .)
    ID              shift and go to state 71
    KW_SI           shift and go to state 56
    KW_MIENTRAS     shift and go to state 58
    KW_CAMINA       shift and go to state 69
    KW_GIRA         shift and go to state 66
    KW_MIRA         shift and go to state 77
    KW_A_STRING     shift and go to state 63
    KW_A_ENTERO     shift and go to state 74
    KW_A_FLOTANTE   shift and go to state 76
    KW_REINICIAR    shift and go to state 55
    KW_INPUT        shift and go to state 70
    KW_OUTPUT       shift and go to state 79
    KW_SALTA_A      shift and go to state 49

    reiniciar                      shift and go to state 50
    a_string                       shift and go to state 51
    camina                         shift and go to state 52
    gira                           shift and go to state 53
    ejec_funcion                   shift and go to state 54
    funcion_predef                 shift and go to state 57
    a_entero                       shift and go to state 72
    estatuto                       shift and go to state 60
    condicion                      shift and go to state 61
    input                          shift and go to state 68
    empty                          shift and go to state 64
    mira                           shift and go to state 65
    estatuto_rec                   shift and go to state 67
    a_flotante                     shift and go to state 62
    ciclo                          shift and go to state 59
    asignacion                     shift and go to state 73
    salta_a                        shift and go to state 75
    output                         shift and go to state 78

state 49

    (110) salta_a -> KW_SALTA_A . OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 80


state 50

    (45) funcion_predef -> reiniciar .

    ID              reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_SI           reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_MIENTRAS     reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_CAMINA       reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_GIRA         reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_MIRA         reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_A_STRING     reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_A_ENTERO     reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_A_FLOTANTE   reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_REINICIAR    reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_INPUT        reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_OUTPUT       reduce using rule 45 (funcion_predef -> reiniciar .)
    KW_SALTA_A      reduce using rule 45 (funcion_predef -> reiniciar .)
    OP_LLAVE_DER    reduce using rule 45 (funcion_predef -> reiniciar .)


state 51

    (42) funcion_predef -> a_string .

    ID              reduce using rule 42 (funcion_predef -> a_string .)
    KW_SI           reduce using rule 42 (funcion_predef -> a_string .)
    KW_MIENTRAS     reduce using rule 42 (funcion_predef -> a_string .)
    KW_CAMINA       reduce using rule 42 (funcion_predef -> a_string .)
    KW_GIRA         reduce using rule 42 (funcion_predef -> a_string .)
    KW_MIRA         reduce using rule 42 (funcion_predef -> a_string .)
    KW_A_STRING     reduce using rule 42 (funcion_predef -> a_string .)
    KW_A_ENTERO     reduce using rule 42 (funcion_predef -> a_string .)
    KW_A_FLOTANTE   reduce using rule 42 (funcion_predef -> a_string .)
    KW_REINICIAR    reduce using rule 42 (funcion_predef -> a_string .)
    KW_INPUT        reduce using rule 42 (funcion_predef -> a_string .)
    KW_OUTPUT       reduce using rule 42 (funcion_predef -> a_string .)
    KW_SALTA_A      reduce using rule 42 (funcion_predef -> a_string .)
    OP_LLAVE_DER    reduce using rule 42 (funcion_predef -> a_string .)


state 52

    (39) funcion_predef -> camina .

    ID              reduce using rule 39 (funcion_predef -> camina .)
    KW_SI           reduce using rule 39 (funcion_predef -> camina .)
    KW_MIENTRAS     reduce using rule 39 (funcion_predef -> camina .)
    KW_CAMINA       reduce using rule 39 (funcion_predef -> camina .)
    KW_GIRA         reduce using rule 39 (funcion_predef -> camina .)
    KW_MIRA         reduce using rule 39 (funcion_predef -> camina .)
    KW_A_STRING     reduce using rule 39 (funcion_predef -> camina .)
    KW_A_ENTERO     reduce using rule 39 (funcion_predef -> camina .)
    KW_A_FLOTANTE   reduce using rule 39 (funcion_predef -> camina .)
    KW_REINICIAR    reduce using rule 39 (funcion_predef -> camina .)
    KW_INPUT        reduce using rule 39 (funcion_predef -> camina .)
    KW_OUTPUT       reduce using rule 39 (funcion_predef -> camina .)
    KW_SALTA_A      reduce using rule 39 (funcion_predef -> camina .)
    OP_LLAVE_DER    reduce using rule 39 (funcion_predef -> camina .)


state 53

    (40) funcion_predef -> gira .

    ID              reduce using rule 40 (funcion_predef -> gira .)
    KW_SI           reduce using rule 40 (funcion_predef -> gira .)
    KW_MIENTRAS     reduce using rule 40 (funcion_predef -> gira .)
    KW_CAMINA       reduce using rule 40 (funcion_predef -> gira .)
    KW_GIRA         reduce using rule 40 (funcion_predef -> gira .)
    KW_MIRA         reduce using rule 40 (funcion_predef -> gira .)
    KW_A_STRING     reduce using rule 40 (funcion_predef -> gira .)
    KW_A_ENTERO     reduce using rule 40 (funcion_predef -> gira .)
    KW_A_FLOTANTE   reduce using rule 40 (funcion_predef -> gira .)
    KW_REINICIAR    reduce using rule 40 (funcion_predef -> gira .)
    KW_INPUT        reduce using rule 40 (funcion_predef -> gira .)
    KW_OUTPUT       reduce using rule 40 (funcion_predef -> gira .)
    KW_SALTA_A      reduce using rule 40 (funcion_predef -> gira .)
    OP_LLAVE_DER    reduce using rule 40 (funcion_predef -> gira .)


state 54

    (28) estatuto -> ejec_funcion .

    ID              reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_SI           reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_MIENTRAS     reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_CAMINA       reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_GIRA         reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_MIRA         reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_A_STRING     reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_A_ENTERO     reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_A_FLOTANTE   reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_REINICIAR    reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_INPUT        reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_OUTPUT       reduce using rule 28 (estatuto -> ejec_funcion .)
    KW_SALTA_A      reduce using rule 28 (estatuto -> ejec_funcion .)
    OP_LLAVE_DER    reduce using rule 28 (estatuto -> ejec_funcion .)


state 55

    (105) reiniciar -> KW_REINICIAR . OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 81


state 56

    (78) condicion -> KW_SI . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no

    OP_PARENTESIS_IZQ shift and go to state 82


state 57

    (29) estatuto -> funcion_predef .

    ID              reduce using rule 29 (estatuto -> funcion_predef .)
    KW_SI           reduce using rule 29 (estatuto -> funcion_predef .)
    KW_MIENTRAS     reduce using rule 29 (estatuto -> funcion_predef .)
    KW_CAMINA       reduce using rule 29 (estatuto -> funcion_predef .)
    KW_GIRA         reduce using rule 29 (estatuto -> funcion_predef .)
    KW_MIRA         reduce using rule 29 (estatuto -> funcion_predef .)
    KW_A_STRING     reduce using rule 29 (estatuto -> funcion_predef .)
    KW_A_ENTERO     reduce using rule 29 (estatuto -> funcion_predef .)
    KW_A_FLOTANTE   reduce using rule 29 (estatuto -> funcion_predef .)
    KW_REINICIAR    reduce using rule 29 (estatuto -> funcion_predef .)
    KW_INPUT        reduce using rule 29 (estatuto -> funcion_predef .)
    KW_OUTPUT       reduce using rule 29 (estatuto -> funcion_predef .)
    KW_SALTA_A      reduce using rule 29 (estatuto -> funcion_predef .)
    OP_LLAVE_DER    reduce using rule 29 (estatuto -> funcion_predef .)


state 58

    (33) ciclo -> KW_MIENTRAS . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est

    OP_PARENTESIS_IZQ shift and go to state 83


state 59

    (27) estatuto -> ciclo .

    ID              reduce using rule 27 (estatuto -> ciclo .)
    KW_SI           reduce using rule 27 (estatuto -> ciclo .)
    KW_MIENTRAS     reduce using rule 27 (estatuto -> ciclo .)
    KW_CAMINA       reduce using rule 27 (estatuto -> ciclo .)
    KW_GIRA         reduce using rule 27 (estatuto -> ciclo .)
    KW_MIRA         reduce using rule 27 (estatuto -> ciclo .)
    KW_A_STRING     reduce using rule 27 (estatuto -> ciclo .)
    KW_A_ENTERO     reduce using rule 27 (estatuto -> ciclo .)
    KW_A_FLOTANTE   reduce using rule 27 (estatuto -> ciclo .)
    KW_REINICIAR    reduce using rule 27 (estatuto -> ciclo .)
    KW_INPUT        reduce using rule 27 (estatuto -> ciclo .)
    KW_OUTPUT       reduce using rule 27 (estatuto -> ciclo .)
    KW_SALTA_A      reduce using rule 27 (estatuto -> ciclo .)
    OP_LLAVE_DER    reduce using rule 27 (estatuto -> ciclo .)


state 60

    (30) estatuto_rec -> estatuto . estatuto_rec
    (30) estatuto_rec -> . estatuto estatuto_rec
    (31) estatuto_rec -> . empty
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . ejec_funcion
    (29) estatuto -> . funcion_predef
    (1) empty -> .
    (32) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (78) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (33) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (34) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (39) funcion_predef -> . camina
    (40) funcion_predef -> . gira
    (41) funcion_predef -> . mira
    (42) funcion_predef -> . a_string
    (43) funcion_predef -> . a_entero
    (44) funcion_predef -> . a_flotante
    (45) funcion_predef -> . reiniciar
    (46) funcion_predef -> . input
    (47) funcion_predef -> . output
    (48) funcion_predef -> . salta_a
    (68) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (69) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (70) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (102) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (105) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (109) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (110) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_LLAVE_DER    reduce using rule 1 (empty -> .)
    ID              shift and go to state 71
    KW_SI           shift and go to state 56
    KW_MIENTRAS     shift and go to state 58
    KW_CAMINA       shift and go to state 69
    KW_GIRA         shift and go to state 66
    KW_MIRA         shift and go to state 77
    KW_A_STRING     shift and go to state 63
    KW_A_ENTERO     shift and go to state 74
    KW_A_FLOTANTE   shift and go to state 76
    KW_REINICIAR    shift and go to state 55
    KW_INPUT        shift and go to state 70
    KW_OUTPUT       shift and go to state 79
    KW_SALTA_A      shift and go to state 49

    reiniciar                      shift and go to state 50
    a_string                       shift and go to state 51
    camina                         shift and go to state 52
    gira                           shift and go to state 53
    ejec_funcion                   shift and go to state 54
    funcion_predef                 shift and go to state 57
    a_entero                       shift and go to state 72
    estatuto                       shift and go to state 60
    condicion                      shift and go to state 61
    input                          shift and go to state 68
    empty                          shift and go to state 64
    mira                           shift and go to state 65
    estatuto_rec                   shift and go to state 84
    a_flotante                     shift and go to state 62
    ciclo                          shift and go to state 59
    asignacion                     shift and go to state 73
    salta_a                        shift and go to state 75
    output                         shift and go to state 78

state 61

    (26) estatuto -> condicion .

    ID              reduce using rule 26 (estatuto -> condicion .)
    KW_SI           reduce using rule 26 (estatuto -> condicion .)
    KW_MIENTRAS     reduce using rule 26 (estatuto -> condicion .)
    KW_CAMINA       reduce using rule 26 (estatuto -> condicion .)
    KW_GIRA         reduce using rule 26 (estatuto -> condicion .)
    KW_MIRA         reduce using rule 26 (estatuto -> condicion .)
    KW_A_STRING     reduce using rule 26 (estatuto -> condicion .)
    KW_A_ENTERO     reduce using rule 26 (estatuto -> condicion .)
    KW_A_FLOTANTE   reduce using rule 26 (estatuto -> condicion .)
    KW_REINICIAR    reduce using rule 26 (estatuto -> condicion .)
    KW_INPUT        reduce using rule 26 (estatuto -> condicion .)
    KW_OUTPUT       reduce using rule 26 (estatuto -> condicion .)
    KW_SALTA_A      reduce using rule 26 (estatuto -> condicion .)
    OP_LLAVE_DER    reduce using rule 26 (estatuto -> condicion .)


state 62

    (44) funcion_predef -> a_flotante .

    ID              reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_SI           reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_MIENTRAS     reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_CAMINA       reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_GIRA         reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_MIRA         reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_A_STRING     reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_A_ENTERO     reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_A_FLOTANTE   reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_REINICIAR    reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_INPUT        reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_OUTPUT       reduce using rule 44 (funcion_predef -> a_flotante .)
    KW_SALTA_A      reduce using rule 44 (funcion_predef -> a_flotante .)
    OP_LLAVE_DER    reduce using rule 44 (funcion_predef -> a_flotante .)


state 63

    (71) a_string -> KW_A_STRING . OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 85


state 64

    (31) estatuto_rec -> empty .

    OP_LLAVE_DER    reduce using rule 31 (estatuto_rec -> empty .)


state 65

    (41) funcion_predef -> mira .

    ID              reduce using rule 41 (funcion_predef -> mira .)
    KW_SI           reduce using rule 41 (funcion_predef -> mira .)
    KW_MIENTRAS     reduce using rule 41 (funcion_predef -> mira .)
    KW_CAMINA       reduce using rule 41 (funcion_predef -> mira .)
    KW_GIRA         reduce using rule 41 (funcion_predef -> mira .)
    KW_MIRA         reduce using rule 41 (funcion_predef -> mira .)
    KW_A_STRING     reduce using rule 41 (funcion_predef -> mira .)
    KW_A_ENTERO     reduce using rule 41 (funcion_predef -> mira .)
    KW_A_FLOTANTE   reduce using rule 41 (funcion_predef -> mira .)
    KW_REINICIAR    reduce using rule 41 (funcion_predef -> mira .)
    KW_INPUT        reduce using rule 41 (funcion_predef -> mira .)
    KW_OUTPUT       reduce using rule 41 (funcion_predef -> mira .)
    KW_SALTA_A      reduce using rule 41 (funcion_predef -> mira .)
    OP_LLAVE_DER    reduce using rule 41 (funcion_predef -> mira .)


state 66

    (69) gira -> KW_GIRA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 86


state 67

    (18) bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec . OP_LLAVE_DER

    OP_LLAVE_DER    shift and go to state 87


state 68

    (46) funcion_predef -> input .

    ID              reduce using rule 46 (funcion_predef -> input .)
    KW_SI           reduce using rule 46 (funcion_predef -> input .)
    KW_MIENTRAS     reduce using rule 46 (funcion_predef -> input .)
    KW_CAMINA       reduce using rule 46 (funcion_predef -> input .)
    KW_GIRA         reduce using rule 46 (funcion_predef -> input .)
    KW_MIRA         reduce using rule 46 (funcion_predef -> input .)
    KW_A_STRING     reduce using rule 46 (funcion_predef -> input .)
    KW_A_ENTERO     reduce using rule 46 (funcion_predef -> input .)
    KW_A_FLOTANTE   reduce using rule 46 (funcion_predef -> input .)
    KW_REINICIAR    reduce using rule 46 (funcion_predef -> input .)
    KW_INPUT        reduce using rule 46 (funcion_predef -> input .)
    KW_OUTPUT       reduce using rule 46 (funcion_predef -> input .)
    KW_SALTA_A      reduce using rule 46 (funcion_predef -> input .)
    OP_LLAVE_DER    reduce using rule 46 (funcion_predef -> input .)


state 69

    (68) camina -> KW_CAMINA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 88


state 70

    (106) input -> KW_INPUT . OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 89


state 71

    (32) asignacion -> ID . arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (34) ejec_funcion -> ID . OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_PARENTESIS_IZQ shift and go to state 91
    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 90

state 72

    (43) funcion_predef -> a_entero .

    ID              reduce using rule 43 (funcion_predef -> a_entero .)
    KW_SI           reduce using rule 43 (funcion_predef -> a_entero .)
    KW_MIENTRAS     reduce using rule 43 (funcion_predef -> a_entero .)
    KW_CAMINA       reduce using rule 43 (funcion_predef -> a_entero .)
    KW_GIRA         reduce using rule 43 (funcion_predef -> a_entero .)
    KW_MIRA         reduce using rule 43 (funcion_predef -> a_entero .)
    KW_A_STRING     reduce using rule 43 (funcion_predef -> a_entero .)
    KW_A_ENTERO     reduce using rule 43 (funcion_predef -> a_entero .)
    KW_A_FLOTANTE   reduce using rule 43 (funcion_predef -> a_entero .)
    KW_REINICIAR    reduce using rule 43 (funcion_predef -> a_entero .)
    KW_INPUT        reduce using rule 43 (funcion_predef -> a_entero .)
    KW_OUTPUT       reduce using rule 43 (funcion_predef -> a_entero .)
    KW_SALTA_A      reduce using rule 43 (funcion_predef -> a_entero .)
    OP_LLAVE_DER    reduce using rule 43 (funcion_predef -> a_entero .)


state 73

    (25) estatuto -> asignacion .

    ID              reduce using rule 25 (estatuto -> asignacion .)
    KW_SI           reduce using rule 25 (estatuto -> asignacion .)
    KW_MIENTRAS     reduce using rule 25 (estatuto -> asignacion .)
    KW_CAMINA       reduce using rule 25 (estatuto -> asignacion .)
    KW_GIRA         reduce using rule 25 (estatuto -> asignacion .)
    KW_MIRA         reduce using rule 25 (estatuto -> asignacion .)
    KW_A_STRING     reduce using rule 25 (estatuto -> asignacion .)
    KW_A_ENTERO     reduce using rule 25 (estatuto -> asignacion .)
    KW_A_FLOTANTE   reduce using rule 25 (estatuto -> asignacion .)
    KW_REINICIAR    reduce using rule 25 (estatuto -> asignacion .)
    KW_INPUT        reduce using rule 25 (estatuto -> asignacion .)
    KW_OUTPUT       reduce using rule 25 (estatuto -> asignacion .)
    KW_SALTA_A      reduce using rule 25 (estatuto -> asignacion .)
    OP_LLAVE_DER    reduce using rule 25 (estatuto -> asignacion .)


state 74

    (75) a_entero -> KW_A_ENTERO . OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 92


state 75

    (48) funcion_predef -> salta_a .

    ID              reduce using rule 48 (funcion_predef -> salta_a .)
    KW_SI           reduce using rule 48 (funcion_predef -> salta_a .)
    KW_MIENTRAS     reduce using rule 48 (funcion_predef -> salta_a .)
    KW_CAMINA       reduce using rule 48 (funcion_predef -> salta_a .)
    KW_GIRA         reduce using rule 48 (funcion_predef -> salta_a .)
    KW_MIRA         reduce using rule 48 (funcion_predef -> salta_a .)
    KW_A_STRING     reduce using rule 48 (funcion_predef -> salta_a .)
    KW_A_ENTERO     reduce using rule 48 (funcion_predef -> salta_a .)
    KW_A_FLOTANTE   reduce using rule 48 (funcion_predef -> salta_a .)
    KW_REINICIAR    reduce using rule 48 (funcion_predef -> salta_a .)
    KW_INPUT        reduce using rule 48 (funcion_predef -> salta_a .)
    KW_OUTPUT       reduce using rule 48 (funcion_predef -> salta_a .)
    KW_SALTA_A      reduce using rule 48 (funcion_predef -> salta_a .)
    OP_LLAVE_DER    reduce using rule 48 (funcion_predef -> salta_a .)


state 76

    (102) a_flotante -> KW_A_FLOTANTE . OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 93


state 77

    (70) mira -> KW_MIRA . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 94


state 78

    (47) funcion_predef -> output .

    ID              reduce using rule 47 (funcion_predef -> output .)
    KW_SI           reduce using rule 47 (funcion_predef -> output .)
    KW_MIENTRAS     reduce using rule 47 (funcion_predef -> output .)
    KW_CAMINA       reduce using rule 47 (funcion_predef -> output .)
    KW_GIRA         reduce using rule 47 (funcion_predef -> output .)
    KW_MIRA         reduce using rule 47 (funcion_predef -> output .)
    KW_A_STRING     reduce using rule 47 (funcion_predef -> output .)
    KW_A_ENTERO     reduce using rule 47 (funcion_predef -> output .)
    KW_A_FLOTANTE   reduce using rule 47 (funcion_predef -> output .)
    KW_REINICIAR    reduce using rule 47 (funcion_predef -> output .)
    KW_INPUT        reduce using rule 47 (funcion_predef -> output .)
    KW_OUTPUT       reduce using rule 47 (funcion_predef -> output .)
    KW_SALTA_A      reduce using rule 47 (funcion_predef -> output .)
    OP_LLAVE_DER    reduce using rule 47 (funcion_predef -> output .)


state 79

    (109) output -> KW_OUTPUT . OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_IZQ shift and go to state 95


state 80

    (110) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ . CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    CTE_E           shift and go to state 96


state 81

    (105) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 97


state 82

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER bloque_est si_no
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 117
    comp_or                        shift and go to state 113
    comp_and                       shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 100
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    concat_string                  shift and go to state 104

state 83

    (33) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER bloque_est
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 120
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    comp_and                       shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 100
    termino                        shift and go to state 103
    exp                            shift and go to state 119

state 84

    (30) estatuto_rec -> estatuto estatuto_rec .

    OP_LLAVE_DER    reduce using rule 30 (estatuto_rec -> estatuto estatuto_rec .)


state 85

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ . a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (72) a_string2 -> . CTE_E
    (73) a_string2 -> . CTE_F
    (74) a_string2 -> . ID arr_not arr_not

    CTE_E           shift and go to state 124
    CTE_F           shift and go to state 123
    ID              shift and go to state 122

    a_string2                      shift and go to state 121

state 86

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 125
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 87

    (18) bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .

    KW_FUNCION      reduce using rule 18 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)
    KW_INICIO       reduce using rule 18 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)
    $end            reduce using rule 18 (bloque_func -> OP_LLAVE_IZQ crear_var estatuto_rec OP_LLAVE_DER .)


state 88

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 126
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 89

    (106) input -> KW_INPUT OP_PARENTESIS_IZQ . ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA

    ID              shift and go to state 127


state 90

    (32) asignacion -> ID arr_not . arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 128

state 91

    (34) ejec_funcion -> ID OP_PARENTESIS_IZQ . ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (35) ejec_funcion_medio -> . expresion ejec_funcion_cont
    (36) ejec_funcion_medio -> . empty
    (49) expresion -> . comp_or otra_expresion_or
    (1) empty -> .
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 131
    comp_or                        shift and go to state 113
    ejec_funcion_medio             shift and go to state 130
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109
    empty                          shift and go to state 129
    concat_string                  shift and go to state 104

state 92

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ . a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (76) a_entero2 -> . CTE_F
    (77) a_entero2 -> . concat_string
    (99) concat_string -> . CTE_S concat_string2

    CTE_F           shift and go to state 133
    CTE_S           shift and go to state 105

    a_entero2                      shift and go to state 134
    concat_string                  shift and go to state 132

state 93

    (102) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ . a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (103) a_flotante2 -> . concat_string
    (104) a_flotante2 -> . CTE_F
    (99) concat_string -> . CTE_S concat_string2

    CTE_F           shift and go to state 137
    CTE_S           shift and go to state 105

    a_flotante2                    shift and go to state 135
    concat_string                  shift and go to state 136

state 94

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 138
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 95

    (109) output -> KW_OUTPUT OP_PARENTESIS_IZQ . concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (99) concat_string -> . CTE_S concat_string2

    CTE_S           shift and go to state 105

    concat_string                  shift and go to state 139

state 96

    (110) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E . OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_COMA         shift and go to state 140


state 97

    (105) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 141


state 98

    (66) factor -> OP_TERMINO . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 142

state 99

    (88) var_cte -> KW_NORTE .

    OP_FACTOR       reduce using rule 88 (var_cte -> KW_NORTE .)
    OP_TERMINO      reduce using rule 88 (var_cte -> KW_NORTE .)
    OP_COMPARADOR   reduce using rule 88 (var_cte -> KW_NORTE .)
    OP_AND          reduce using rule 88 (var_cte -> KW_NORTE .)
    OP_OR           reduce using rule 88 (var_cte -> KW_NORTE .)
    OP_COMA         reduce using rule 88 (var_cte -> KW_NORTE .)
    OP_PARENTESIS_DER reduce using rule 88 (var_cte -> KW_NORTE .)
    OP_PUNTO_COMA   reduce using rule 88 (var_cte -> KW_NORTE .)


state 100

    (67) factor -> var_cte .

    OP_FACTOR       reduce using rule 67 (factor -> var_cte .)
    OP_TERMINO      reduce using rule 67 (factor -> var_cte .)
    OP_COMPARADOR   reduce using rule 67 (factor -> var_cte .)
    OP_AND          reduce using rule 67 (factor -> var_cte .)
    OP_OR           reduce using rule 67 (factor -> var_cte .)
    OP_PARENTESIS_DER reduce using rule 67 (factor -> var_cte .)
    OP_COMA         reduce using rule 67 (factor -> var_cte .)
    OP_PUNTO_COMA   reduce using rule 67 (factor -> var_cte .)


state 101

    (93) var_cte -> KW_ALTO .

    OP_FACTOR       reduce using rule 93 (var_cte -> KW_ALTO .)
    OP_TERMINO      reduce using rule 93 (var_cte -> KW_ALTO .)
    OP_COMPARADOR   reduce using rule 93 (var_cte -> KW_ALTO .)
    OP_AND          reduce using rule 93 (var_cte -> KW_ALTO .)
    OP_OR           reduce using rule 93 (var_cte -> KW_ALTO .)
    OP_COMA         reduce using rule 93 (var_cte -> KW_ALTO .)
    OP_PARENTESIS_DER reduce using rule 93 (var_cte -> KW_ALTO .)
    OP_PUNTO_COMA   reduce using rule 93 (var_cte -> KW_ALTO .)


state 102

    (90) var_cte -> KW_ESTE .

    OP_FACTOR       reduce using rule 90 (var_cte -> KW_ESTE .)
    OP_TERMINO      reduce using rule 90 (var_cte -> KW_ESTE .)
    OP_COMPARADOR   reduce using rule 90 (var_cte -> KW_ESTE .)
    OP_AND          reduce using rule 90 (var_cte -> KW_ESTE .)
    OP_OR           reduce using rule 90 (var_cte -> KW_ESTE .)
    OP_COMA         reduce using rule 90 (var_cte -> KW_ESTE .)
    OP_PARENTESIS_DER reduce using rule 90 (var_cte -> KW_ESTE .)
    OP_PUNTO_COMA   reduce using rule 90 (var_cte -> KW_ESTE .)


state 103

    (59) exp -> termino . exp2
    (60) exp2 -> . OP_TERMINO exp
    (61) exp2 -> . empty
    (1) empty -> .

    OP_TERMINO      shift and go to state 143
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    exp2                           shift and go to state 144
    empty                          shift and go to state 145

state 104

    (85) var_cte -> concat_string .

    OP_FACTOR       reduce using rule 85 (var_cte -> concat_string .)
    OP_TERMINO      reduce using rule 85 (var_cte -> concat_string .)
    OP_COMPARADOR   reduce using rule 85 (var_cte -> concat_string .)
    OP_AND          reduce using rule 85 (var_cte -> concat_string .)
    OP_OR           reduce using rule 85 (var_cte -> concat_string .)
    OP_COMA         reduce using rule 85 (var_cte -> concat_string .)
    OP_PARENTESIS_DER reduce using rule 85 (var_cte -> concat_string .)
    OP_PUNTO_COMA   reduce using rule 85 (var_cte -> concat_string .)


state 105

    (99) concat_string -> CTE_S . concat_string2
    (100) concat_string2 -> . OP_PUNTO CTE_S
    (101) concat_string2 -> . empty
    (1) empty -> .

    OP_PUNTO        shift and go to state 146
    OP_FACTOR       reduce using rule 1 (empty -> .)
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    concat_string2                 shift and go to state 147
    empty                          shift and go to state 148

state 106

    (87) var_cte -> KW_FALSO .

    OP_FACTOR       reduce using rule 87 (var_cte -> KW_FALSO .)
    OP_TERMINO      reduce using rule 87 (var_cte -> KW_FALSO .)
    OP_COMPARADOR   reduce using rule 87 (var_cte -> KW_FALSO .)
    OP_AND          reduce using rule 87 (var_cte -> KW_FALSO .)
    OP_OR           reduce using rule 87 (var_cte -> KW_FALSO .)
    OP_COMA         reduce using rule 87 (var_cte -> KW_FALSO .)
    OP_PARENTESIS_DER reduce using rule 87 (var_cte -> KW_FALSO .)
    OP_PUNTO_COMA   reduce using rule 87 (var_cte -> KW_FALSO .)


state 107

    (52) comp_or -> comp_and . otra_expresion_and
    (53) otra_expresion_and -> . OP_AND comp_and
    (54) otra_expresion_and -> . empty
    (1) empty -> .

    OP_AND          shift and go to state 150
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_expresion_and             shift and go to state 149
    empty                          shift and go to state 151

state 108

    (91) var_cte -> KW_OESTE .

    OP_FACTOR       reduce using rule 91 (var_cte -> KW_OESTE .)
    OP_TERMINO      reduce using rule 91 (var_cte -> KW_OESTE .)
    OP_COMPARADOR   reduce using rule 91 (var_cte -> KW_OESTE .)
    OP_AND          reduce using rule 91 (var_cte -> KW_OESTE .)
    OP_OR           reduce using rule 91 (var_cte -> KW_OESTE .)
    OP_COMA         reduce using rule 91 (var_cte -> KW_OESTE .)
    OP_PARENTESIS_DER reduce using rule 91 (var_cte -> KW_OESTE .)
    OP_PUNTO_COMA   reduce using rule 91 (var_cte -> KW_OESTE .)


state 109

    (62) termino -> factor . termino2
    (63) termino2 -> . OP_FACTOR termino
    (64) termino2 -> . empty
    (1) empty -> .

    OP_FACTOR       shift and go to state 152
    OP_TERMINO      reduce using rule 1 (empty -> .)
    OP_COMPARADOR   reduce using rule 1 (empty -> .)
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    termino2                       shift and go to state 153
    empty                          shift and go to state 154

state 110

    (84) var_cte -> CTE_F .

    OP_FACTOR       reduce using rule 84 (var_cte -> CTE_F .)
    OP_TERMINO      reduce using rule 84 (var_cte -> CTE_F .)
    OP_COMPARADOR   reduce using rule 84 (var_cte -> CTE_F .)
    OP_AND          reduce using rule 84 (var_cte -> CTE_F .)
    OP_OR           reduce using rule 84 (var_cte -> CTE_F .)
    OP_COMA         reduce using rule 84 (var_cte -> CTE_F .)
    OP_PARENTESIS_DER reduce using rule 84 (var_cte -> CTE_F .)
    OP_PUNTO_COMA   reduce using rule 84 (var_cte -> CTE_F .)


state 111

    (83) var_cte -> CTE_E .

    OP_FACTOR       reduce using rule 83 (var_cte -> CTE_E .)
    OP_TERMINO      reduce using rule 83 (var_cte -> CTE_E .)
    OP_COMPARADOR   reduce using rule 83 (var_cte -> CTE_E .)
    OP_AND          reduce using rule 83 (var_cte -> CTE_E .)
    OP_OR           reduce using rule 83 (var_cte -> CTE_E .)
    OP_COMA         reduce using rule 83 (var_cte -> CTE_E .)
    OP_PARENTESIS_DER reduce using rule 83 (var_cte -> CTE_E .)
    OP_PUNTO_COMA   reduce using rule 83 (var_cte -> CTE_E .)


state 112

    (89) var_cte -> KW_SUR .

    OP_FACTOR       reduce using rule 89 (var_cte -> KW_SUR .)
    OP_TERMINO      reduce using rule 89 (var_cte -> KW_SUR .)
    OP_COMPARADOR   reduce using rule 89 (var_cte -> KW_SUR .)
    OP_AND          reduce using rule 89 (var_cte -> KW_SUR .)
    OP_OR           reduce using rule 89 (var_cte -> KW_SUR .)
    OP_COMA         reduce using rule 89 (var_cte -> KW_SUR .)
    OP_PARENTESIS_DER reduce using rule 89 (var_cte -> KW_SUR .)
    OP_PUNTO_COMA   reduce using rule 89 (var_cte -> KW_SUR .)


state 113

    (49) expresion -> comp_or . otra_expresion_or
    (50) otra_expresion_or -> . OP_OR comp_or
    (51) otra_expresion_or -> . empty
    (1) empty -> .

    OP_OR           shift and go to state 155
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    otra_expresion_or              shift and go to state 156
    empty                          shift and go to state 157

state 114

    (65) factor -> OP_PARENTESIS_IZQ . expresion OP_PARENTESIS_DER
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 158
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 115

    (92) var_cte -> KW_ANCHO .

    OP_FACTOR       reduce using rule 92 (var_cte -> KW_ANCHO .)
    OP_TERMINO      reduce using rule 92 (var_cte -> KW_ANCHO .)
    OP_COMPARADOR   reduce using rule 92 (var_cte -> KW_ANCHO .)
    OP_AND          reduce using rule 92 (var_cte -> KW_ANCHO .)
    OP_OR           reduce using rule 92 (var_cte -> KW_ANCHO .)
    OP_COMA         reduce using rule 92 (var_cte -> KW_ANCHO .)
    OP_PARENTESIS_DER reduce using rule 92 (var_cte -> KW_ANCHO .)
    OP_PUNTO_COMA   reduce using rule 92 (var_cte -> KW_ANCHO .)


state 116

    (82) var_cte -> ID . var_cte2
    (94) var_cte2 -> . arr_not arr_not
    (95) var_cte2 -> . OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_PARENTESIS_IZQ shift and go to state 161
    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 160
    var_cte2                       shift and go to state 159

state 117

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER bloque_est si_no

    OP_PARENTESIS_DER shift and go to state 162


state 118

    (86) var_cte -> KW_VERDADERO .

    OP_FACTOR       reduce using rule 86 (var_cte -> KW_VERDADERO .)
    OP_TERMINO      reduce using rule 86 (var_cte -> KW_VERDADERO .)
    OP_COMPARADOR   reduce using rule 86 (var_cte -> KW_VERDADERO .)
    OP_AND          reduce using rule 86 (var_cte -> KW_VERDADERO .)
    OP_OR           reduce using rule 86 (var_cte -> KW_VERDADERO .)
    OP_COMA         reduce using rule 86 (var_cte -> KW_VERDADERO .)
    OP_PARENTESIS_DER reduce using rule 86 (var_cte -> KW_VERDADERO .)
    OP_PUNTO_COMA   reduce using rule 86 (var_cte -> KW_VERDADERO .)


state 119

    (55) comp_and -> exp . comp_and_end
    (56) comp_and_end -> . op_comparador exp
    (57) comp_and_end -> . empty
    (58) op_comparador -> . OP_COMPARADOR
    (1) empty -> .

    OP_COMPARADOR   shift and go to state 164
    OP_AND          reduce using rule 1 (empty -> .)
    OP_OR           reduce using rule 1 (empty -> .)
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)
    OP_COMA         reduce using rule 1 (empty -> .)
    OP_PUNTO_COMA   reduce using rule 1 (empty -> .)

    comp_and_end                   shift and go to state 163
    empty                          shift and go to state 165
    op_comparador                  shift and go to state 166

state 120

    (33) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER bloque_est

    OP_PARENTESIS_DER shift and go to state 167


state 121

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 168


state 122

    (74) a_string2 -> ID . arr_not arr_not
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 169

state 123

    (73) a_string2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 73 (a_string2 -> CTE_F .)


state 124

    (72) a_string2 -> CTE_E .

    OP_PARENTESIS_DER reduce using rule 72 (a_string2 -> CTE_E .)


state 125

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 170


state 126

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 171


state 127

    (106) input -> KW_INPUT OP_PARENTESIS_IZQ ID . input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (107) input2 -> . OP_COMA ID input2
    (108) input2 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 173
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    input2                         shift and go to state 172
    empty                          shift and go to state 174

state 128

    (32) asignacion -> ID arr_not arr_not . OP_ASIGNACION expresion OP_PUNTO_COMA

    OP_ASIGNACION   shift and go to state 175


state 129

    (36) ejec_funcion_medio -> empty .

    OP_PARENTESIS_DER reduce using rule 36 (ejec_funcion_medio -> empty .)


state 130

    (34) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 176


state 131

    (35) ejec_funcion_medio -> expresion . ejec_funcion_cont
    (37) ejec_funcion_cont -> . OP_COMA expresion ejec_funcion_cont
    (38) ejec_funcion_cont -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 177
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    empty                          shift and go to state 178
    ejec_funcion_cont              shift and go to state 179

state 132

    (77) a_entero2 -> concat_string .

    OP_PARENTESIS_DER reduce using rule 77 (a_entero2 -> concat_string .)


state 133

    (76) a_entero2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 76 (a_entero2 -> CTE_F .)


state 134

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 180


state 135

    (102) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 181


state 136

    (103) a_flotante2 -> concat_string .

    OP_PARENTESIS_DER reduce using rule 103 (a_flotante2 -> concat_string .)


state 137

    (104) a_flotante2 -> CTE_F .

    OP_PARENTESIS_DER reduce using rule 104 (a_flotante2 -> CTE_F .)


state 138

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 182


state 139

    (109) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 183


state 140

    (110) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA . CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    CTE_E           shift and go to state 184


state 141

    (105) reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 105 (reiniciar -> KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 142

    (66) factor -> OP_TERMINO var_cte .

    OP_FACTOR       reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_TERMINO      reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_COMPARADOR   reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_AND          reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_OR           reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_PARENTESIS_DER reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_COMA         reduce using rule 66 (factor -> OP_TERMINO var_cte .)
    OP_PUNTO_COMA   reduce using rule 66 (factor -> OP_TERMINO var_cte .)


state 143

    (60) exp2 -> OP_TERMINO . exp
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    termino                        shift and go to state 103
    exp                            shift and go to state 185
    factor                         shift and go to state 109

state 144

    (59) exp -> termino exp2 .

    OP_AND          reduce using rule 59 (exp -> termino exp2 .)
    OP_OR           reduce using rule 59 (exp -> termino exp2 .)
    OP_PARENTESIS_DER reduce using rule 59 (exp -> termino exp2 .)
    OP_COMA         reduce using rule 59 (exp -> termino exp2 .)
    OP_PUNTO_COMA   reduce using rule 59 (exp -> termino exp2 .)
    OP_COMPARADOR   reduce using rule 59 (exp -> termino exp2 .)


state 145

    (61) exp2 -> empty .

    OP_COMPARADOR   reduce using rule 61 (exp2 -> empty .)
    OP_AND          reduce using rule 61 (exp2 -> empty .)
    OP_OR           reduce using rule 61 (exp2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 61 (exp2 -> empty .)
    OP_COMA         reduce using rule 61 (exp2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 61 (exp2 -> empty .)


state 146

    (100) concat_string2 -> OP_PUNTO . CTE_S

    CTE_S           shift and go to state 186


state 147

    (99) concat_string -> CTE_S concat_string2 .

    OP_FACTOR       reduce using rule 99 (concat_string -> CTE_S concat_string2 .)
    OP_TERMINO      reduce using rule 99 (concat_string -> CTE_S concat_string2 .)
    OP_COMPARADOR   reduce using rule 99 (concat_string -> CTE_S concat_string2 .)
    OP_AND          reduce using rule 99 (concat_string -> CTE_S concat_string2 .)
    OP_OR           reduce using rule 99 (concat_string -> CTE_S concat_string2 .)
    OP_PARENTESIS_DER reduce using rule 99 (concat_string -> CTE_S concat_string2 .)
    OP_COMA         reduce using rule 99 (concat_string -> CTE_S concat_string2 .)
    OP_PUNTO_COMA   reduce using rule 99 (concat_string -> CTE_S concat_string2 .)


state 148

    (101) concat_string2 -> empty .

    OP_FACTOR       reduce using rule 101 (concat_string2 -> empty .)
    OP_TERMINO      reduce using rule 101 (concat_string2 -> empty .)
    OP_COMPARADOR   reduce using rule 101 (concat_string2 -> empty .)
    OP_AND          reduce using rule 101 (concat_string2 -> empty .)
    OP_OR           reduce using rule 101 (concat_string2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 101 (concat_string2 -> empty .)
    OP_COMA         reduce using rule 101 (concat_string2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 101 (concat_string2 -> empty .)


state 149

    (52) comp_or -> comp_and otra_expresion_and .

    OP_OR           reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)
    OP_PARENTESIS_DER reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)
    OP_COMA         reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)
    OP_PUNTO_COMA   reduce using rule 52 (comp_or -> comp_and otra_expresion_and .)


state 150

    (53) otra_expresion_and -> OP_AND . comp_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 187
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 151

    (54) otra_expresion_and -> empty .

    OP_OR           reduce using rule 54 (otra_expresion_and -> empty .)
    OP_PARENTESIS_DER reduce using rule 54 (otra_expresion_and -> empty .)
    OP_COMA         reduce using rule 54 (otra_expresion_and -> empty .)
    OP_PUNTO_COMA   reduce using rule 54 (otra_expresion_and -> empty .)


state 152

    (63) termino2 -> OP_FACTOR . termino
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    termino                        shift and go to state 188
    factor                         shift and go to state 109

state 153

    (62) termino -> factor termino2 .

    OP_TERMINO      reduce using rule 62 (termino -> factor termino2 .)
    OP_COMPARADOR   reduce using rule 62 (termino -> factor termino2 .)
    OP_AND          reduce using rule 62 (termino -> factor termino2 .)
    OP_OR           reduce using rule 62 (termino -> factor termino2 .)
    OP_PARENTESIS_DER reduce using rule 62 (termino -> factor termino2 .)
    OP_COMA         reduce using rule 62 (termino -> factor termino2 .)
    OP_PUNTO_COMA   reduce using rule 62 (termino -> factor termino2 .)


state 154

    (64) termino2 -> empty .

    OP_TERMINO      reduce using rule 64 (termino2 -> empty .)
    OP_COMPARADOR   reduce using rule 64 (termino2 -> empty .)
    OP_AND          reduce using rule 64 (termino2 -> empty .)
    OP_OR           reduce using rule 64 (termino2 -> empty .)
    OP_PARENTESIS_DER reduce using rule 64 (termino2 -> empty .)
    OP_COMA         reduce using rule 64 (termino2 -> empty .)
    OP_PUNTO_COMA   reduce using rule 64 (termino2 -> empty .)


state 155

    (50) otra_expresion_or -> OP_OR . comp_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    comp_or                        shift and go to state 189
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 156

    (49) expresion -> comp_or otra_expresion_or .

    OP_PUNTO_COMA   reduce using rule 49 (expresion -> comp_or otra_expresion_or .)
    OP_PARENTESIS_DER reduce using rule 49 (expresion -> comp_or otra_expresion_or .)
    OP_COMA         reduce using rule 49 (expresion -> comp_or otra_expresion_or .)


state 157

    (51) otra_expresion_or -> empty .

    OP_PARENTESIS_DER reduce using rule 51 (otra_expresion_or -> empty .)
    OP_COMA         reduce using rule 51 (otra_expresion_or -> empty .)
    OP_PUNTO_COMA   reduce using rule 51 (otra_expresion_or -> empty .)


state 158

    (65) factor -> OP_PARENTESIS_IZQ expresion . OP_PARENTESIS_DER

    OP_PARENTESIS_DER shift and go to state 190


state 159

    (82) var_cte -> ID var_cte2 .

    OP_FACTOR       reduce using rule 82 (var_cte -> ID var_cte2 .)
    OP_TERMINO      reduce using rule 82 (var_cte -> ID var_cte2 .)
    OP_COMPARADOR   reduce using rule 82 (var_cte -> ID var_cte2 .)
    OP_AND          reduce using rule 82 (var_cte -> ID var_cte2 .)
    OP_OR           reduce using rule 82 (var_cte -> ID var_cte2 .)
    OP_COMA         reduce using rule 82 (var_cte -> ID var_cte2 .)
    OP_PARENTESIS_DER reduce using rule 82 (var_cte -> ID var_cte2 .)
    OP_PUNTO_COMA   reduce using rule 82 (var_cte -> ID var_cte2 .)


state 160

    (94) var_cte2 -> arr_not . arr_not
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 191

state 161

    (95) var_cte2 -> OP_PARENTESIS_IZQ . var_cte3 OP_PARENTESIS_DER
    (96) var_cte3 -> . expresion var_cte4
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 193
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    comp_and                       shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 100
    var_cte3                       shift and go to state 192
    termino                        shift and go to state 103
    exp                            shift and go to state 119

state 162

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . bloque_est si_no
    (81) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 195

    bloque_est                     shift and go to state 194

state 163

    (55) comp_and -> exp comp_and_end .

    OP_AND          reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_OR           reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_COMA         reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_PARENTESIS_DER reduce using rule 55 (comp_and -> exp comp_and_end .)
    OP_PUNTO_COMA   reduce using rule 55 (comp_and -> exp comp_and_end .)


state 164

    (58) op_comparador -> OP_COMPARADOR .

    OP_PARENTESIS_IZQ reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    OP_TERMINO      reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    ID              reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    CTE_E           reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    CTE_F           reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_VERDADERO    reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_FALSO        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_NORTE        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_SUR          reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_ESTE         reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_OESTE        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_ANCHO        reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    KW_ALTO         reduce using rule 58 (op_comparador -> OP_COMPARADOR .)
    CTE_S           reduce using rule 58 (op_comparador -> OP_COMPARADOR .)


state 165

    (57) comp_and_end -> empty .

    OP_AND          reduce using rule 57 (comp_and_end -> empty .)
    OP_OR           reduce using rule 57 (comp_and_end -> empty .)
    OP_PARENTESIS_DER reduce using rule 57 (comp_and_end -> empty .)
    OP_COMA         reduce using rule 57 (comp_and_end -> empty .)
    OP_PUNTO_COMA   reduce using rule 57 (comp_and_end -> empty .)


state 166

    (56) comp_and_end -> op_comparador . exp
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    termino                        shift and go to state 103
    exp                            shift and go to state 196
    factor                         shift and go to state 109

state 167

    (33) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . bloque_est
    (81) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 195

    bloque_est                     shift and go to state 197

state 168

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 198


state 169

    (74) a_string2 -> ID arr_not . arr_not
    (22) arr_not -> . OP_CORCHETE_IZQ CTE_E OP_CORCHETE_DER

    OP_CORCHETE_IZQ shift and go to state 25

    arr_not                        shift and go to state 199

state 170

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 200


state 171

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 201


state 172

    (106) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 202


state 173

    (107) input2 -> OP_COMA . ID input2

    ID              shift and go to state 203


state 174

    (108) input2 -> empty .

    OP_PARENTESIS_DER reduce using rule 108 (input2 -> empty .)


state 175

    (32) asignacion -> ID arr_not arr_not OP_ASIGNACION . expresion OP_PUNTO_COMA
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 204
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 176

    (34) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 205


state 177

    (37) ejec_funcion_cont -> OP_COMA . expresion ejec_funcion_cont
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 206
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 178

    (38) ejec_funcion_cont -> empty .

    OP_PARENTESIS_DER reduce using rule 38 (ejec_funcion_cont -> empty .)


state 179

    (35) ejec_funcion_medio -> expresion ejec_funcion_cont .

    OP_PARENTESIS_DER reduce using rule 35 (ejec_funcion_medio -> expresion ejec_funcion_cont .)


state 180

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 207


state 181

    (102) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 208


state 182

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 209


state 183

    (109) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 210


state 184

    (110) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E . OP_PARENTESIS_DER OP_PUNTO_COMA

    OP_PARENTESIS_DER shift and go to state 211


state 185

    (60) exp2 -> OP_TERMINO exp .

    OP_COMPARADOR   reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_AND          reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_OR           reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_PARENTESIS_DER reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_COMA         reduce using rule 60 (exp2 -> OP_TERMINO exp .)
    OP_PUNTO_COMA   reduce using rule 60 (exp2 -> OP_TERMINO exp .)


state 186

    (100) concat_string2 -> OP_PUNTO CTE_S .

    OP_FACTOR       reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_TERMINO      reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_COMPARADOR   reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_AND          reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_OR           reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_PARENTESIS_DER reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_COMA         reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)
    OP_PUNTO_COMA   reduce using rule 100 (concat_string2 -> OP_PUNTO CTE_S .)


state 187

    (53) otra_expresion_and -> OP_AND comp_and .

    OP_OR           reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)
    OP_PARENTESIS_DER reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)
    OP_COMA         reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)
    OP_PUNTO_COMA   reduce using rule 53 (otra_expresion_and -> OP_AND comp_and .)


state 188

    (63) termino2 -> OP_FACTOR termino .

    OP_TERMINO      reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_COMPARADOR   reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_AND          reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_OR           reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_PARENTESIS_DER reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_COMA         reduce using rule 63 (termino2 -> OP_FACTOR termino .)
    OP_PUNTO_COMA   reduce using rule 63 (termino2 -> OP_FACTOR termino .)


state 189

    (50) otra_expresion_or -> OP_OR comp_or .

    OP_PARENTESIS_DER reduce using rule 50 (otra_expresion_or -> OP_OR comp_or .)
    OP_COMA         reduce using rule 50 (otra_expresion_or -> OP_OR comp_or .)
    OP_PUNTO_COMA   reduce using rule 50 (otra_expresion_or -> OP_OR comp_or .)


state 190

    (65) factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .

    OP_FACTOR       reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_TERMINO      reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_COMPARADOR   reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_AND          reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_OR           reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_PARENTESIS_DER reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_COMA         reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)
    OP_PUNTO_COMA   reduce using rule 65 (factor -> OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER .)


state 191

    (94) var_cte2 -> arr_not arr_not .

    OP_FACTOR       reduce using rule 94 (var_cte2 -> arr_not arr_not .)
    OP_TERMINO      reduce using rule 94 (var_cte2 -> arr_not arr_not .)
    OP_COMPARADOR   reduce using rule 94 (var_cte2 -> arr_not arr_not .)
    OP_AND          reduce using rule 94 (var_cte2 -> arr_not arr_not .)
    OP_OR           reduce using rule 94 (var_cte2 -> arr_not arr_not .)
    OP_PARENTESIS_DER reduce using rule 94 (var_cte2 -> arr_not arr_not .)
    OP_COMA         reduce using rule 94 (var_cte2 -> arr_not arr_not .)
    OP_PUNTO_COMA   reduce using rule 94 (var_cte2 -> arr_not arr_not .)


state 192

    (95) var_cte2 -> OP_PARENTESIS_IZQ var_cte3 . OP_PARENTESIS_DER

    OP_PARENTESIS_DER shift and go to state 212


state 193

    (96) var_cte3 -> expresion . var_cte4
    (97) var_cte4 -> . OP_COMA expresion var_cte4
    (98) var_cte4 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 213
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    var_cte4                       shift and go to state 214
    empty                          shift and go to state 215

state 194

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est . si_no
    (79) si_no -> . KW_SI_NO bloque_est
    (80) si_no -> . empty
    (1) empty -> .

    KW_SI_NO        shift and go to state 217
    ID              reduce using rule 1 (empty -> .)
    KW_SI           reduce using rule 1 (empty -> .)
    KW_MIENTRAS     reduce using rule 1 (empty -> .)
    KW_CAMINA       reduce using rule 1 (empty -> .)
    KW_GIRA         reduce using rule 1 (empty -> .)
    KW_MIRA         reduce using rule 1 (empty -> .)
    KW_A_STRING     reduce using rule 1 (empty -> .)
    KW_A_ENTERO     reduce using rule 1 (empty -> .)
    KW_A_FLOTANTE   reduce using rule 1 (empty -> .)
    KW_REINICIAR    reduce using rule 1 (empty -> .)
    KW_INPUT        reduce using rule 1 (empty -> .)
    KW_OUTPUT       reduce using rule 1 (empty -> .)
    KW_SALTA_A      reduce using rule 1 (empty -> .)
    OP_LLAVE_DER    reduce using rule 1 (empty -> .)

    si_no                          shift and go to state 216
    empty                          shift and go to state 218

state 195

    (81) bloque_est -> OP_LLAVE_IZQ . estatuto OP_LLAVE_DER
    (25) estatuto -> . asignacion
    (26) estatuto -> . condicion
    (27) estatuto -> . ciclo
    (28) estatuto -> . ejec_funcion
    (29) estatuto -> . funcion_predef
    (32) asignacion -> . ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA
    (78) condicion -> . KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no
    (33) ciclo -> . KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est
    (34) ejec_funcion -> . ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA
    (39) funcion_predef -> . camina
    (40) funcion_predef -> . gira
    (41) funcion_predef -> . mira
    (42) funcion_predef -> . a_string
    (43) funcion_predef -> . a_entero
    (44) funcion_predef -> . a_flotante
    (45) funcion_predef -> . reiniciar
    (46) funcion_predef -> . input
    (47) funcion_predef -> . output
    (48) funcion_predef -> . salta_a
    (68) camina -> . KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (69) gira -> . KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (70) mira -> . KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA
    (71) a_string -> . KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (75) a_entero -> . KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (102) a_flotante -> . KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (105) reiniciar -> . KW_REINICIAR OP_PARENTESIS_IZQ OP_PARENTESIS_DER OP_PUNTO_COMA
    (106) input -> . KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA
    (109) output -> . KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA
    (110) salta_a -> . KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA

    ID              shift and go to state 71
    KW_SI           shift and go to state 56
    KW_MIENTRAS     shift and go to state 58
    KW_CAMINA       shift and go to state 69
    KW_GIRA         shift and go to state 66
    KW_MIRA         shift and go to state 77
    KW_A_STRING     shift and go to state 63
    KW_A_ENTERO     shift and go to state 74
    KW_A_FLOTANTE   shift and go to state 76
    KW_REINICIAR    shift and go to state 55
    KW_INPUT        shift and go to state 70
    KW_OUTPUT       shift and go to state 79
    KW_SALTA_A      shift and go to state 49

    reiniciar                      shift and go to state 50
    a_string                       shift and go to state 51
    camina                         shift and go to state 52
    gira                           shift and go to state 53
    ejec_funcion                   shift and go to state 54
    funcion_predef                 shift and go to state 57
    a_entero                       shift and go to state 72
    estatuto                       shift and go to state 219
    condicion                      shift and go to state 61
    input                          shift and go to state 68
    mira                           shift and go to state 65
    a_flotante                     shift and go to state 62
    ciclo                          shift and go to state 59
    asignacion                     shift and go to state 73
    salta_a                        shift and go to state 75
    output                         shift and go to state 78

state 196

    (56) comp_and_end -> op_comparador exp .

    OP_AND          reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_OR           reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_PARENTESIS_DER reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_COMA         reduce using rule 56 (comp_and_end -> op_comparador exp .)
    OP_PUNTO_COMA   reduce using rule 56 (comp_and_end -> op_comparador exp .)


state 197

    (33) ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .

    ID              reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_SI           reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_MIENTRAS     reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_CAMINA       reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_GIRA         reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_MIRA         reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_A_STRING     reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_A_ENTERO     reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_A_FLOTANTE   reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_REINICIAR    reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_INPUT        reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_OUTPUT       reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    KW_SALTA_A      reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)
    OP_LLAVE_DER    reduce using rule 33 (ciclo -> KW_MIENTRAS OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est .)


state 198

    (71) a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 71 (a_string -> KW_A_STRING OP_PARENTESIS_IZQ a_string2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 199

    (74) a_string2 -> ID arr_not arr_not .

    OP_PARENTESIS_DER reduce using rule 74 (a_string2 -> ID arr_not arr_not .)


state 200

    (69) gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 69 (gira -> KW_GIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 201

    (68) camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 68 (camina -> KW_CAMINA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 202

    (106) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 220


state 203

    (107) input2 -> OP_COMA ID . input2
    (107) input2 -> . OP_COMA ID input2
    (108) input2 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 173
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    input2                         shift and go to state 221
    empty                          shift and go to state 174

state 204

    (32) asignacion -> ID arr_not arr_not OP_ASIGNACION expresion . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 222


state 205

    (34) ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 34 (ejec_funcion -> ID OP_PARENTESIS_IZQ ejec_funcion_medio OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 206

    (37) ejec_funcion_cont -> OP_COMA expresion . ejec_funcion_cont
    (37) ejec_funcion_cont -> . OP_COMA expresion ejec_funcion_cont
    (38) ejec_funcion_cont -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 177
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    empty                          shift and go to state 178
    ejec_funcion_cont              shift and go to state 223

state 207

    (75) a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 75 (a_entero -> KW_A_ENTERO OP_PARENTESIS_IZQ a_entero2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 208

    (102) a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 102 (a_flotante -> KW_A_FLOTANTE OP_PARENTESIS_IZQ a_flotante2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 209

    (70) mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 70 (mira -> KW_MIRA OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 210

    (109) output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .

    OP_LLAVE_DER    reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    ID              reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 109 (output -> KW_OUTPUT OP_PARENTESIS_IZQ concat_string OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 211

    (110) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER . OP_PUNTO_COMA

    OP_PUNTO_COMA   shift and go to state 224


state 212

    (95) var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .

    OP_FACTOR       reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_TERMINO      reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_COMPARADOR   reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_AND          reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_OR           reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_PARENTESIS_DER reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_COMA         reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)
    OP_PUNTO_COMA   reduce using rule 95 (var_cte2 -> OP_PARENTESIS_IZQ var_cte3 OP_PARENTESIS_DER .)


state 213

    (97) var_cte4 -> OP_COMA . expresion var_cte4
    (49) expresion -> . comp_or otra_expresion_or
    (52) comp_or -> . comp_and otra_expresion_and
    (55) comp_and -> . exp comp_and_end
    (59) exp -> . termino exp2
    (62) termino -> . factor termino2
    (65) factor -> . OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER
    (66) factor -> . OP_TERMINO var_cte
    (67) factor -> . var_cte
    (82) var_cte -> . ID var_cte2
    (83) var_cte -> . CTE_E
    (84) var_cte -> . CTE_F
    (85) var_cte -> . concat_string
    (86) var_cte -> . KW_VERDADERO
    (87) var_cte -> . KW_FALSO
    (88) var_cte -> . KW_NORTE
    (89) var_cte -> . KW_SUR
    (90) var_cte -> . KW_ESTE
    (91) var_cte -> . KW_OESTE
    (92) var_cte -> . KW_ANCHO
    (93) var_cte -> . KW_ALTO
    (99) concat_string -> . CTE_S concat_string2

    OP_PARENTESIS_IZQ shift and go to state 114
    OP_TERMINO      shift and go to state 98
    ID              shift and go to state 116
    CTE_E           shift and go to state 111
    CTE_F           shift and go to state 110
    KW_VERDADERO    shift and go to state 118
    KW_FALSO        shift and go to state 106
    KW_NORTE        shift and go to state 99
    KW_SUR          shift and go to state 112
    KW_ESTE         shift and go to state 102
    KW_OESTE        shift and go to state 108
    KW_ANCHO        shift and go to state 115
    KW_ALTO         shift and go to state 101
    CTE_S           shift and go to state 105

    expresion                      shift and go to state 225
    comp_or                        shift and go to state 113
    concat_string                  shift and go to state 104
    var_cte                        shift and go to state 100
    comp_and                       shift and go to state 107
    termino                        shift and go to state 103
    exp                            shift and go to state 119
    factor                         shift and go to state 109

state 214

    (96) var_cte3 -> expresion var_cte4 .

    OP_PARENTESIS_DER reduce using rule 96 (var_cte3 -> expresion var_cte4 .)


state 215

    (98) var_cte4 -> empty .

    OP_PARENTESIS_DER reduce using rule 98 (var_cte4 -> empty .)


state 216

    (78) condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .

    ID              reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_SI           reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_MIENTRAS     reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_CAMINA       reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_GIRA         reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_MIRA         reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_A_STRING     reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_A_ENTERO     reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_A_FLOTANTE   reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_REINICIAR    reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_INPUT        reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_OUTPUT       reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    KW_SALTA_A      reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)
    OP_LLAVE_DER    reduce using rule 78 (condicion -> KW_SI OP_PARENTESIS_IZQ expresion OP_PARENTESIS_DER bloque_est si_no .)


state 217

    (79) si_no -> KW_SI_NO . bloque_est
    (81) bloque_est -> . OP_LLAVE_IZQ estatuto OP_LLAVE_DER

    OP_LLAVE_IZQ    shift and go to state 195

    bloque_est                     shift and go to state 226

state 218

    (80) si_no -> empty .

    ID              reduce using rule 80 (si_no -> empty .)
    KW_SI           reduce using rule 80 (si_no -> empty .)
    KW_MIENTRAS     reduce using rule 80 (si_no -> empty .)
    KW_CAMINA       reduce using rule 80 (si_no -> empty .)
    KW_GIRA         reduce using rule 80 (si_no -> empty .)
    KW_MIRA         reduce using rule 80 (si_no -> empty .)
    KW_A_STRING     reduce using rule 80 (si_no -> empty .)
    KW_A_ENTERO     reduce using rule 80 (si_no -> empty .)
    KW_A_FLOTANTE   reduce using rule 80 (si_no -> empty .)
    KW_REINICIAR    reduce using rule 80 (si_no -> empty .)
    KW_INPUT        reduce using rule 80 (si_no -> empty .)
    KW_OUTPUT       reduce using rule 80 (si_no -> empty .)
    KW_SALTA_A      reduce using rule 80 (si_no -> empty .)
    OP_LLAVE_DER    reduce using rule 80 (si_no -> empty .)


state 219

    (81) bloque_est -> OP_LLAVE_IZQ estatuto . OP_LLAVE_DER

    OP_LLAVE_DER    shift and go to state 227


state 220

    (106) input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 106 (input -> KW_INPUT OP_PARENTESIS_IZQ ID input2 OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 221

    (107) input2 -> OP_COMA ID input2 .

    OP_PARENTESIS_DER reduce using rule 107 (input2 -> OP_COMA ID input2 .)


state 222

    (32) asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .

    ID              reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_SI           reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 32 (asignacion -> ID arr_not arr_not OP_ASIGNACION expresion OP_PUNTO_COMA .)


state 223

    (37) ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont .

    OP_PARENTESIS_DER reduce using rule 37 (ejec_funcion_cont -> OP_COMA expresion ejec_funcion_cont .)


state 224

    (110) salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .

    ID              reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SI           reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIENTRAS     reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_CAMINA       reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_GIRA         reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_MIRA         reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_STRING     reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_ENTERO     reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_A_FLOTANTE   reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_REINICIAR    reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_INPUT        reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_OUTPUT       reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    KW_SALTA_A      reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)
    OP_LLAVE_DER    reduce using rule 110 (salta_a -> KW_SALTA_A OP_PARENTESIS_IZQ CTE_E OP_COMA CTE_E OP_PARENTESIS_DER OP_PUNTO_COMA .)


state 225

    (97) var_cte4 -> OP_COMA expresion . var_cte4
    (97) var_cte4 -> . OP_COMA expresion var_cte4
    (98) var_cte4 -> . empty
    (1) empty -> .

    OP_COMA         shift and go to state 213
    OP_PARENTESIS_DER reduce using rule 1 (empty -> .)

    var_cte4                       shift and go to state 228
    empty                          shift and go to state 215

state 226

    (79) si_no -> KW_SI_NO bloque_est .

    ID              reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_SI           reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_MIENTRAS     reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_CAMINA       reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_GIRA         reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_MIRA         reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_A_STRING     reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_A_ENTERO     reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_A_FLOTANTE   reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_REINICIAR    reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_INPUT        reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_OUTPUT       reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    KW_SALTA_A      reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)
    OP_LLAVE_DER    reduce using rule 79 (si_no -> KW_SI_NO bloque_est .)


state 227

    (81) bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .

    KW_SI_NO        reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    ID              reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SI           reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_MIENTRAS     reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_CAMINA       reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_GIRA         reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_MIRA         reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_A_STRING     reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_A_ENTERO     reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_A_FLOTANTE   reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_REINICIAR    reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_INPUT        reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_OUTPUT       reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    KW_SALTA_A      reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)
    OP_LLAVE_DER    reduce using rule 81 (bloque_est -> OP_LLAVE_IZQ estatuto OP_LLAVE_DER .)


state 228

    (97) var_cte4 -> OP_COMA expresion var_cte4 .

    OP_PARENTESIS_DER reduce using rule 97 (var_cte4 -> OP_COMA expresion var_cte4 .)

